Extracting name entities from utterance: 0
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room keep going and stop when you reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=575 request_id=3f707252b6815606559c64f204d97896 response_code=200
Extracting name entities from utterance: 1
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room via the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=5d31081800310241b19da4fbf0c7cdaf response_code=200
Extracting name entities from utterance: 2
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=cfa38413b03c5ba003f17ab0f0ce5dd8 response_code=200
Extracting name entities from utterance: 3
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo over towards the blue room and up through it to the green rectangular room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=696 request_id=665e5192a71eabbf4624828ff6d5f8ad response_code=200
Extracting name entities from utterance: 4
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue to get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=c123846a607742f0fd34edc59739332c response_code=200
Extracting name entities from utterance: 5
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue room to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=8eae4a25fac7280581b1bfc113aa59c1 response_code=200
Extracting name entities from utterance: 6
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfollow the path through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=b3d5ab05c4c4ce7dc614f86fc7eb522a response_code=200
Extracting name entities from utterance: 7
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=822 request_id=3c83f4dad0fa5d6843aab465c8977c93 response_code=200
Extracting name entities from utterance: 8
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue rooms to get to the green one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=548 request_id=99f2fdfc95108922e3a13a90cbf9286e response_code=200
Extracting name entities from utterance: 9
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntake the blue room first which leads to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=957 request_id=260b2abb5194078a1e88135af1294dae response_code=200
Extracting name entities from utterance: 10
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nonly go to the green room by first entering the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=6e167a8002d53330e57b3a9d1a1fb297 response_code=200
Extracting name entities from utterance: 11
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room through the blue one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=747 request_id=0abde785ece4f5154eea1c584ce53694 response_code=200
Extracting name entities from utterance: 12
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=a9d42a0bc5266549d410c4c39aaf5590 response_code=200
Extracting name entities from utterance: 13
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green area through blue area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=279 request_id=339d2e70e74992f11d437eac9693bf97 response_code=200
Extracting name entities from utterance: 14
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue to get to green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=18dd1b6aa2c91afba776bc3ac05808b9 response_code=200
Extracting name entities from utterance: 15
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue room to get to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=946 request_id=1ac7b43e89b008c96ff241ec0ef4082b response_code=200
Extracting name entities from utterance: 16
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=368 request_id=68aaeb8e5bcd92d58f53f96cb407d410 response_code=200
Extracting name entities from utterance: 17
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nplease go to the green room through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=369 request_id=e8d249644be304b6ef0f7b09849ea5f2 response_code=200
Extracting name entities from utterance: 18
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel through the blue square room to the large green rectangular room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=6486fb67b963f0f55f08a0eeb161a0f3 response_code=200
Extracting name entities from utterance: 19
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=e893f1281ff31b1a77f91e1d3a1ba09c response_code=200
Extracting name entities from utterance: 20
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through a blue room and into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=9f462d4a2de0410ce9c03ff73f2c4b2c response_code=200
Extracting name entities from utterance: 21
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue to reach green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=dd1a7130256b72db3a110da44eecd8ef response_code=200
Extracting name entities from utterance: 22
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room through blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=1a5ab88865c89213e9bac919e4c44d60 response_code=200
Extracting name entities from utterance: 23
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the blue room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=11453982807aa60fbd6a4fa7f68814ad response_code=200
Extracting name entities from utterance: 24
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=25a175c3bba48900633c3e45d5f191dc response_code=200
Extracting name entities from utterance: 25
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=447 request_id=fe118d7bcdbba0571f0e5620a5bb4424 response_code=200
Extracting name entities from utterance: 26
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=300 request_id=5d363550a3065e6ff1bc02f693fe0cd8 response_code=200
Extracting name entities from utterance: 27
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the blue room and then the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=af0069982fe1362f89322365428dd794 response_code=200
Extracting name entities from utterance: 28
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green rectangle via blue square\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1231 request_id=039f64f912df99d05e8853cdbdb55e68 response_code=200
Extracting name entities from utterance: 29
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=727 request_id=7cfd36ed1f7e32d1bb463ac08e94b75d response_code=200
Extracting name entities from utterance: 30
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=6ecdcff922d986562104b11660fa72ff response_code=200
Extracting name entities from utterance: 31
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room then to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=806 request_id=a5afbd7ef6e572cc518dd903a47b88d5 response_code=200
Extracting name entities from utterance: 32
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room via the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=723 request_id=105fe73c3bee7e9eeef12cd9dddc3cef response_code=200
Extracting name entities from utterance: 33
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel through the blue room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1207 request_id=81dbad40bad45935c8830b6633eb70e0 response_code=200
Extracting name entities from utterance: 34
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to large green room through blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=684 request_id=b075975e2ffafdf0f64608dd8604051c response_code=200
Extracting name entities from utterance: 35
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room only and then the green room only\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=622 request_id=166716cc0c9869303f5a0a0e6918326d response_code=200
Extracting name entities from utterance: 36
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nnavigate through blue to reach green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=975 request_id=da1d0f367b23fd4b764be7700c148252 response_code=200
Extracting name entities from utterance: 37
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=09bcee0e17d03ab98f9f7a5188c9862b response_code=200
Extracting name entities from utterance: 38
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmake your way to the green room by going through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=8033f3e42a42c0e9f5315a5b983ea89f response_code=200
Extracting name entities from utterance: 39
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot moves through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=6bb923ec21e701109531a8868bd65431 response_code=200
Extracting name entities from utterance: 40
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room and proceed until the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=37410aaef0c90b03cc4f40c6edd70e3d response_code=200
Extracting name entities from utterance: 41
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room towards the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=352 request_id=a0c89a3da2ff404ab4ea3ae1f7ed7ce6 response_code=200
Extracting name entities from utterance: 42
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=972 request_id=ed9ef507ef6bf5f2ee27ae98eeace12b response_code=200
Extracting name entities from utterance: 43
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room by passing through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=455 request_id=7cfc834470d610442a56335ed5838242 response_code=200
Extracting name entities from utterance: 44
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the door to the blue room and exit the other door into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=740 request_id=70e904cf55b2331fa179e5b14345d415 response_code=200
Extracting name entities from utterance: 45
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=936 request_id=7c16d893266cfdb0eb4ba9630e46313b response_code=200
Extracting name entities from utterance: 46
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter green room via blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=564 request_id=ccea0217058381947bb0fd9ad78102a0 response_code=200
Extracting name entities from utterance: 47
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue room to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=370 request_id=71271d90affce72228c39ded1431d82b response_code=200
Extracting name entities from utterance: 48
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room until you get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=352 request_id=aec8127414bdf4afab2ef867e2a3539d response_code=200
Extracting name entities from utterance: 49
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=370 request_id=b9a22aa5909a4940821b9c40838b3613 response_code=200
Extracting name entities from utterance: 50
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel through the blue room to go into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=d07a3a563818cfb547ea4905bcd7364b response_code=200
Extracting name entities from utterance: 51
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room via the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=913 request_id=966e64858438dba603ae4c176c3b12f8 response_code=200
Extracting name entities from utterance: 52
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nalways walk through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=d00225b07dd2958fe30145f416569cbe response_code=200
Extracting name entities from utterance: 53
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot moves towards the green room through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=c378e40c71a188467c61d28179636507 response_code=200
Extracting name entities from utterance: 54
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo thru the blue box to get to the green box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=30da34a6527ab5c9a942cd46583125f8 response_code=200
Extracting name entities from utterance: 55
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room and then to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=dd59a7d757d1327b9a52100ed7e93e4a response_code=200
Extracting name entities from utterance: 56
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ninstead of going through the red room move through the blue room to enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=563 request_id=40ff21c20471aae6bc37d1ecc3098a76 response_code=200
Extracting name entities from utterance: 57
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room then to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=48f557dc9fe3f1b4f3d1d9aa1b373e82 response_code=200
Extracting name entities from utterance: 58
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room in to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=d5cbdc764ec7c20603b4b148a48f0f27 response_code=200
Extracting name entities from utterance: 59
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo thru the blue to get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=c259478232e27525fec04013ba119157 response_code=200
Extracting name entities from utterance: 60
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=423 request_id=b6482cd9d1fc07ebcd8326fd117d3d1c response_code=200
Extracting name entities from utterance: 61
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=652feb52de45426695bb33e6fe0fbc2b response_code=200
Extracting name entities from utterance: 62
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot goes to the blue to get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=493 request_id=25923b7f84c246598977891f31795878 response_code=200
Extracting name entities from utterance: 63
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwalk pass the blue room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=2030870838924a2bb916857fc92978de response_code=200
Extracting name entities from utterance: 64
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large green room by passing through the small blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=886 request_id=0f344d5ae6ac9f240f59ce34d9bdc543 response_code=200
Extracting name entities from utterance: 65
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room and then the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1485 request_id=b3b2e3f347a431e7ba5c9d87e06e9c80 response_code=200
Extracting name entities from utterance: 66
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=8575e5667a9d58fd6d48e3a674195523 response_code=200
Extracting name entities from utterance: 67
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nyou must walk through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=408e064d1a2d15ba16d8712ac0711499 response_code=200
Extracting name entities from utterance: 68
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=17739b9b18629ca5fd6c19e904a4216b response_code=200
Extracting name entities from utterance: 69
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room only through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=699 request_id=a305064445966e1f3c89a4c11a1b53c3 response_code=200
Extracting name entities from utterance: 70
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room and enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=bd49d3ee9c4e6d5cb98748968aa4d4b5 response_code=200
Extracting name entities from utterance: 71
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwalk through the blue room until you reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=500 request_id=7f4b77d51aa9a3f3cee0f96bac366854 response_code=200
Extracting name entities from utterance: 72
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ncross the blue room only to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=f6a7e04fe3534bf8970d7d63867c0f0c response_code=200
Extracting name entities from utterance: 73
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room then go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=350 request_id=a9b2cf26b203c2b44375b53d19c076f4 response_code=200
Extracting name entities from utterance: 74
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=d4da233af37b6e4db2073b6846d0cb16 response_code=200
Extracting name entities from utterance: 75
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=571 request_id=8c796dca50c2b6c311af6fb51c49fe00 response_code=200
Extracting name entities from utterance: 76
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room via the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=419 request_id=0ce7e178737152845b133e42fe7aa4e8 response_code=200
Extracting name entities from utterance: 77
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the door to the blue room and continue into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=922 request_id=e5c51f66e371eadbd9fe209d87cc7ce0 response_code=200
Extracting name entities from utterance: 78
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfirst enter the blue room and then proceed to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=f18eb6c3d16a2d4838c7a8563c704d7e response_code=200
Extracting name entities from utterance: 79
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove toward the blue room then into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=636 request_id=3d2c5398a90c33427256e0dcb3f34a26 response_code=200
Extracting name entities from utterance: 80
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the green room while being sure to pass through only the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=b918286ac4a525103cdafa43e5d9dde1 response_code=200
Extracting name entities from utterance: 81
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room by first entering the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=94481fbc43a3b708ae3306f61a285e72 response_code=200
Extracting name entities from utterance: 82
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the blue room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=2a6c747b8de5a5c32af6a95ac1c11dd8 response_code=200
Extracting name entities from utterance: 83
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot goes through the blue to get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=4abe32243d25265dfb10ae923a91d9dc response_code=200
Extracting name entities from utterance: 84
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=873 request_id=d4445353629c00e2409b2a1b3e1744d9 response_code=200
Extracting name entities from utterance: 85
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=828 request_id=6eef4dd83820f8cca778b421a4a208cf response_code=200
Extracting name entities from utterance: 86
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room by way of the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=471455d93d4afddfa1d5c0fb6841a5f7 response_code=200
Extracting name entities from utterance: 87
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room while moving to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=659 request_id=9b7e48d490d27066d72db7881c6854cf response_code=200
Extracting name entities from utterance: 88
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the small blue room to get to the large green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=672 request_id=7bc66aeefb365d5698467a55f469b26f response_code=200
Extracting name entities from utterance: 89
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=4be152e72d3f2ea79a56ba113d00da14 response_code=200
Extracting name entities from utterance: 90
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green rooms to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=e69088a0c2ccc22e82c1b5168d5de25a response_code=200
Extracting name entities from utterance: 91
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo from the pink room to the blue room by going through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1464 request_id=d1a7c9c6691360a0239699eec2797bbb response_code=200
Extracting name entities from utterance: 92
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=652 request_id=4c4e8443a7f2480531b12b09ac0184ae response_code=200
Extracting name entities from utterance: 93
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the small green room to get to the large blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=874 request_id=3590ab197c5ce517de4daa286e3bd28c response_code=200
Extracting name entities from utterance: 94
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room by going through the green room first\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=635 request_id=57325d33fba774502db97e499aaeac9d response_code=200
Extracting name entities from utterance: 95
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the blue room through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=094b9d2a1a32ef81df1e95ec977ebeab response_code=200
Extracting name entities from utterance: 96
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=f0facad4113cea5091341d22bd049f83 response_code=200
Extracting name entities from utterance: 97
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green box to get to the blue area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=458 request_id=e9f2f12e6e91d89d631d5c5d58539274 response_code=200
Extracting name entities from utterance: 98
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room in to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=a99530b0ba287915186ad94075aeafa1 response_code=200
Extracting name entities from utterance: 99
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter blue room through green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=545 request_id=d7c4ab6d0df3b4bc4b8f31870fbeb03d response_code=200
Extracting name entities from utterance: 100
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nrobot goes through green and ends up in blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1402 request_id=c45692fd4e51d2506273e8903d7ef12f response_code=200
Extracting name entities from utterance: 101
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the blue room but only via the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=e90c2c588f1cc23fdd3498299cbcb34a response_code=200
Extracting name entities from utterance: 102
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=5330b09b541483a5b0311d29fc7bdc25 response_code=200
Extracting name entities from utterance: 103
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=a35e4d245f42971ccfae5f0eabffb3c1 response_code=200
Extracting name entities from utterance: 104
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room through the green door only\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=d7921279c2ed66a8b09701ef1dbf9d2e response_code=200
Extracting name entities from utterance: 105
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot must go into the blue room by going through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=350 request_id=1282b4684bf2d943c35eeb1a5c124061 response_code=200
Extracting name entities from utterance: 106
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=8355fdcd871d90fa5323e969fe5befc5 response_code=200
Extracting name entities from utterance: 107
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue area through green area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=5e15292ca5c74d269e2562a27465640c response_code=200
Extracting name entities from utterance: 108
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green room before blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=31b1d49ba8cac79837e2e5e7ca78eb39 response_code=200
Extracting name entities from utterance: 109
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room via the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=951 request_id=7922e1088707e5d3444d61bb72d5665c response_code=200
Extracting name entities from utterance: 110
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo up through the green box to the blue box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=1d54903ed91315a6ab853f3c6d5dda9b response_code=200
Extracting name entities from utterance: 111
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room through green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1038 request_id=9c78f8e4f1e8f3c916d4db1d5cd031d7 response_code=200
Extracting name entities from utterance: 112
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but only go through the green room to get there\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=288ffe908b181ff1801ab7de8bbb5cac response_code=200
Extracting name entities from utterance: 113
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=724 request_id=0aca34c261caae057be01792d4c388f2 response_code=200
Extracting name entities from utterance: 114
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nonly go through green rooms to get to blue rooms\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=52f02b482bc9ccdfae1c9de43535ded2 response_code=200
Extracting name entities from utterance: 115
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo via green color path to reach blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=caafb22b4f4053ded2fd65de03732d7f response_code=200
Extracting name entities from utterance: 116
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=441 request_id=55ec23c2351f627a2786d9f628ef7af5 response_code=200
Extracting name entities from utterance: 117
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room and then into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=a9d61a9e36949c08f54555408eaa8928 response_code=200
Extracting name entities from utterance: 118
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through green to get to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=407 request_id=1e6f1f4ef28aeaa3d014964728dbf320 response_code=200
Extracting name entities from utterance: 119
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room and then go to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=66a5874d570f5c4244de8dc0ca5f3bc2 response_code=200
Extracting name entities from utterance: 120
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot goes through the green to get to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=de24a46a0f00624c4de0a5fff25f733c response_code=200
Extracting name entities from utterance: 121
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room and make sure to go through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=489 request_id=20ab9dc6cc872d6bd97e021e57ae1a5e response_code=200
Extracting name entities from utterance: 122
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green room to gain access to the large blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=816 request_id=196e488196b224d921942f1532eaa67e response_code=200
Extracting name entities from utterance: 123
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=626 request_id=3eb6a50968b0888f73b28bc9c5dc7cf6 response_code=200
Extracting name entities from utterance: 124
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the small green room to get to the large blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=630 request_id=65c1fbba7e21494cbaef39c0fa6936c6 response_code=200
Extracting name entities from utterance: 125
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=391 request_id=b441e4160ba87e6ec9e6be5cf34a2fb8 response_code=200
Extracting name entities from utterance: 126
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green room then to blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=68c4e64efa936ff13b1e98fcbf78b4d1 response_code=200
Extracting name entities from utterance: 127
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through green rooms to get to the blue one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=390 request_id=d8c2d78064b02c1b527c919a14c90e09 response_code=200
Extracting name entities from utterance: 128
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=439 request_id=2d7bb8018cb84c6484bc5b93f0e297b1 response_code=200
Extracting name entities from utterance: 129
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=4cf9c16adecbeeea276d83e5e14977f7 response_code=200
Extracting name entities from utterance: 130
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=461 request_id=bdc064b6576d3e0ca4181ffddc9f2feb response_code=200
Extracting name entities from utterance: 131
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=d9ee55c29036a030eb2b317034a1a7d9 response_code=200
Extracting name entities from utterance: 132
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room and into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=506 request_id=29d27cfc736ad9bc130309efbf2fcf8a response_code=200
Extracting name entities from utterance: 133
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoiding all but the green rectangle travel to the blue area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=bd0d736a3ca93776074e859011e394e9 response_code=200
Extracting name entities from utterance: 134
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to reach the blue place by taking a path which has green colour and white colour in it while avoiding black yellow and red colour\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=d3ebdbd0bff1ae1565beaf59673eab48 response_code=200
Extracting name entities from utterance: 135
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=2947a449ce85bd92b92b54aaf2410d76 response_code=200
Extracting name entities from utterance: 136
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to blue room through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=369 request_id=8fcaead89de71fd58bd130e0f7ff27b3 response_code=200
Extracting name entities from utterance: 137
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=5487beedc4b4dfbd04eb12d56819a9c6 response_code=200
Extracting name entities from utterance: 138
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=074d54515121fc69e786e516dd47c7f5 response_code=200
Extracting name entities from utterance: 139
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=513 request_id=fc91007927f6ae5ced3558a40a0ab906 response_code=200
Extracting name entities from utterance: 140
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room by going though the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=838 request_id=931638a5d4f268241721a55793aa8c04 response_code=200
Extracting name entities from utterance: 141
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo towards the blue room through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=638 request_id=e1f41049c0d255c7f1115b8e5d152582 response_code=200
Extracting name entities from utterance: 142
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1308 request_id=61f74883195712bcda753b05da564afa response_code=200
Extracting name entities from utterance: 143
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=370 request_id=ec6ef60be8246185d9a8e522b11737c4 response_code=200
Extracting name entities from utterance: 144
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot goes through green to get to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=3bde347e7bd1c07c3fb484f4ede6737c response_code=200
Extracting name entities from utterance: 145
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1094 request_id=549d1dd8c8c84dc8f22a031c2960b2c4 response_code=200
Extracting name entities from utterance: 146
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room by way of the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=642 request_id=a09c01f33f2478928a6f363e887bea1d response_code=200
Extracting name entities from utterance: 147
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nprogress through green rectangle room to the large blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=80997a6f73b8ba2522a7dd6832a3a5dd response_code=200
Extracting name entities from utterance: 148
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1338 request_id=2aa93f08c6c601a0fba4d94544b9161a response_code=200
Extracting name entities from utterance: 149
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room via the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1360 request_id=b73820c0afbbaca48af887df76108704 response_code=200
Extracting name entities from utterance: 150
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nto reach the blue go through the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=949 request_id=a007be2a777587d80217a7f2cb86a949 response_code=200
Extracting name entities from utterance: 151
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room and exit into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=9e19098a10a13dbb5b7a1d15cc82375b response_code=200
Extracting name entities from utterance: 152
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel through the green room to the blue rectangular room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=b2f8d17d82154ecfcae4900bea31f522 response_code=200
Extracting name entities from utterance: 153
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green and to the blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=51687429e2499bb94edf5ff370b52ff9 response_code=200
Extracting name entities from utterance: 154
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=7bf72de50c23ea9bce0ad3717c7032b8 response_code=200
Extracting name entities from utterance: 155
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter blue room via green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=752 request_id=c10700f5875be64573938ace0c671ab0 response_code=200
Extracting name entities from utterance: 156
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=abf444c1cfcf90e5656c727569449715 response_code=200
Extracting name entities from utterance: 157
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=456 request_id=cfd46f2ab7974c26e6f649aab0a70ca3 response_code=200
Extracting name entities from utterance: 158
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo up through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=699 request_id=02da8f1394dccbf9f096cd3a09b2a651 response_code=200
Extracting name entities from utterance: 159
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=782 request_id=33ead050a82c5228907c7f2f3acc0c27 response_code=200
Extracting name entities from utterance: 160
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=7206eec29b5e1dc07c5d9f5c163c74e1 response_code=200
Extracting name entities from utterance: 161
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfollow the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1653 request_id=cb19dc9548503d7b41633ba31f64a831 response_code=200
Extracting name entities from utterance: 162
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue via green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=cdd3f92b660cb90a199fd9013632469e response_code=200
Extracting name entities from utterance: 163
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfirst enter the green room and then move to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=798 request_id=2a0bfb0e44cfee3df725f4c03dd70c4e response_code=200
Extracting name entities from utterance: 164
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove toward the green room then into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=c6a76bff1fea440dcc90bd386dc5a270 response_code=200
Extracting name entities from utterance: 165
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room in to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=c2cf06372c070d0056fa3541cc3ff73e response_code=200
Extracting name entities from utterance: 166
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green room and into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=762 request_id=80691e33dae6a6afb84c00f7d6afed97 response_code=200
Extracting name entities from utterance: 167
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=cb7a813ca5aaa170a47d1f4bb776d999 response_code=200
Extracting name entities from utterance: 168
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through green to get to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=611 request_id=2ae14f97d17e116186f8505d11929507 response_code=200
Extracting name entities from utterance: 169
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green room and out into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=384 request_id=b563959c10d8cfd28e06a551c7499010 response_code=200
Extracting name entities from utterance: 170
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=c5d441b66dd2d17fc1d848b8e03df663 response_code=200
Extracting name entities from utterance: 171
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the hallway to the blue room but only if it takes you through a green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=813 request_id=2ee8cc3968a06a3f76f8b25c26b5bb0e response_code=200
Extracting name entities from utterance: 172
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room then go to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=972 request_id=81e0951ac3b28d863ce117fc5aa8fa29 response_code=200
Extracting name entities from utterance: 173
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room and into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=643 request_id=3cf373c4f1606ba708879f71120e2ac6 response_code=200
Extracting name entities from utterance: 174
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=733 request_id=17647ab66296c0aa733709edbc7eb77f response_code=200
Extracting name entities from utterance: 175
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=806 request_id=7c5fd7369c7a6514fdd07cb224915417 response_code=200
Extracting name entities from utterance: 176
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=417 request_id=3236a31c6c2384910f25678f00585d53 response_code=200
Extracting name entities from utterance: 177
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through green rooms to get to the blue one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=df8e5e7e3113d6ffae6b06f74dddf4fc response_code=200
Extracting name entities from utterance: 178
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large blue room by passing through the small green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=814 request_id=ebee06931d2e1597d2427a2e6038ef28 response_code=200
Extracting name entities from utterance: 179
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=422 request_id=d1b378b030635e5985cf98986204f72b response_code=200
Extracting name entities from utterance: 180
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=5d50fe15009837f47f612e689cbe27aa response_code=200
Extracting name entities from utterance: 181
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=275 request_id=4559324d9bba5379885ab3a098b887a7 response_code=200
Extracting name entities from utterance: 182
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=845 request_id=f3037656708000256d5e4036fcc62c35 response_code=200
Extracting name entities from utterance: 183
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove from your room to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=575 request_id=6578a2f22722e18cbc5993061dc4c8b3 response_code=200
Extracting name entities from utterance: 184
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=27e395740da6967f09110c1948a87987 response_code=200
Extracting name entities from utterance: 185
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo in to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=6466b19279a32539f133078263b45b64 response_code=200
Extracting name entities from utterance: 186
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=7e4f5d278ac2250b042294500854550b response_code=200
Extracting name entities from utterance: 187
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the red room and stay on the first square you end up on\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=ec1148b180a8d7465e70ec26d7887fcd response_code=200
Extracting name entities from utterance: 188
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=446 request_id=358efea5d9076a5d2d82716081c44dc2 response_code=200
Extracting name entities from utterance: 189
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=522 request_id=b3bb4087242b7b155a282b6009207bfa response_code=200
Extracting name entities from utterance: 190
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=446 request_id=dd341d14f6850f93332a06eaca9133da response_code=200
Extracting name entities from utterance: 191
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=c3319a76c85201fe7e021aeab71ae491 response_code=200
Extracting name entities from utterance: 192
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=422 request_id=f509e9e89dc0798a2d01e495995d28fb response_code=200
Extracting name entities from utterance: 193
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=7c6dbd092d37136a591ee7f38bd0f7ee response_code=200
Extracting name entities from utterance: 194
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=614 request_id=a003cfbf9ddb09af0bffb5e9135b48ed response_code=200
Extracting name entities from utterance: 195
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=39f89c403e7e7f2fee0f77c400bcfa59 response_code=200
Extracting name entities from utterance: 196
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=9ac47f01ae219feac75870899e909fcc response_code=200
Extracting name entities from utterance: 197
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=436 request_id=bf6061cc962d7173bac37b6858932b2d response_code=200
Extracting name entities from utterance: 198
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1422 request_id=5f201c241f6879e28965be9660bf4d1a response_code=200
Extracting name entities from utterance: 199
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=656 request_id=834ab735e9d130e1c0ac232b042990b9 response_code=200
Extracting name entities from utterance: 200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=598 request_id=d91505f1657ddf97bb9372247796b3c5 response_code=200
Extracting name entities from utterance: 201
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=2fd32e657e6ebe34535e89977afe8366 response_code=200
Extracting name entities from utterance: 202
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=692 request_id=bb5f1afdaa1a1c570f234f7ff89fc4db response_code=200
Extracting name entities from utterance: 203
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=1f17bdc7ead37695a8bd6c662603961b response_code=200
Extracting name entities from utterance: 204
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=f2e9626113cd1b37afcfe2059eb241fb response_code=200
Extracting name entities from utterance: 205
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=862 request_id=fdef77647ecb466e2f10f54534b19615 response_code=200
Extracting name entities from utterance: 206
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=611 request_id=5c41bcba8d0537dbdc0d1bbe65be8bf0 response_code=200
Extracting name entities from utterance: 207
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=797b41411a5340c17283fe3e2f2fd0bc response_code=200
Extracting name entities from utterance: 208
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=546 request_id=9d6b190ec9ca6b923c8036e04d49c33b response_code=200
Extracting name entities from utterance: 209
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=5f4d1a2399ba22ace44bc901f263b42f response_code=200
Extracting name entities from utterance: 210
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=451 request_id=0d6591863dc67ace573a274a978c1ccf response_code=200
Extracting name entities from utterance: 211
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=442 request_id=d4da2d79734da9ee73a1be1e70acc454 response_code=200
Extracting name entities from utterance: 212
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=3a4e67a2ad61583476bee9e8d4ebdfa0 response_code=200
Extracting name entities from utterance: 213
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=637dd00ba4342cd5a08b80611d572b25 response_code=200
Extracting name entities from utterance: 214
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=607 request_id=32b964b632b601ca957882774b02d3a5 response_code=200
Extracting name entities from utterance: 215
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=993 request_id=bb9285fba113a520de1957359eed857d response_code=200
Extracting name entities from utterance: 216
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=d71eacfb3ba2f529a159af9c79e597ff response_code=200
Extracting name entities from utterance: 217
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=eb45ce725a55b9bd7d9ace9d983c2b45 response_code=200
Extracting name entities from utterance: 218
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=935 request_id=edc32fee089a5254a4c955fd239b1bb8 response_code=200
Extracting name entities from utterance: 219
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=546 request_id=2e3c9a8711685b06bfd3752b1d38a6a6 response_code=200
Extracting name entities from utterance: 220
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=54cc82ce7dd7cdea4c0e892b1619bbec response_code=200
Extracting name entities from utterance: 221
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=c608bee944d151683f1faa49471d93cb response_code=200
Extracting name entities from utterance: 222
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=428 request_id=42220c7aff1e02b0aa6fb87ce0b51b2c response_code=200
Extracting name entities from utterance: 223
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=53073d24277ed32dd4555b739fbe5778 response_code=200
Extracting name entities from utterance: 224
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1644 request_id=b8b2f1d8a9731fbbc3170c157153d104 response_code=200
Extracting name entities from utterance: 225
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=0afe167e8a60f044e34d880a686a2708 response_code=200
Extracting name entities from utterance: 226
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=7217a19c54d4bc6bcd9532396c1a133b response_code=200
Extracting name entities from utterance: 227
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=5532e860a77119eb44266c48555526bc response_code=200
Extracting name entities from utterance: 228
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=de3214e8035d3274d5c4128f90ff236c response_code=200
Extracting name entities from utterance: 229
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=61ec38424f7258523d396e1ad871da6d response_code=200
Extracting name entities from utterance: 230
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=172841ba4aa7fc4c0b017f53a8991bfd response_code=200
Extracting name entities from utterance: 231
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=614 request_id=8a5646fc1908258c605662234cc65fd7 response_code=200
Extracting name entities from utterance: 232
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=3662c1b7391dbf22fdbc2f52119e2bd6 response_code=200
Extracting name entities from utterance: 233
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room and stop after entering\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1279 request_id=ae600baa9ba72af01b103f42bb249c40 response_code=200
Extracting name entities from utterance: 234
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=891 request_id=1349b18f8dd6e25c06eeb02d4f854605 response_code=200
Extracting name entities from utterance: 235
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=e12e09b50dad850b77e4482951bf3b90 response_code=200
Extracting name entities from utterance: 236
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=033439ef8ec1cdcd52a363dfca6bf325 response_code=200
Extracting name entities from utterance: 237
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=660 request_id=d2d9ec6fa6956565e3f9480707e0f61c response_code=200
Extracting name entities from utterance: 238
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=501 request_id=2ce90ee36922d448d0faf6dabed2f739 response_code=200
Extracting name entities from utterance: 239
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=ddee1c180f2e77dce82a1e108ca237a6 response_code=200
Extracting name entities from utterance: 240
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=374 request_id=3488ebf214563a9169a0101d8dcadb6b response_code=200
Extracting name entities from utterance: 241
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1140 request_id=edc4474941dde9c1016a193907dc61ea response_code=200
Extracting name entities from utterance: 242
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=577791b15846ca760a0328394856b6c1 response_code=200
Extracting name entities from utterance: 243
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=614 request_id=b2cd3fba1b73736e65718585a146ffa5 response_code=200
Extracting name entities from utterance: 244
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=348c0cd2e93e1dc1fd097da4135a4c45 response_code=200
Extracting name entities from utterance: 245
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=cbf1bb3082e5fc07dcaf624e0a718866 response_code=200
Extracting name entities from utterance: 246
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=59b9ac1e142b7434a003144a82b428f3 response_code=200
Extracting name entities from utterance: 247
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=405 request_id=1f9e98de2e4eb5bfb8c51abcaecfabea response_code=200
Extracting name entities from utterance: 248
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=444 request_id=f3a2bb988b4c7950213160da796b412f response_code=200
Extracting name entities from utterance: 249
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=421 request_id=7d296f77a340e819b685cdcfe7cc234a response_code=200
Extracting name entities from utterance: 250
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=422 request_id=f1e445fdfa39105b412972d694508e4a response_code=200
Extracting name entities from utterance: 251
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=7b54722e0abf18fda5d8197c719e3c3d response_code=200
Extracting name entities from utterance: 252
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=412 request_id=d9796ef37572df924458da5e3a222092 response_code=200
Extracting name entities from utterance: 253
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=acf1b7d203cfc3c755a95a4fe2920845 response_code=200
Extracting name entities from utterance: 254
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=cba777ec1f673d0f52492035d248a109 response_code=200
Extracting name entities from utterance: 255
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=e5ea934456e941ac0286faa868399538 response_code=200
Extracting name entities from utterance: 256
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=289 request_id=93945720b7633e03d76d8c9e2d56eda8 response_code=200
Extracting name entities from utterance: 257
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=442 request_id=4eceeb0b051bf12cc3e643c91552d92e response_code=200
Extracting name entities from utterance: 258
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=ba031d506514fbf85c9ad7b6d60bf6ac response_code=200
Extracting name entities from utterance: 259
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1130 request_id=94361993c9537752cd60f32ae476d73c response_code=200
Extracting name entities from utterance: 260
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=a471f4f672ec43febb639c615bc322fa response_code=200
Extracting name entities from utterance: 261
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=735f513257cba06794a1b8fb68f2ef07 response_code=200
Extracting name entities from utterance: 262
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=7d1fff51d5b22757976c7072239bac87 response_code=200
Extracting name entities from utterance: 263
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=e6c3fe0eedb7ed3db887dd988ef09e7a response_code=200
Extracting name entities from utterance: 264
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=65325a9dc4e8f48658c9076b4a4117c7 response_code=200
Extracting name entities from utterance: 265
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=eccfd1ef35e1c997a36cce4e829289a9 response_code=200
Extracting name entities from utterance: 266
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=296 request_id=9e74becab23b42b94a5a22bbee588aba response_code=200
Extracting name entities from utterance: 267
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=428 request_id=4cb63a286c5a8217e93e7a15688b4409 response_code=200
Extracting name entities from utterance: 268
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=b5bb495aef9c563ba6ed1b5cbb9d9ffa response_code=200
Extracting name entities from utterance: 269
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=798 request_id=6a7f20a0b959efe77bf59b497232d860 response_code=200
Extracting name entities from utterance: 270
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=297 request_id=f0ef387d53bdb9c77f042918c0dbe9f0 response_code=200
Extracting name entities from utterance: 271
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=cac8001ecf4d58c201c63f1a63547a2d response_code=200
Extracting name entities from utterance: 272
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=591 request_id=254d79e4e36760e19dc15cbb7cd1093c response_code=200
Extracting name entities from utterance: 273
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=3786d22c78559596b5976ab059f84ced response_code=200
Extracting name entities from utterance: 274
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ni want you to go into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=528 request_id=62d418818176f3e5685dc6122d0b38f5 response_code=200
Extracting name entities from utterance: 275
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1012 request_id=205086643f1e6ae12cd2854a4e21d100 response_code=200
Extracting name entities from utterance: 276
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=766 request_id=bf646e0895e0681e4b3ab8a74181038b response_code=200
Extracting name entities from utterance: 277
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=461 request_id=bcfe99d22b2194b96755cbf475a5e755 response_code=200
Extracting name entities from utterance: 278
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=472 request_id=e3b4403f0c92ad9721def690532e7dea response_code=200
Extracting name entities from utterance: 279
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=355 request_id=646e1294052248327178d00f57f39255 response_code=200
Extracting name entities from utterance: 280
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=d4501230e4d5ac4fb778d3c84f5409b4 response_code=200
Extracting name entities from utterance: 281
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=7a2a934a668c1bf0e0c26ecdd4a8f013 response_code=200
Extracting name entities from utterance: 282
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=972 request_id=f2a4d1f2d50d7fd3b2b56cc91b9f1b8c response_code=200
Extracting name entities from utterance: 283
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=aa63b8ce895eedb4f4fa573d7d28ddaa response_code=200
Extracting name entities from utterance: 284
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=362 request_id=0b776b8e7bbfaaf373466314c085f838 response_code=200
Extracting name entities from utterance: 285
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=f6a6d512da9e5c304e5c8be45c4f3d67 response_code=200
Extracting name entities from utterance: 286
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=638 request_id=312c99039b92c3f96968564547db1360 response_code=200
Extracting name entities from utterance: 287
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=a0651c437d00becccccad642ab170254 response_code=200
Extracting name entities from utterance: 288
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=1cd837290156e5b0d9786b1579a98e07 response_code=200
Extracting name entities from utterance: 289
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=080e2b1f9ccf1c03b51d1f5476084559 response_code=200
Extracting name entities from utterance: 290
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=807 request_id=0d4c53d614917700375e1c90fd539ec7 response_code=200
Extracting name entities from utterance: 291
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=2a8bb9a55e540ed674d09d4535770a72 response_code=200
Extracting name entities from utterance: 292
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=d70e70571613f3186abf1b809280303c response_code=200
Extracting name entities from utterance: 293
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=60187c1d3c842eaadb6e8c1f9277a62a response_code=200
Extracting name entities from utterance: 294
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=584 request_id=89b01722b5691634f08ff87b49dbc31b response_code=200
Extracting name entities from utterance: 295
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=e542f79f3e2d2f8bbc4c9abdbd8a02c6 response_code=200
Extracting name entities from utterance: 296
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=452 request_id=b7269e79b99ad47d36fc967fc6bf43a2 response_code=200
Extracting name entities from utterance: 297
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=614 request_id=c67796bd4f8fe745befc793b4b6c6593 response_code=200
Extracting name entities from utterance: 298
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=6daa8223826ad4bb8b5bc634eb1c5b96 response_code=200
Extracting name entities from utterance: 299
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=430 request_id=1a3cb1a3bd8dd9e538e7bd14111bf089 response_code=200
Extracting name entities from utterance: 300
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=524 request_id=b1cb8e735d4a89c0b067bc79e5988b03 response_code=200
Extracting name entities from utterance: 301
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=df4d0871915af22270edd4411e4e6a6d response_code=200
Extracting name entities from utterance: 302
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=598 request_id=82e5b8237e5ef6fa4db810ab9cb4c769 response_code=200
Extracting name entities from utterance: 303
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=058ce7be7317f1d203a27d61ed5b6c89 response_code=200
Extracting name entities from utterance: 304
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=8f22be495487dea677344c6600fb23a1 response_code=200
Extracting name entities from utterance: 305
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=55abbe855120c19b4ea8e002ae630325 response_code=200
Extracting name entities from utterance: 306
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=30e7151541903dd91845415e8ba797ad response_code=200
Extracting name entities from utterance: 307
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=69d4a972b19a4de3466dfea77d4bc54e response_code=200
Extracting name entities from utterance: 308
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=343 request_id=9669f10fb28b295e8c3348dad451fba6 response_code=200
Extracting name entities from utterance: 309
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1173 request_id=b25d5c66d47e03bca7a20c99a5640a40 response_code=200
Extracting name entities from utterance: 310
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=8f58f5d2d40fc82bf2c3a406fafeaf24 response_code=200
Extracting name entities from utterance: 311
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=433 request_id=7008b7bd7c019310b24d1c5358250e41 response_code=200
Extracting name entities from utterance: 312
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=298737b741dbda8ee70a31cd21536624 response_code=200
Extracting name entities from utterance: 313
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=368 request_id=4d843a4c21a8ef84cd95921f3372cf11 response_code=200
Extracting name entities from utterance: 314
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=1262162dbcdff5cc04bb03f341b821b0 response_code=200
Extracting name entities from utterance: 315
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=9ae52405a6b4bd8d66451332821ff967 response_code=200
Extracting name entities from utterance: 316
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=001b58af43f4a36d07a8f84ad2d32861 response_code=200
Extracting name entities from utterance: 317
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=a500e936a31ce4576b08ae30fc7f272f response_code=200
Extracting name entities from utterance: 318
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=ca2d7424fbe1a268910a49e61269809c response_code=200
Extracting name entities from utterance: 319
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=58b33d9ec62e7ac17f22a71f25a58584 response_code=200
Extracting name entities from utterance: 320
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=cca1b02eaf23e534f2662edff520ef56 response_code=200
Extracting name entities from utterance: 321
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=745e4cfb4d62bf3e064ae33f1cf30b4b response_code=200
Extracting name entities from utterance: 322
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1059 request_id=f5b53e03f985244706a8a68d47ab46e6 response_code=200
Extracting name entities from utterance: 323
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=390 request_id=978a3700bbe160cd2be4b80510f59a94 response_code=200
Extracting name entities from utterance: 324
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=530 request_id=2365e35e8aa62ca1454a82cbaccb9a53 response_code=200
Extracting name entities from utterance: 325
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=20078dbfb6ee6111bcb8faae04ff70b5 response_code=200
Extracting name entities from utterance: 326
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=c80053fd3183c4870e9c717255d681b5 response_code=200
Extracting name entities from utterance: 327
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=6bf0f78cf7940480d90b72cc8154c799 response_code=200
Extracting name entities from utterance: 328
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=d6eb8ae3957bfbf550e82d15465304c2 response_code=200
Extracting name entities from utterance: 329
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=dd89a7d6d2b097620be4e56a199b162c response_code=200
Extracting name entities from utterance: 330
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=9f0607a8ba09e8ca95eb42e797740c2b response_code=200
Extracting name entities from utterance: 331
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=e55877fcbb02a761cdcc5d1af71b9a4b response_code=200
Extracting name entities from utterance: 332
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo only through rooms that are not yellow to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=9a559fd5d4a0ce264a74cd7b64a3e347 response_code=200
Extracting name entities from utterance: 333
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmake your way to the green room while avoiding the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=167bdb8c1320f0edd814a0f86d15b106 response_code=200
Extracting name entities from utterance: 334
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nproceed to green area while avoiding the yellow area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=f7d7fe9dc3a61dc8cf97aff87b861429 response_code=200
Extracting name entities from utterance: 335
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the room that is not yellow into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=afb3a3f2f1b5e6e1c124151c5fc9677a response_code=200
Extracting name entities from utterance: 336
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green area avoiding yellow area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=618 request_id=6c7934b8ba7a37930a63c86a42311c91 response_code=200
Extracting name entities from utterance: 337
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not go through the yellow room while going to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=384 request_id=345f577575b86b3c969087f753b84863 response_code=200
Extracting name entities from utterance: 338
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room without crossing the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=26f9e63372c0e9dbc0374c9acf1b1934 response_code=200
Extracting name entities from utterance: 339
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room but do not go through the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=dd7dc4e8c59970e7b67edfe0ab1ed2d4 response_code=200
Extracting name entities from utterance: 340
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot is to move towards the green room without entering a yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1862 request_id=029cfa010d20661a896fce101c62bf9c response_code=200
Extracting name entities from utterance: 341
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room without entering a yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=4b396c5d2b093b73c716688e5285052b response_code=200
Extracting name entities from utterance: 342
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot avoids yellow to get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=600 request_id=8f7eb5cd08fe7a001d389f09c9b8b3b8 response_code=200
Extracting name entities from utterance: 343
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid yellow area on way to green area each time\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=381 request_id=20ff268a513c15ef2ea457d124066cc8 response_code=200
Extracting name entities from utterance: 344
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwhile avoiding yellow navigate to green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=89c4876743543ff727a8cefc5cfa99c5 response_code=200
Extracting name entities from utterance: 345
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room without using the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=820 request_id=da6d211bce8e5b18fea9c7b352fff0bd response_code=200
Extracting name entities from utterance: 346
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room without entering a yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=441 request_id=4dcc0c3492ab4852c56c07728be54122 response_code=200
Extracting name entities from utterance: 347
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but do not enter the yellow room first\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=f5247230b5845b47cb14fdd8eb99e274 response_code=200
Extracting name entities from utterance: 348
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter green room via the non yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1032 request_id=dd7ce8f95c151aaf41dde4f50f2cedc3 response_code=200
Extracting name entities from utterance: 349
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to room not using yellow into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=b7bfbb3ae10a2eef523799e5bb6a37c5 response_code=200
Extracting name entities from utterance: 350
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green area by avoiding yellow area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1021 request_id=96c06dc87ae0b0ced376cea4b100a030 response_code=200
Extracting name entities from utterance: 351
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid yellow find green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=b74d6459a630e2662f3b4636d3226e7e response_code=200
Extracting name entities from utterance: 352
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not yellow to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=e9e5c75d57baa2b41ff79ccbc1ac8d0f response_code=200
Extracting name entities from utterance: 353
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1249 request_id=c885ac77b3f6f8e134fb45b7375251a8 response_code=200
Extracting name entities from utterance: 354
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the yellow rooms\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=8fb9881e2d40e421f7ecc34ca66353db response_code=200
Extracting name entities from utterance: 355
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large green room while avoiding the small yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1599 request_id=3bb7cedfea99b26cb1558a67f3f56886 response_code=200
Extracting name entities from utterance: 356
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the yellow room and end at the green rectangular room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1091 request_id=d176a198269c585fd76706e5868e8f84 response_code=200
Extracting name entities from utterance: 357
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room that is not yellow and then proceed to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=735 request_id=90d3f20da46981afdaf23887944b61fc response_code=200
Extracting name entities from utterance: 358
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the room that is not yellow and then move into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=27219839af780dd2805a66433e17b4f9 response_code=200
Extracting name entities from utterance: 359
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room through the door that is not yellow drive through the room and exit the other door to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1179 request_id=443c9ba34b53fca9e5ea45dd7f22f0ea response_code=200
Extracting name entities from utterance: 360
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nto reach the green room do not go through the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=562 request_id=f722b8e121ad539ed298b148db381da0 response_code=200
Extracting name entities from utterance: 361
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel to the green room but do not go through the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=46161607421477a6eed1ebd1feedee59 response_code=200
Extracting name entities from utterance: 362
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=391 request_id=1f14b2f26944f92dc28072cfd297c53d response_code=200
Extracting name entities from utterance: 363
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room avoiding the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=759 request_id=1573968048aa92550b81f378bb2d33d2 response_code=200
Extracting name entities from utterance: 364
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=381 request_id=aa7deb3a4b6e90335b69730d2dd1da5c response_code=200
Extracting name entities from utterance: 365
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green room but do not enter yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=d8111389b5af74de954b144dfc296987 response_code=200
Extracting name entities from utterance: 366
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid using the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=322 request_id=6aefe709487e75f95d30734aef503ff8 response_code=200
Extracting name entities from utterance: 367
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel to the green room through the room that is not yellow\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=842bbd6c3e4076abb593356f39179709 response_code=200
Extracting name entities from utterance: 368
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room while totally avoiding the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=331 request_id=b2b877a7caf9a543649d62bed24b6bfc response_code=200
Extracting name entities from utterance: 369
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but do not go to yellow\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=427 request_id=b8255fe7569536da7339b9c3a425aeaa response_code=200
Extracting name entities from utterance: 370
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the yellow rooms\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=428 request_id=808c28bcf91448c3422d68ed5669cd8f response_code=200
Extracting name entities from utterance: 371
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but do not enter the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=27454ffa337f6613203ce2e8df7c7c14 response_code=200
Extracting name entities from utterance: 372
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the yellow rooms on your way into the green rooms\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=f39bf06b6dd13392cb210cf9df91c5c3 response_code=200
Extracting name entities from utterance: 373
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nget to the green rectangle but do not go through the yellow square\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=14ae916ba5c4af684b705fae2b3871b2 response_code=200
Extracting name entities from utterance: 374
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room without entering a yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=449 request_id=e8a35f00e965865fb054e9acf08f0e96 response_code=200
Extracting name entities from utterance: 375
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not go through the yellow room while going to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=7fe017a82b7c7c3b50e1b582dac236a4 response_code=200
Extracting name entities from utterance: 376
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid going through the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=7fe341bff01fbaa42ac569bafdf06ffc response_code=200
Extracting name entities from utterance: 377
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=653 request_id=8bd005f9d55e35b7d01dc2b7ae6e26af response_code=200
Extracting name entities from utterance: 378
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo the red or yellow room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=663 request_id=9fd2028a3cd6354563596da13d609bda response_code=200
Extracting name entities from utterance: 379
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove the robot from the pink room to the yellow or red room to the big blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=770 request_id=59aada43976c1a9d77171fb256d87ea0 response_code=200
Extracting name entities from utterance: 380
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or yellow room to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1689 request_id=c5945c9cfd081ba9860b120902c2fbbd response_code=200
Extracting name entities from utterance: 381
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the passage into the blue room but only if you go through a yellow or red room first\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=721 request_id=42e8e3295b2318ceb50614118528196b response_code=200
Extracting name entities from utterance: 382
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room by going through red or yellow only\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=447 request_id=aea35146d76fc06e0f138df5802d6528 response_code=200
Extracting name entities from utterance: 383
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the yellow or red room and then continue to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=895 request_id=6196f601dd446e212777dc0d91f4cb85 response_code=200
Extracting name entities from utterance: 384
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or yellow room and go to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=652 request_id=6d6352837020c53c294f0204814cf694 response_code=200
Extracting name entities from utterance: 385
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or yellow to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=38a0dab329234fcdfce92591428fcbc2 response_code=200
Extracting name entities from utterance: 386
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room and enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=937 request_id=595f1319a9e36ed057f1f40961ee6fae response_code=200
Extracting name entities from utterance: 387
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the yellow or red room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=805 request_id=811a65593fc1a705cf823af0cd233889 response_code=200
Extracting name entities from utterance: 388
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass thru either the red or yellow box to get to the blue box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=ed4f745c04293a94867dfeb4b3328eca response_code=200
Extracting name entities from utterance: 389
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or the yellow room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=925 request_id=550036d1aecb0df736f7cfadfbaccd28 response_code=200
Extracting name entities from utterance: 390
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room by using red or yellow rooms first\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=864 request_id=78cc218e090a3f30784e3d3c8b118a47 response_code=200
Extracting name entities from utterance: 391
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=f0c56f8880ee01637fb17fe3efd4082b response_code=200
Extracting name entities from utterance: 392
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot has to go through the yellow or red room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=d7671df54a710de6b7bef7b13d2a4697 response_code=200
Extracting name entities from utterance: 393
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room through red or yellow\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=447 request_id=54d3713421ce548ccd6295599e551d80 response_code=200
Extracting name entities from utterance: 394
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or green room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=764 request_id=aee5ff0a90d1da9e7af9748231125033 response_code=200
Extracting name entities from utterance: 395
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo from the blue room to the red room then go from the red room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=848 request_id=45d8021cc632997ffb87ebe2bc576e6f response_code=200
Extracting name entities from utterance: 396
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room and then green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=1b274684c2772dfb2ca9e82d91dc8bb7 response_code=200
Extracting name entities from utterance: 397
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room and then go into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=f955fc46c184d768575d5f54fc7b1848 response_code=200
Extracting name entities from utterance: 398
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1210 request_id=95de6493ff923a138a01d312c94abf4e response_code=200
Extracting name entities from utterance: 399
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=457 request_id=9e5f3eea1a9e3bf2375fc50b0e8ae4aa response_code=200
Extracting name entities from utterance: 400
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=7c0fde46880560e14238b5db4eaacf8e response_code=200
Extracting name entities from utterance: 401
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=9cbdaca9f78a76444fa782895ca0f02c response_code=200
Extracting name entities from utterance: 402
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the red room then enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=1169eb70567f7b0717860b03ce688f17 response_code=200
Extracting name entities from utterance: 403
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=573 request_id=2813cf19bb69c312887758b4a5cd889b response_code=200
Extracting name entities from utterance: 404
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=801 request_id=aebdb8d752fd6ca364c1f860c30a968b response_code=200
Extracting name entities from utterance: 405
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfirst go to red room then go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=344 request_id=57f2fe7901a7a08d199e269f3955f220 response_code=200
Extracting name entities from utterance: 406
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo from the blue room to the red room and then go from the red room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=656 request_id=de472a3798af163b2febd5c1d6fa0be2 response_code=200
Extracting name entities from utterance: 407
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room and enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=98a20a8373a7b5d4d653646e2d7415cf response_code=200
Extracting name entities from utterance: 408
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room move to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=911 request_id=c930d50f862f15aa171ac9ca0c9393dd response_code=200
Extracting name entities from utterance: 409
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=890 request_id=401f7eee150e3db9a427d0140c02eb7d response_code=200
Extracting name entities from utterance: 410
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then go into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=340 request_id=cba9f07be9d52433a17aeeb52cb09f75 response_code=200
Extracting name entities from utterance: 411
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room then move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=929 request_id=3824e61ee1329e2ccd5fd93ed01d03ef response_code=200
Extracting name entities from utterance: 412
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room then the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=48b1edb5e9f9ebfac7c81a697b2438e0 response_code=200
Extracting name entities from utterance: 413
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room then the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=847 request_id=b5c3d0c12b912f76fb9f39b10e3aab7e response_code=200
Extracting name entities from utterance: 414
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=627 request_id=26928c3cdd5da261e695742e576b0f0a response_code=200
Extracting name entities from utterance: 415
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room and move into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=412 request_id=16321c265c7b3d7294ecf9cffc8e86cb response_code=200
Extracting name entities from utterance: 416
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room then go into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=3d25bf2d1fd0bbc5296a7d8d708a9b55 response_code=200
Extracting name entities from utterance: 417
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=8f51a821209d238ed33f221972a4f6e9 response_code=200
Extracting name entities from utterance: 418
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room then to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=be9bf9cb21f0fc68f2a8948d46561354 response_code=200
Extracting name entities from utterance: 419
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1000 request_id=2613f9e034bb318489de829838c16937 response_code=200
Extracting name entities from utterance: 420
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nrobot c move to the red room and then move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=408 request_id=44d4640ea2972aa7094f97920ef5733b response_code=200
Extracting name entities from utterance: 421
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove from blue room to red room then move to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=650 request_id=baff6b65f4bcb0de429354ffeda7b743 response_code=200
Extracting name entities from utterance: 422
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to red room then move to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=3f544563013c6116256d9258e65afbdd response_code=200
Extracting name entities from utterance: 423
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove into the red room then move into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=d3dd748897ded64f50b2bfdf46e70df4 response_code=200
Extracting name entities from utterance: 424
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=0828943c236bcebd4bad3e639f26bce9 response_code=200
Extracting name entities from utterance: 425
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=595 request_id=1df091e262731ccb43d70942ffb06554 response_code=200
Extracting name entities from utterance: 426
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room and then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=c534975d243830921bcd801cedfd4718 response_code=200
Extracting name entities from utterance: 427
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room then move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=5d684252dd5bbbf06e6c2dfb5184df35 response_code=200
Extracting name entities from utterance: 428
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the red room and then into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=613 request_id=9b057c2b880d34f93baf30ae39ffda10 response_code=200
Extracting name entities from utterance: 429
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room and then move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=11f931c28109a9dd98f06a395b13af5f response_code=200
Extracting name entities from utterance: 430
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=f3fce05b1dd24d4e5f693bc3d1eaac0e response_code=200
Extracting name entities from utterance: 431
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=280 request_id=3946533688fb79fc427172cefb62dd20 response_code=200
Extracting name entities from utterance: 432
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=849 request_id=dc4181e28e49933ae42d53a9aeb85949 response_code=200
Extracting name entities from utterance: 433
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red room go to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=310 request_id=603a664bc08dc8890f4621b43cf00739 response_code=200
Extracting name entities from utterance: 434
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the red room and then move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=a7e4169870a2a1a96c18ddb604e8769e response_code=200
Extracting name entities from utterance: 435
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1206 request_id=c214622c4a5d709a8f2b31a336830679 response_code=200
Extracting name entities from utterance: 436
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=338 request_id=ddadb599e819e142dcdc3960be5f21ca response_code=200
Extracting name entities from utterance: 437
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=087e222d000dfb6e726a53cb0e165e2f response_code=200
Extracting name entities from utterance: 438
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=578 request_id=cd10fc47ed6e1d1e28e50890c31d71e7 response_code=200
Extracting name entities from utterance: 439
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=724254516604ef887e11eee7bc99fc0e response_code=200
Extracting name entities from utterance: 440
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=1c5e95688a63f306fb8301445d0babc8 response_code=200
Extracting name entities from utterance: 441
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=485 request_id=6e3d5a29cfb947d8f23e15890505ba29 response_code=200
Extracting name entities from utterance: 442
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo in and then go into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=605 request_id=48627aee34b31692aaa2b44e59dd1edb response_code=200
Extracting name entities from utterance: 443
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=368 request_id=a9f07702aa74d309a65b20acd975d7a0 response_code=200
Extracting name entities from utterance: 444
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo in and then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=576 request_id=9e5fa785c41c9d3c7dcfd9c576ba73b3 response_code=200
Extracting name entities from utterance: 445
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=d9d8a7a6dc151542a7f738f67a8734d1 response_code=200
Extracting name entities from utterance: 446
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=412 request_id=f0e708b9b1c3986c532f71a117427979 response_code=200
Extracting name entities from utterance: 447
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=546 request_id=6353584f443293a6cac11f2dcf566ee6 response_code=200
Extracting name entities from utterance: 448
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=72a1007a97c4ca647b4ccd6ca83379e3 response_code=200
Extracting name entities from utterance: 449
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=72b700233f9a11a1c2933a4380dc6950 response_code=200
Extracting name entities from utterance: 450
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=279 request_id=39c3e3ff78e75c79853a5674911aad4a response_code=200
Extracting name entities from utterance: 451
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=1cd1b453bbb19eae0b4b4ff5350b06ba response_code=200
Extracting name entities from utterance: 452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the middle of the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=164da627b824d85275d2bcb0bf105379 response_code=200
Extracting name entities from utterance: 453
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=22280fe6af7449d69825be67dffa2b03 response_code=200
Extracting name entities from utterance: 454
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=413 request_id=10388d537cf02e86536c367ef35f0aac response_code=200
Extracting name entities from utterance: 455
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=417 request_id=efca25a12cf1904898274e4dd1ce0f51 response_code=200
Extracting name entities from utterance: 456
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=1b63308d75c95111c759abd86966fe84 response_code=200
Extracting name entities from utterance: 457
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=281 request_id=96defe4083c137975f57e51542123252 response_code=200
Extracting name entities from utterance: 458
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove until you are one square into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=db7228915eabeeec50a8811588d7c510 response_code=200
Extracting name entities from utterance: 459
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=454 request_id=683ac5b6ef4f4491c9ec876d83b4fb51 response_code=200
Extracting name entities from utterance: 460
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=647 request_id=c3607030c46494fe8f3b7565efbcf5a4 response_code=200
Extracting name entities from utterance: 461
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=331 request_id=3afda94b7d781b5b72ade85806d943b2 response_code=200
Extracting name entities from utterance: 462
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nleave this room and go into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=461ed317bb58e1d76714baaaf04afbb3 response_code=200
Extracting name entities from utterance: 463
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=19863e1dd323b4858e4b9158a4a6af47 response_code=200
Extracting name entities from utterance: 464
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=407 request_id=4667055e43463739f26de1216e23cc0b response_code=200
Extracting name entities from utterance: 465
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=55bbfbb40511a520eeff442c77c24469 response_code=200
Extracting name entities from utterance: 466
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=8b9440c727c4f4db9b39486857b63d38 response_code=200
Extracting name entities from utterance: 467
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=1deee6e0b495e57a39bd95254039f9e7 response_code=200
Extracting name entities from utterance: 468
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=7aeef44d1719b57bc1a6202e79dec175 response_code=200
Extracting name entities from utterance: 469
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=620 request_id=611a5d5b893c1f03655e9a14123a9744 response_code=200
Extracting name entities from utterance: 470
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=811 request_id=bb392b16cf4d78ff3f1c1be3b3823f05 response_code=200
Extracting name entities from utterance: 471
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nexit room and go right to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=322888692ba2dd3cdc97d90c9bb225ff response_code=200
Extracting name entities from utterance: 472
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=39dcd9b5e55b8072fe9bbf4a4729c7f0 response_code=200
Extracting name entities from utterance: 473
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=587 request_id=78055bc448701537c286388abc133cb4 response_code=200
Extracting name entities from utterance: 474
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=628 request_id=b4d3f90855a0f42ac9b39a640f67284c response_code=200
Extracting name entities from utterance: 475
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=54a6955f1dbeb1ec8765c093c4b2e91b response_code=200
Extracting name entities from utterance: 476
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=352 request_id=8b2ef47f9d3952de32726f0fcc0da8c4 response_code=200
Extracting name entities from utterance: 477
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=401 request_id=d9ea386869a09e1f2ba73845f118faf9 response_code=200
Extracting name entities from utterance: 478
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo from the blue room to the red room then to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=b8bc5be69d614a0f244d0b018200bbe1 response_code=200
Extracting name entities from utterance: 479
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=836 request_id=b8830303c81b74aafbb1e59d91b30d8d response_code=200
Extracting name entities from utterance: 480
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=d982e67e5c55765fce5dc74c259982ee response_code=200
Extracting name entities from utterance: 481
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1067 request_id=ad9cc774f62b35d6038bf0c3241073b1 response_code=200
Extracting name entities from utterance: 482
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to yellow or red room them move to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=650 request_id=5710eee4ccc4c35d9bad94aaa865c84a response_code=200
Extracting name entities from utterance: 483
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot has to go through the red or yellow room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=870 request_id=5db6b8fda08ee27e52861096e3252c2d response_code=200
Extracting name entities from utterance: 484
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room and enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=738 request_id=773c883952a803966b9d40daa523b480 response_code=200
Extracting name entities from utterance: 485
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=793 request_id=cc94c0f7ae80a626315bc1b2178f2da8 response_code=200
Extracting name entities from utterance: 486
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo thru the yellow or red box to get to the green box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=842 request_id=97990dae7ff4b7177134bcf43a0e18ee response_code=200
Extracting name entities from utterance: 487
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through either the red or the yellow room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1063 request_id=9bf0ac8246ca7a9632b8c3b0cac922dd response_code=200
Extracting name entities from utterance: 488
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nget to the green room through red or yellow rooms only\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1912 request_id=08879bff5e4fc3e0e0d970b1ae9b58a5 response_code=200
Extracting name entities from utterance: 489
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove the robot through the yellow or red small room and then to the large green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=829 request_id=574f9db8430a92ae50a112f34811d615 response_code=200
Extracting name entities from utterance: 490
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=872 request_id=ebb333f42e2ad81b9a5e6f7bb7401d5d response_code=200
Extracting name entities from utterance: 491
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the yellow or red room and proceed to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1004 request_id=fbe6b731970117c36cbd7df1ce62fcd1 response_code=200
Extracting name entities from utterance: 492
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room by going through the yellow or red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=934 request_id=5538edb5f69861c574dbbdcbe1220824 response_code=200
Extracting name entities from utterance: 493
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the yellow or red room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=1fb92de33b313131ffef2a27070ea45b response_code=200
Extracting name entities from utterance: 494
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1663 request_id=eb5b24b573c5f9d2a010c5b166982c35 response_code=200
Extracting name entities from utterance: 495
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=5acf5bceff48863c7463efdf9149e846 response_code=200
Extracting name entities from utterance: 496
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nonly go through the red or yellow to get to the green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=48e6160398e4e504faad2c16c34fe447 response_code=200
Extracting name entities from utterance: 497
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through yellow or red square to get to green square\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=499 request_id=74e7a6d3ca129aa7f782bbdeb6f39b3e response_code=200
Extracting name entities from utterance: 498
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or red room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1089 request_id=4ee4f0757eeb0a19070f65f5ff5433fd response_code=200
Extracting name entities from utterance: 499
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through red or yellow to get to green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=285 request_id=92f1d9629d5e082bd7a2aa9f786d8dca response_code=200
Extracting name entities from utterance: 500
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the yellow or green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=514 request_id=aef614658ee3a049d0740d0c21f8cc23 response_code=200
Extracting name entities from utterance: 501
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo green or yellow to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=97f67ecad8cb6e17a4d26ce98ec96032 response_code=200
Extracting name entities from utterance: 502
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo green to blue or yellow to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=384 request_id=faa8647bca982b756f80204296c50783 response_code=200
Extracting name entities from utterance: 503
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the green or yellow rooms and enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=db4e9081f882b8f62ce22b2c6df7da4f response_code=200
Extracting name entities from utterance: 504
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=ad82cc1b69fdc6e8ab1377ac0f0a1639 response_code=200
Extracting name entities from utterance: 505
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green or yellow room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=559 request_id=09838be9ab884470e91a80e158809c43 response_code=200
Extracting name entities from utterance: 506
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green or yellow room to blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=99d86862b361e8ab282f4441482b97c3 response_code=200
Extracting name entities from utterance: 507
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=641 request_id=f5d631b21b537f4ad33f78cd6e103772 response_code=200
Extracting name entities from utterance: 508
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the green or yellow room and enter into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=716 request_id=c5bb962592d9b9e03e0b663b98a91cea response_code=200
Extracting name entities from utterance: 509
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove through the yellow or green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=570 request_id=4fb99c4e5f475e8bc82a1f85fa87a0fe response_code=200
Extracting name entities from utterance: 510
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green or yellow room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=744 request_id=3bf30d48892cefcbf4d501bdc0cf36e7 response_code=200
Extracting name entities from utterance: 511
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nup through the green or yellow box to reach the blue box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=845 request_id=dc1fd93e3d40c848677e1deb0f9894e1 response_code=200
Extracting name entities from utterance: 512
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room through green or yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=455 request_id=669ec3d0d0ab80997d5e1be4c6c52e2d response_code=200
Extracting name entities from utterance: 513
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove toward either the yellow or green room then into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=856 request_id=18429ef6be7ba1574e0e45a6bb430773 response_code=200
Extracting name entities from utterance: 514
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through either the yellow or the green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=789 request_id=35d01bb99abbfa9821aca808f7d02ccc response_code=200
Extracting name entities from utterance: 515
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the green or yellow room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=688 request_id=3985ffb9b14b42e30f60e7b42b007490 response_code=200
Extracting name entities from utterance: 516
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove the robot to the small yellow or green room and then to the large blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1115 request_id=3ddca69d858609b5ef1e5c9d5af46567 response_code=200
Extracting name entities from utterance: 517
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the yellow or green room to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=821 request_id=d956103228b0efb2c9c2e775e7fa11fe response_code=200
Extracting name entities from utterance: 518
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntook the yellow room to the blue room and the green room to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=6972da21be8ca33f06d1bcdcb531d222 response_code=200
Extracting name entities from utterance: 519
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwhile avoiding the red room follow the shortest path to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1560 request_id=6290c75d6e4d6d55d215ef9c5cad79bc response_code=200
Extracting name entities from utterance: 520
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but do not pass through the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=b2d3e12417ab07cbc64e008a650d185d response_code=200
Extracting name entities from utterance: 521
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nhead to the blue rectangular room without passing through a red square room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1036 request_id=b2c4f17048f43c951b75831d98f43f77 response_code=200
Extracting name entities from utterance: 522
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the blue room without going through the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=3ae6fe2a0281fab494437d3b73aca3fa response_code=200
Extracting name entities from utterance: 523
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to blue room but do not go through the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=766 request_id=dcff55edf74df32ff532b7ad5b6b4371 response_code=200
Extracting name entities from utterance: 524
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but do not use the red room to get there\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=445 request_id=6b216e49192e92c54dc003abe8dc8e8f response_code=200
Extracting name entities from utterance: 525
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without crossing the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=87666e55ad831fbcc5d16cdb5c47a30c response_code=200
Extracting name entities from utterance: 526
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the red room and move to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=315465e476f60860ad95d82c15487328 response_code=200
Extracting name entities from utterance: 527
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through room that is not red to get to blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=45140d6fadb367fd68ba803ca4f2e0ca response_code=200
Extracting name entities from utterance: 528
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue but not through red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=396 request_id=0e5bbc379cede532ed8ff3f656a6354d response_code=200
Extracting name entities from utterance: 529
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntake a path to reach the blue colour place by not taking the route which is red and black\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1001 request_id=c22ec2a750934834bd7b6d8d467034d4 response_code=200
Extracting name entities from utterance: 530
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the opposite of the red room to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=0690dcd506fc065e5de741b15816970f response_code=200
Extracting name entities from utterance: 531
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue but not through red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=7c0616bfcb7a12c48322a79c9840a353 response_code=200
Extracting name entities from utterance: 532
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but do not use the red room to get there\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=d670597c78139e17ed04cc1cb2ff7984 response_code=200
Extracting name entities from utterance: 533
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room without going through the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=76977d013280c5cab0b6ec890dc158a7 response_code=200
Extracting name entities from utterance: 534
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot avoids the red to get to the blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=650 request_id=47d28b12004464a6990a0ee0891a3b76 response_code=200
Extracting name entities from utterance: 535
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngot to blue room without going through red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=ebd6cb284dfac5f2454c2c3187956876 response_code=200
Extracting name entities from utterance: 536
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room while avoiding red rooms\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=463 request_id=3c0173b8cd67b7688a520f6dbc1735e1 response_code=200
Extracting name entities from utterance: 537
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=fd89f68ed946b2f630fc76229a4fb9db response_code=200
Extracting name entities from utterance: 538
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue but do not go through red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=75b4d8752744046ac95703e5aec8f5c6 response_code=200
Extracting name entities from utterance: 539
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without going through the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=5898fbbeff6a3e982fbf5742173d8873 response_code=200
Extracting name entities from utterance: 540
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room while avoiding the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=430 request_id=d1372cc818c91309315d442c1de396d5 response_code=200
Extracting name entities from utterance: 541
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not go through the red room towards the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=bc4d75c18153cf7bc4a2a07635170eef response_code=200
Extracting name entities from utterance: 542
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoiding the red rectangle travel to the blue area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1714 request_id=6308b6fe06d5e5dec196729ddc46cb27 response_code=200
Extracting name entities from utterance: 543
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large blue room while avoiding the small red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=748 request_id=27ca5cc71e47bb2e7d0f221e1b050ea2 response_code=200
Extracting name entities from utterance: 544
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but do not pass through the red room on your way\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=523 request_id=88c725267968b97658a92ebde3cf9889 response_code=200
Extracting name entities from utterance: 545
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nnever follow red path to reach blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=469 request_id=a2e39b33f75441a85fd7c025fd24c34e response_code=200
Extracting name entities from utterance: 546
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue area by avoiding red area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=1b21a79cd6aadbb88bc4d3b527890db2 response_code=200
Extracting name entities from utterance: 547
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to blue room not using red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=557 request_id=f5549f527180fde530a453a663be856c response_code=200
Extracting name entities from utterance: 548
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without entering a red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=a10dce0354a9be38b4c39bf6b10ffcc9 response_code=200
Extracting name entities from utterance: 549
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo only through rooms that are not red to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=589 request_id=cda14570b9c413817969d72f36cbd089 response_code=200
Extracting name entities from utterance: 550
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot avoids the red room in going towards the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=675 request_id=75e23a7d343738c57478def02f80bbe2 response_code=200
Extracting name entities from utterance: 551
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=626 request_id=85faa4d0bd6e3620218999485d02fa3d response_code=200
Extracting name entities from utterance: 552
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwithout stepping on red spaces move into the blue room then stop once you enter it\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=405 request_id=20c25b662fb2dd44e6b43a13c6ae5d23 response_code=200
Extracting name entities from utterance: 553
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to blue room but avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=cf93612a3c1274b84d0414f38d762b77 response_code=200
Extracting name entities from utterance: 554
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but do not use the red room to get there\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=499 request_id=89b08823be97fcf3482a7e97e0f2a1ce response_code=200
Extracting name entities from utterance: 555
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not red and enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=577 request_id=ff892e409c31733bfecfa9af6d8c0c6d response_code=200
Extracting name entities from utterance: 556
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter blue room via the non red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=01cb0e51036d136ba908bfa16d72df60 response_code=200
Extracting name entities from utterance: 557
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without entering a red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=fa4aaa5ec08469696f59aae95452498d response_code=200
Extracting name entities from utterance: 558
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large blue room while avoiding the small red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=678 request_id=d84c43afa7cd14e22879399bad1702f5 response_code=200
Extracting name entities from utterance: 559
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=656 request_id=6edcd79ccef48e1e39ded28ba28a118f response_code=200
Extracting name entities from utterance: 560
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room avoiding the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=d510d47a78692ba2e4e62de5db2b8d64 response_code=200
Extracting name entities from utterance: 561
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room which is not red to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=449 request_id=6daf2b51f0ecbff9873d27bfbf778e24 response_code=200
Extracting name entities from utterance: 562
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=ecbde8ab34f4137dffb421a6d6b0c3c2 response_code=200
Extracting name entities from utterance: 563
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=592 request_id=3af2357fa775a1cab6a47c7f4e2e3414 response_code=200
Extracting name entities from utterance: 564
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not go through the red room towards the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1698 request_id=b8f51a3eb81fa6f539af3093cc5fa440 response_code=200
Extracting name entities from utterance: 565
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room by any room that is not red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=773 request_id=8f584d9cc861a24b79d93288a171d9b1 response_code=200
Extracting name entities from utterance: 566
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot avoids red to get to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=8966b13858b85c23aa919c807dc6eda5 response_code=200
Extracting name entities from utterance: 567
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room that is not red which will lead to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=756 request_id=2e2e452441ed52c0398852f98c7e5c6a response_code=200
Extracting name entities from utterance: 568
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room while not passing through the red room on the way\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=33d40b8f49c78a05eb572a7185b8ecef response_code=200
Extracting name entities from utterance: 569
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo only through rooms that are not red to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=6eec9e8cfd88d6f073db50512d54d485 response_code=200
Extracting name entities from utterance: 570
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue but not through red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=943 request_id=82e6200af370b59011b1e7dd7bb9a064 response_code=200
Extracting name entities from utterance: 571
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue via green or yellow but not red\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=d21e4e3f3f2a00ca922839c6cb81fc37 response_code=200
Extracting name entities from utterance: 572
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nto reach the blue room do not go through the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=2108916f20c166f0d4ea69465730e2bc response_code=200
Extracting name entities from utterance: 573
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid red rooms while going to the blue one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=9cd68ed290add763619e77863e5c0abf response_code=200
Extracting name entities from utterance: 574
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue area by avoiding red area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=1a2385679169cc28c286ab7cc2e3a5be response_code=200
Extracting name entities from utterance: 575
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo towards the blue room and avoid the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=e4cb4159d76fe49343e4fd91a0963a03 response_code=200
Extracting name entities from utterance: 576
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room without entering a red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=49e5c7e38e8637427764c18e90c78ca2 response_code=200
Extracting name entities from utterance: 577
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the red room and end at the blue rectangular room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=849 request_id=1eaad6f8e21650094cc4f958891fee39 response_code=200
Extracting name entities from utterance: 578
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through square that is not green to get the blue rectangular\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1413 request_id=36fac273c635df6c64b044c32dfe95bb response_code=200
Extracting name entities from utterance: 579
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue but not through green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1012 request_id=54cdbb251076ee4cb40cbeeadf0beb0c response_code=200
Extracting name entities from utterance: 580
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not green to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=362 request_id=b3256e537df8e12cb7cda9b794bdd6ef response_code=200
Extracting name entities from utterance: 581
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=c57accab810a6570e7e43eac138df311 response_code=200
Extracting name entities from utterance: 582
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue without going to green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=7ca59eff19dbabbc9d1449ac32771c84 response_code=200
Extracting name entities from utterance: 583
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without crossing the green one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=18aff595313ae1f3b9852746fbe5ff88 response_code=200
Extracting name entities from utterance: 584
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without entering a green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=52bf018b21347ccb10fc653490cde175 response_code=200
Extracting name entities from utterance: 585
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room avoiding green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=328 request_id=d2733dcec97a38e32c441d0a3bb6aa0d response_code=200
Extracting name entities from utterance: 586
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwalk to the blue room while avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=c389247857509aa9bdc22fb3dec5a3d4 response_code=200
Extracting name entities from utterance: 587
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwalk through any room except the green room to enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=f4ffda473aa84c102d32ca0990bbd987 response_code=200
Extracting name entities from utterance: 588
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue room without going to green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=dee0a92fe04eb69063519e2144eb4836 response_code=200
Extracting name entities from utterance: 589
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but avoid using the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=6fac9f5394f75c57d10177db5eb85c1e response_code=200
Extracting name entities from utterance: 590
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not take the green room to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=952 request_id=c9372abaa7b8ad7c7929f389aa48fcda response_code=200
Extracting name entities from utterance: 591
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room while avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=b5d4b4bd22fa456f471a777f63449aa6 response_code=200
Extracting name entities from utterance: 592
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nreach blue room without going through green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=49f16801c0f327fbd67972b3867bfc8e response_code=200
Extracting name entities from utterance: 593
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue area by avoiding green area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=401 request_id=18f9d6eaf506fd7d82fd88ee31f12bdf response_code=200
Extracting name entities from utterance: 594
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nget to the blue room by avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=401 request_id=4789a1ebdc2e302e7bc78d4bb40a4b43 response_code=200
Extracting name entities from utterance: 595
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room that is not green and proceed through to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=587 request_id=87f6cc1d1cd9a46fc2879c8d95683d1a response_code=200
Extracting name entities from utterance: 596
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nonly go through rooms that are not green to get to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=7b425d5e7981ed686815b71d2b5a95bc response_code=200
Extracting name entities from utterance: 597
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not green and enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=471 request_id=5d54fcdc54d81a18fd2607ece1961a8f response_code=200
Extracting name entities from utterance: 598
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndrive through the room that is not green and enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=557 request_id=c54744e99d3b616b2e7300ed5ec9c7e8 response_code=200
Extracting name entities from utterance: 599
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through any room that is not green to reach the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=719 request_id=79dea65e251d1466317b125668e65488 response_code=200
Extracting name entities from utterance: 600
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not go through the green room towards the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1149 request_id=e2ad3678a93ee044c7239f9eda8e95bf response_code=200
Extracting name entities from utterance: 601
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid green go to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=5e283c434744fb89335479bea83a52e9 response_code=200
Extracting name entities from utterance: 602
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngoing through the red room or the yellow room straight to the blue room avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=803 request_id=74eea9c0c9d3b1aea80225bc6c8a12d5 response_code=200
Extracting name entities from utterance: 603
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=738 request_id=92ee37ce502e04bcb7b3ec03a8fc7120 response_code=200
Extracting name entities from utterance: 604
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue area by avoiding green area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=396 request_id=60831c92407827ad8790837cd0908792 response_code=200
Extracting name entities from utterance: 605
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter into the room that is not green and continue through that room into the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=570 request_id=de004e3f3897d25a868d99067606d02f response_code=200
Extracting name entities from utterance: 606
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room without entering a green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=302ffb07d90929d3fc18aa3008b357f6 response_code=200
Extracting name entities from utterance: 607
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room but do not go through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=9a3fa38413ef94f30d7ad17d5434757a response_code=200
Extracting name entities from utterance: 608
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to blue but not through green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=88372727dd09ede8405be0cb1c7b927c response_code=200
Extracting name entities from utterance: 609
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not green to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=104b46702466608fbe504e60d7f78de6 response_code=200
Extracting name entities from utterance: 610
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoiding green navigate to blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=f012e44e7d10d198380e6bb8c6fa5239 response_code=200
Extracting name entities from utterance: 611
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nget to the blue area by avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=1fcbc07f4a89cffa94814a5523a16506 response_code=200
Extracting name entities from utterance: 612
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room through the room that is not green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=f670a989bd66039abee045ebb7db2c77 response_code=200
Extracting name entities from utterance: 613
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room that isnt green then go to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=841 request_id=2e834f0ee433c0e1b183e92f8c944f6a response_code=200
Extracting name entities from utterance: 614
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue room without entering a green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=0b9d521a4c745c708169bdd6aab8a317 response_code=200
Extracting name entities from utterance: 615
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel to the blue room through the room that is not green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1330 request_id=8b5f8db9d83ca6592736afaaaf4ace3a response_code=200
Extracting name entities from utterance: 616
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo towards the blue room and avoid the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=518 request_id=9bac1263069088542df292c5d5d6443d response_code=200
Extracting name entities from utterance: 617
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room without passing through the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=721cbe21df036afd1d6871f5ebc6dafe response_code=200
Extracting name entities from utterance: 618
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the blue room without using the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=2a88a35600ddf966b0de77c149a33bea response_code=200
Extracting name entities from utterance: 619
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not enter the blue room through the green room but by the red room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1073 request_id=4d9bd69f48feeda0a59d80a637501a3f response_code=200
Extracting name entities from utterance: 620
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room and do not use the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=456 request_id=089247a73884740ec1e08ad6839c66f6 response_code=200
Extracting name entities from utterance: 621
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room while avoiding the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=826 request_id=c31847a8c2a651131814f9d73b7f477e response_code=200
Extracting name entities from utterance: 622
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nentering any room that is not green will lead you to the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=e647c8215982dd96bfb941acc218c00c response_code=200
Extracting name entities from utterance: 623
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large blue room while avoiding the small green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=596 request_id=97ff26e85f8edbcecae62cfb8143cdfa response_code=200
Extracting name entities from utterance: 624
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=374 request_id=c59824452ab979fc13d9d10058c731ec response_code=200
Extracting name entities from utterance: 625
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green without going through blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=24098d8822b7ac7e8bc9a3879e95641f response_code=200
Extracting name entities from utterance: 626
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room without passing the blue one\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=4628fe17a99621af7180afadbd784ab0 response_code=200
Extracting name entities from utterance: 627
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the blue room and move to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=a97204f45506b9eb3f096c50a8362b3e response_code=200
Extracting name entities from utterance: 628
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=1509e00179ba84d80cb042281c26b43e response_code=200
Extracting name entities from utterance: 629
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the non blue room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=03243b1b8fed15ba7465719958ae0111 response_code=200
Extracting name entities from utterance: 630
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the blue room when proceeding to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1293 request_id=86ef5585e7d73687eb9b25092ee62eb6 response_code=200
Extracting name entities from utterance: 631
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but avoid using the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=c07441011a48ec9bec2354ddb5fbbf8c response_code=200
Extracting name entities from utterance: 632
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but do not go through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=5b5c99ddfa53146cd570dbfb2eb07f1e response_code=200
Extracting name entities from utterance: 633
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room that is not blue then go to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=d11b030961dbb6055cf2afd5d23c5f57 response_code=200
Extracting name entities from utterance: 634
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not blue to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=517 request_id=38567d569dea1ef279d406c5b06d5006 response_code=200
Extracting name entities from utterance: 635
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room without entering a blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=294 request_id=863263e7db33bd25a72711a3a7f17516 response_code=200
Extracting name entities from utterance: 636
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the red room or the yellow room and head straight away to the green room avoiding the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=654 request_id=3de9c28af4ac24f386d77d9939b5a90f response_code=200
Extracting name entities from utterance: 637
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green but not through blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=b7da2bba12a3642ee4aea5de00251596 response_code=200
Extracting name entities from utterance: 638
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green room avoiding blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=53ae1771d44e009df373485dfc4a2f3c response_code=200
Extracting name entities from utterance: 639
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not go through the blue room towards the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=581 request_id=2ff090673583d8cb703fe618b709f5a0 response_code=200
Extracting name entities from utterance: 640
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green area avoiding blue area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1015 request_id=bda074f3040e044e834fad631121a832 response_code=200
Extracting name entities from utterance: 641
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the blue room on the way\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=51b59edcac41b0835c783ecd25d5abf4 response_code=200
Extracting name entities from utterance: 642
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but do not take the blue room to get there\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=413 request_id=f9519022d4c8141369eeaa2b3d0c25a4 response_code=200
Extracting name entities from utterance: 643
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoiding blue navigate to green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=cdc9a768953bb2a96d3540b80e33f8a1 response_code=200
Extracting name entities from utterance: 644
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nonly go through rooms that are not blue to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=640 request_id=913f2de191223bfc8885aca0f3222a64 response_code=200
Extracting name entities from utterance: 645
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nwalk through any room except the blue room to enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=c1abc66a0f823956136ffb2a3989631a response_code=200
Extracting name entities from utterance: 646
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large green room while avoiding the small blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=dddb76c5c163d40d3f6aad13ece933da response_code=200
Extracting name entities from utterance: 647
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndrive through the room that is not blue and enter the green room on the other side\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=408 request_id=25e4d7ee909a9fa36f500d20774ffbe5 response_code=200
Extracting name entities from utterance: 648
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room which is not blue to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=3031233c01d43ef046385e0a498815a7 response_code=200
Extracting name entities from utterance: 649
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nget to the green area by avoiding the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=507 request_id=c46afb1cf6380a7ed07cc34cd52dbb17 response_code=200
Extracting name entities from utterance: 650
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green area by avoiding blue area\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=343 request_id=d0f6c282b2a2178ea363663caad0c325 response_code=200
Extracting name entities from utterance: 651
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the room that is not blue and proceed through to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=408 request_id=6593e01a04a20c07bdf95a0bf2e108f4 response_code=200
Extracting name entities from utterance: 652
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into green room but avoid blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=e744cd9a97e45eb13c741427d09b88e8 response_code=200
Extracting name entities from utterance: 653
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=523 request_id=24dd85a8ae22090f164664c8ba730981 response_code=200
Extracting name entities from utterance: 654
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room without using the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=619 request_id=30d1b8add131baa697667514f426f7d0 response_code=200
Extracting name entities from utterance: 655
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=721 request_id=c61eadeba4e95bba307cef902c952f52 response_code=200
Extracting name entities from utterance: 656
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the blue room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=826 request_id=f6854c3d1e8941a22d8e73bb58f21f9d response_code=200
Extracting name entities from utterance: 657
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room without entering a blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=3a0a419533c4393b427446bb2e371782 response_code=200
Extracting name entities from utterance: 658
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel to the green room without going through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1172 request_id=9773bc32d5b6a5fadd939c2a92d81056 response_code=200
Extracting name entities from utterance: 659
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntravel to the green room through the room that is not blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=bf574f2b7ecb14651d0e10bfbc4e1846 response_code=200
Extracting name entities from utterance: 660
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room through the room that is not blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=328 request_id=e9478ca07dcfee1339dd67d037f7810b response_code=200
Extracting name entities from utterance: 661
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter any room that is not blue to end up in the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=381 request_id=b8c9457be059a110160ef8554276be55 response_code=200
Extracting name entities from utterance: 662
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo into the green room but do not enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=7dc467497836b8561986ffa4f05c8d69 response_code=200
Extracting name entities from utterance: 663
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room without passing through the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=7301eef28fd0a94b5b0dd6fa3b9068be response_code=200
Extracting name entities from utterance: 664
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the room that is not blue and enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=aa33cdabc5c21f2d89ee03102292c522 response_code=200
Extracting name entities from utterance: 665
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the blue room and continue to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=751 request_id=e0f7bb5ccf59a3c8958f5694a46ae3f0 response_code=200
Extracting name entities from utterance: 666
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=628 request_id=d2aed26b4df35f53ee1b65edc57ec4b3 response_code=200
Extracting name entities from utterance: 667
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the large green room while avoiding the small blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=877 request_id=81d27512d5bc8969bb8dcf8863d8a488 response_code=200
Extracting name entities from utterance: 668
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo towards the green room while avoiding the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=e42a461021abe83daa307cc8ff8ab071 response_code=200
Extracting name entities from utterance: 669
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through the non blue room to enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=892 request_id=ad8ebf78f606d91afe98e2c85cb60373 response_code=200
Extracting name entities from utterance: 670
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room but do not enter the blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=417 request_id=c053d2bd8177e1c7245a8c4ae6cd3019 response_code=200
Extracting name entities from utterance: 671
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room while avoiding the blue room on the way\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=355 request_id=820e8e32c92a434b6d7db00b28ab6396 response_code=200
Extracting name entities from utterance: 672
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green without going through blue\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=344 request_id=1ced05e421d191cf490f6d706ff41235 response_code=200
Extracting name entities from utterance: 673
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove to the green room without entering a blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=8c0bf677ad94bf2d3004ad29ad2290b8 response_code=200
Extracting name entities from utterance: 674
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room through the red or blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1190 request_id=7e2c43b82ee05186249b1740da016486 response_code=200
Extracting name entities from utterance: 675
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to red or blue then green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=19f943fe42a05436b840814ddb240630 response_code=200
Extracting name entities from utterance: 676
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\navoid the yellow room and enter the green room through either the red or blue room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=c1d85dc7ac30f19c91af8f4d2e79193a response_code=200
Extracting name entities from utterance: 677
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the blue room or the red room and head straight away to the green room avoiding the yellow room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=957 request_id=da7cbc867900a333447e1c4738814baf response_code=200
Extracting name entities from utterance: 678
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to the green room either through the red room or through the blue room only\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=9df58c49feef384453ae63b87f087199 response_code=200
Extracting name entities from utterance: 679
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through either a red or blue room to enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=852 request_id=ba7ae24e8b9b6d945d133f43fe80960c response_code=200
Extracting name entities from utterance: 680
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue room or the red room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=630 request_id=fb3b3713f6cbf1744ef3634037be96c6 response_code=200
Extracting name entities from utterance: 681
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo thru the blue or red box to get to the green box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=603 request_id=5d856639968a7651f5a3ab77633d3ae9 response_code=200
Extracting name entities from utterance: 682
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\npass through either the blue or red room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1467 request_id=e7cd70ebd8fdc84151760533663ceec0 response_code=200
Extracting name entities from utterance: 683
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove from the pink box into the green box by way of the blue or red box avoiding the yellow box\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=696 request_id=e1cbf5c29f5ed15d3380a05411ac7528 response_code=200
Extracting name entities from utterance: 684
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through blue or red to get to green\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=e83376c4eccba51474241fa5f795c1a2 response_code=200
Extracting name entities from utterance: 685
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or the blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1063 request_id=ec350dfdbbcf92d9a1f13c08019a662f response_code=200
Extracting name entities from utterance: 686
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=695 request_id=dce655545491932e5de5dc846444f985 response_code=200
Extracting name entities from utterance: 687
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to green rectangle thru blue or red square but not yellow\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1517 request_id=f9416b1504382ba3a473ee6c22472189 response_code=200
Extracting name entities from utterance: 688
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nthe robot must move through the red or blue room to get to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=4132733b00ec1e12b01b1f35a744f088 response_code=200
Extracting name entities from utterance: 689
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the blue or red room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1368 request_id=9e86a358ab5e20cee67e46250afa0b6c response_code=200
Extracting name entities from utterance: 690
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the green room through either the red or or blue rooms\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=926 request_id=0843a486efae39c4302a6a59c065b232 response_code=200
Extracting name entities from utterance: 691
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1000 request_id=bbd53f7718c6f3350576a67b03010338 response_code=200
Extracting name entities from utterance: 692
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or blue room to enter the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=2bee2c6345aae90f29a301c3cc6b82f9 response_code=200
Extracting name entities from utterance: 693
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nenter the blue or red room and proceed until the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=906c6af70d01619edec0fdcd25fb144d response_code=200
Extracting name entities from utterance: 694
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nmove toward either the red or blue room then into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=750 request_id=1302fe7e48e020f6f7d47c7835acc748 response_code=200
Extracting name entities from utterance: 695
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through the red or blue room to the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=20ddec0fa547f36bd622d0414fb43a82 response_code=200
Extracting name entities from utterance: 696
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo through either the red or blue room to reach the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1370 request_id=72fa6314d785fa1fd5f190d87461d57f response_code=200
Extracting name entities from utterance: 697
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ntake the red or blue room into the green room\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1086 request_id=94aa51409e2a30b34326288dfe6fc214 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["blue colour place"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=69 request_id=c76a61572c7008a91f30a9f243b3661f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the a yellow room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=61 request_id=fb09e53121d0a0ef961171996ed89426 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the red small room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=62 request_id=814530d0dbea1a5aaef4fb654ac57f69 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the this room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=50 request_id=5c9df2414b45c80814cfecb6b01eb16b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the red square"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=63 request_id=5d3e89acf44fa8293fbc9a1fcb569e09 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the black yellow and red"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=59 request_id=f1df9e3d41274bfdb8d4dfc10e3ee469 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the a red square room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=78 request_id=dad119bcbfeb4db9eb4d7ffb1a75fde8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the any room that is not red"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=60 request_id=033d08e954e32c793d5633db37e98a73 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the other door"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=56 request_id=e63bb5f77c51bdd537c442b2f5883980 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["room that is not yellow"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=56 request_id=0e59ceb857cb63b7a7bee39e4ba4211a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["non yellow room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=61 request_id=3c616ea4aae7f5398784826d38947255 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the red box"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=54 request_id=151c498a1a5422242c0dc29c7c4af6bd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["red box |"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=65 request_id=eb18f52091318def7d5e1d8c67e67850 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["route which is red and black"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=60 request_id=a73971a7a7f924f8ea06e48afcf9acbb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the exit room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=61 request_id=2d420ef319e16d76a031543224d56be0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["white colour"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=60 request_id=9fee32832a0a0280d8ee7b3709798f13 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["other door"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=56 request_id=fcb2c6b7c5df27a8c42f9c238cfb2fa9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["door to the blue room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=60 request_id=b26705a2923b8c119f43c9f1377ce847 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["green colour"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=57 request_id=bc9295d0a26246ac2a1d78f1f4054084 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["room that is not red"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=59 request_id=530484fb69b7361dc2c5e347b9c4204c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["other door into the green room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=67 request_id=f94167f2054909f594c4057f8bf274b8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the a yellow"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=78 request_id=809e2c453a9c5e35ead83b2696582f00 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["door that is not yellow"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=60 request_id=60f2aea34f26d7f01a2ebe0ea426e394 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["room that isnt green"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=57 request_id=e5b970ba9a4a39f5b91707b934df123a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["door"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=58 request_id=849bc56a3c96443e927584e487c0dd3f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=56 request_id=ed1c07bee14181fb65c69e615f29d291 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the a green room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=60 request_id=f379b1cd6edffd65a5ed8af896c31c5a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["a yellow"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=57 request_id=e564d7d9046cd2bf500cd90e9436af45 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["first square"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=63 request_id=3da159c08eb864fe35c567d43a46d404 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the red rooms"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=61 request_id=1b46c0217ac0c4cd36636b5b07498a87 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the your room"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=59 request_id=29408661abdb9396be5765231fb20658 response_code=200
Name entity green rectangular room not found in input string: go over towards the blue room and up through it to green room
Name entity the green room not found in input string: go through blue room to green room
Name entity the blue room not found in input string: go through blue room to green room
Name entity the blue rooms not found in input string: go through blue rooms to get to the green one
Name entity green one not found in input string: go through blue room to get to green room
Name entity blue one not found in input string: go to green room through blue room
Name entity the blue area not found in input string: go to green room through blue area
Name entity green area not found in input string: go to green room through blue area
Name entity the green not found in input string: go through blue to get to green
Name entity the blue not found in input string: go through blue to get to green
Name entity the green room not found in input string: go through blue room to get to green room
Name entity the blue room not found in input string: go through blue room to get to green room
Name entity the green room not found in input string: go through blue to green room
Name entity the blue not found in input string: go through blue to green room
Name entity large green rectangular room not found in input string: travel through the blue square room to green room
Name entity blue square room not found in input string: travel through blue room to green room
Name entity the blue room not found in input string: move through a blue room and into green room
Name entity the green not found in input string: go through blue to reach green
Name entity the blue not found in input string: go through blue to reach green
Name entity the blue not found in input string: go to green room through blue
Name entity the green rectangle not found in input string: go to green rectangle via blue square
Name entity the blue square not found in input string: go to green room via blue square
Name entity the large green room not found in input string: go to large green room through blue room
Name entity the blue room not found in input string: go to green room through blue room
Name entity the green not found in input string: navigate through blue to reach green
Name entity the blue not found in input string: navigate through blue to reach green
Name entity other door into the green room not found in input string: enter the door to the blue room and exit green room
Name entity door to the blue room not found in input string: enter blue room and exit green room
Name entity the green room not found in input string: enter green room via blue room
Name entity the blue room not found in input string: enter green room via blue room
Name entity the green room not found in input string: go through blue room to green room
Name entity the blue room not found in input string: go through blue room to green room
Name entity green box not found in input string: go thru blue room to get to green room
Name entity blue box not found in input string: go thru blue room to get to green room
Name entity large green room not found in input string: move to green room by passing through blue room
Name entity small blue room not found in input string: move to green room by passing through blue room
Name entity the green room not found in input string: go to blue room then go to green room
Name entity the blue room not found in input string: go to blue room then go to green room
Name entity door not found in input string: go through red room to blue room and continue into green room
Name entity large green room not found in input string: pass through blue room to get to green room
Name entity small blue room not found in input string: pass through blue room to get to green room
Name entity green rooms not found in input string: move through green room to get to blue room
Name entity pink room not found in input string: go from red room to blue room by going through green room
Name entity small green room not found in input string: pass through green room to get to blue room
Name entity large blue room not found in input string: pass through green room to get to blue room
Name entity green box not found in input string: go through green room to get to blue room
Name entity blue area not found in input string: go through green room to get to blue room
Name entity the green room not found in input string: enter blue room through green room
Name entity the blue room not found in input string: enter blue room through green room
Name entity the green not found in input string: robot goes through green and ends up in blue
Name entity the blue not found in input string: robot goes through green and ends up in blue
Name entity green door not found in input string: enter blue room through green room only
Name entity the green area not found in input string: go to the blue area through green area
Name entity blue area not found in input string: go to blue room through green room
Name entity the green room not found in input string: go to green room before blue room
Name entity the blue room not found in input string: go to green room before blue room
Name entity green box not found in input string: go up through green room to blue room
Name entity blue box not found in input string: go up through green room to blue room
Name entity the green room not found in input string: go to blue room through green room
Name entity the blue room not found in input string: go to blue room through green room
Name entity the green rooms not found in input string: only go through green rooms to get to blue rooms
Name entity the blue rooms not found in input string: only go through green rooms to get to blue rooms
Name entity the blue room not found in input string: go via green color path to reach blue room
Name entity the green not found in input string: go via green color path to reach blue room
Name entity the green not found in input string: go through green to get to blue
Name entity the blue not found in input string: go through green to get to blue
Name entity the blue not found in input string: the robot goes through green room to get to blue
Name entity large blue room not found in input string: move through the green room to gain access to blue room
Name entity small green room not found in input string: pass through green room to get to blue room
Name entity large blue room not found in input string: pass through green room to get to blue room
Name entity the green room not found in input string: go to green room then to blue room
Name entity the blue room not found in input string: go to green room then to blue room
Name entity the green room not found in input string: go through green rooms to get to the blue one
Name entity blue one not found in input string: go through green rooms to get to blue room
Name entity the green room not found in input string: move through green room to the blue room
Name entity green rectangle not found in input string: avoiding all but green room travel to the blue area
Name entity blue area not found in input string: avoiding all but green room travel to blue room
Name entity the black yellow and red not found in input string: move to reach the blue place by taking a path which has green colour and white colour in it while avoiding black yellow and red colour
Name entity the green colour not found in input string: move to reach the blue place by taking a path which has green colour and white colour in it while avoiding red room colour
Name entity the white colour not found in input string: move to reach the blue place by taking a path which has green colour and white colour in it while avoiding red room colour
Name entity blue place not found in input string: move to reach blue room by taking a path which has green room and white colour in it while avoiding red room colour
Name entity the blue room not found in input string: move to blue room through green room
Name entity the green not found in input string: the robot goes through green to get to blue
Name entity the blue not found in input string: the robot goes through green to get to blue
Name entity the green rectangle room not found in input string: progress through green rectangle room to the large blue room
Name entity large blue room not found in input string: progress through green room to blue room
Name entity blue rectangular room not found in input string: travel through the green room to blue room
Name entity the green room not found in input string: enter blue room via green room
Name entity the blue room not found in input string: enter blue room via green room
Name entity the green not found in input string: go to blue via green
Name entity the blue not found in input string: go to blue via green
Name entity the green not found in input string: go through green to get to blue
Name entity the blue not found in input string: go through green to get to blue
Name entity the a green room not found in input string: move through the hallway to the blue room but only if it takes you through a green room
Name entity hallway not found in input string: move through red room to blue room but only if it takes you through green room
Name entity the green rooms not found in input string: go through green rooms to get to the blue one
Name entity blue one not found in input string: go through green room to get to blue room
Name entity small green room not found in input string: move to blue room by passing through green room
Name entity large blue room not found in input string: move to blue room by passing through green room
Name entity the your room not found in input string: move from your room to the red room
Name entity first square not found in input string: move into the red room and stay on red room you end up on
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: move into red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: go to red room
Name entity the red room not found in input string: move to red room
Name entity the red room not found in input string: go to red room
Name entity the yellow not found in input string: go only through rooms that are not yellow to get to green room
Name entity the green area not found in input string: proceed to green area while avoiding yellow room
Name entity yellow area not found in input string: proceed to green area while avoiding yellow room
Name entity the yellow not found in input string: move through the room that is not yellow into green room
Name entity the yellow area not found in input string: go to green area avoiding yellow area
Name entity the green area not found in input string: go to green area avoiding yellow area
Name entity the yellow room not found in input string: the robot is to move towards the green room without entering a yellow room
Name entity the yellow room not found in input string: go to the green room without entering a yellow room
Name entity the yellow not found in input string: the robot avoids yellow to get to the green
Name entity the yellow area not found in input string: avoid yellow area on way to green area each time
Name entity the green area not found in input string: avoid yellow area on way to green area each time
Name entity the yellow not found in input string: while avoiding yellow navigate to green
Name entity the green not found in input string: while avoiding yellow navigate to green
Name entity the a yellow room not found in input string: enter the green room without entering a yellow room
Name entity non yellow room not found in input string: enter green room via blue room
Name entity the green room not found in input string: enter green room via blue room
Name entity the yellow not found in input string: move to room not using yellow into green room
Name entity the yellow area not found in input string: go to green area by avoiding yellow area
Name entity the green area not found in input string: go to green area by avoiding yellow area
Name entity the yellow not found in input string: avoid yellow find green
Name entity the green not found in input string: avoid yellow find green
Name entity the yellow not found in input string: go through the room that is not yellow to get to green room
Name entity yellow rooms not found in input string: go to green room while avoiding yellow room
Name entity small yellow room not found in input string: move to green room while avoiding yellow room
Name entity large green room not found in input string: move to green room while avoiding yellow room
Name entity green rectangular room not found in input string: avoid the yellow room and end at green room
Name entity the yellow not found in input string: enter the room that is not yellow and then proceed to green room
Name entity the yellow not found in input string: move to the room that is not yellow and then move into green room
Name entity door that is not yellow not found in input string: enter the room through red room drive through the room and exit the other door to the green room
Name entity the yellow room not found in input string: go to green room but do not enter yellow room
Name entity the green room not found in input string: go to green room but do not enter yellow room
Name entity room that is not yellow not found in input string: travel to the green room through yellow room
Name entity the yellow not found in input string: go to green room but do not go to yellow
Name entity yellow rooms not found in input string: go to green room while avoiding yellow room
Name entity yellow rooms not found in input string: avoid yellow room on your way into green room
Name entity green rooms not found in input string: avoid yellow room on your way into green room
Name entity green rectangle not found in input string: get to green room but do not go through yellow room
Name entity yellow square not found in input string: get to green room but do not go through yellow room
Name entity the yellow room not found in input string: enter the green room without entering a yellow room
Name entity the red room not found in input string: go through the yellow or red room to reach blue room
Name entity the yellow room not found in input string: go the red or yellow room into the blue room
Name entity big blue room not found in input string: move the robot from red room to the yellow or red room to blue room
Name entity the red room not found in input string: move the robot from red room to the yellow or red room to blue room
Name entity pink room not found in input string: move the robot from red room to yellow room or red room to blue room
Name entity the yellow room not found in input string: go through the red or yellow room to reach the blue room
Name entity the a yellow not found in input string: go through the passage into blue room but only if you go through a yellow or red room first
Name entity the red room not found in input string: go through the passage into blue room but only if you go through a yellow or red room first
Name entity passage not found in input string: go through red room into blue room but only if you go through yellow room or red room first
Name entity the yellow not found in input string: move to blue room by going through red or yellow only
Name entity the red not found in input string: move to blue room by going through red or yellow only
Name entity the red room not found in input string: enter the yellow or red room and then continue to blue room
Name entity the yellow room not found in input string: go through the red or yellow room and go to the blue room
Name entity the yellow not found in input string: go through the red or yellow to get to blue room
Name entity the red room not found in input string: go through the yellow or red room and enter blue room
Name entity the red room not found in input string: move through the yellow or red room to blue room
Name entity the yellow box not found in input string: pass thru either the red or yellow box to get to the blue box
Name entity blue box not found in input string: pass thru either the red or yellow room to get to blue room
Name entity the yellow room not found in input string: go to blue room by using red or yellow rooms first
Name entity the blue room not found in input string: go to blue room by using red or yellow rooms first
Name entity the red room not found in input string: go to blue room by using red or yellow rooms first
Name entity red room not found in input string: go to blue room by using red or yellow rooms first
Name entity the red room not found in input string: go through the yellow or red room to blue room
Name entity the red room not found in input string: the robot has to go through the yellow or red room to get to blue room
Name entity the yellow not found in input string: go to blue room through red or yellow
Name entity the red not found in input string: go to blue room through red or yellow
Name entity the green room not found in input string: go through the red or green room into the blue room
Name entity the green room not found in input string: go to red room and then green room
Name entity the red room not found in input string: go to red room and then green room
Name entity the green room not found in input string: go to red room go to green room
Name entity the red room not found in input string: go to red room go to green room
Name entity the green room not found in input string: first go to red room then go to green room
Name entity the red room not found in input string: first go to red room then go to green room
Name entity the green room not found in input string: move to red room move to green room
Name entity the red room not found in input string: move to red room move to green room
Name entity the green room not found in input string: go to the red room and then to green room
Name entity the green room not found in input string: move from blue room to red room then move to green room
Name entity the blue room not found in input string: move from blue room to red room then move to green room
Name entity the red room not found in input string: move from blue room to red room then move to green room
Name entity the green room not found in input string: move to red room then move to green room
Name entity the red room not found in input string: move to red room then move to green room
Name entity the green room not found in input string: go to red room go to green room
Name entity the red room not found in input string: go to red room go to green room
Name entity the green room not found in input string: go to red room go to green room
Name entity the red room not found in input string: go to red room go to green room
Name entity the green room not found in input string: go to red room go to green room
Name entity the red room not found in input string: go to red room go to green room
Name entity the green room not found in input string: go to red room go to green room
Name entity the red room not found in input string: go to red room go to green room
Name entity the green room not found in input string: move to green room
Name entity the this room not found in input string: leave this room and go into green room
Name entity the green room not found in input string: move to green room
Name entity the green room not found in input string: move to green room
Name entity the exit room not found in input string: exit room and go right to green room
Name entity the green room not found in input string: move to yellow or red room them move to green room
Name entity the red room not found in input string: move to yellow or red room them move to green room
Name entity the yellow not found in input string: move to yellow or red room them move to green room
Name entity the yellow room not found in input string: the robot has to go through the red or yellow room to get to the green room
Name entity the red room not found in input string: the robot has to go through the red or yellow room to get to green room
Name entity red room not found in input string: the robot has to go through the red or yellow room to get to green room
Name entity the red room not found in input string: go through the yellow or red room and enter green room
Name entity the red room not found in input string: go through the yellow or red room into green room
Name entity the red box not found in input string: go thru the yellow or red box to get to green room
Name entity green box not found in input string: go thru yellow room or red box to get to green room
Name entity the yellow rooms not found in input string: get to the green room through red or yellow rooms only
Name entity the red not found in input string: get to green room through red or yellow room only
Name entity the red small room not found in input string: move the robot through the yellow or red small room and then to green room
Name entity large green room not found in input string: move the robot through the yellow or red small room and then to green room
Name entity the red room not found in input string: go through the yellow or red room to green room
Name entity the red room not found in input string: enter the yellow or red room and proceed to green room
Name entity the red room not found in input string: move to green room by going through the yellow or red room
Name entity the red room not found in input string: move through the yellow or red room to green room
Name entity the red room not found in input string: go through the yellow or red room to green room
Name entity the red room not found in input string: go through the yellow or red room to reach green room
Name entity the yellow not found in input string: only go through the red or yellow to get to the green
Name entity the green square not found in input string: go through yellow or red square to get to green square
Name entity the red square not found in input string: go through yellow or red square to get to green square
Name entity the yellow not found in input string: go through yellow or red square to get to green room
Name entity the red room not found in input string: go through the yellow or red room to reach green room
Name entity the yellow not found in input string: go through red or yellow to get to green
Name entity the green not found in input string: go through red or yellow to get to green
Name entity the red not found in input string: go through red or yellow to get to green
Name entity the green room not found in input string: move through the yellow or green room to the blue room
Name entity the yellow not found in input string: go green or yellow to blue
Name entity the green not found in input string: go green or yellow to blue
Name entity the blue not found in input string: go green or yellow to blue
Name entity the yellow not found in input string: go green to blue or yellow to blue
Name entity the green not found in input string: go green to blue or yellow to blue
Name entity the blue not found in input string: go green to blue or yellow to blue
Name entity the yellow rooms not found in input string: move through the green or yellow rooms and enter the blue room
Name entity the green room not found in input string: go through the yellow or green room to get to the blue room
Name entity the yellow room not found in input string: go through the green or yellow room to get to the blue room
Name entity the yellow room not found in input string: go to green or yellow room to blue room
Name entity the green room not found in input string: go to green or yellow room to blue room
Name entity the blue room not found in input string: go to green or yellow room to blue room
Name entity green room not found in input string: go to green or yellow room to blue room
Name entity the green room not found in input string: go through the yellow or green room to get to the blue room
Name entity the yellow room not found in input string: pass through the green or yellow room and enter into the blue room
Name entity the green room not found in input string: move through the yellow or green room to the blue room
Name entity the yellow room not found in input string: go through the green or yellow room to the blue room
Name entity the yellow box not found in input string: up through the green or yellow box to reach the blue box
Name entity blue box not found in input string: up through green room or yellow room to reach blue room
Name entity the yellow room not found in input string: go to blue room through green or yellow room
Name entity the blue room not found in input string: go to blue room through green or yellow room
Name entity the green not found in input string: go to blue room through green or yellow room
Name entity the green room not found in input string: move toward either the yellow or green room then into the blue room
Name entity the yellow room not found in input string: go through the green or yellow room to the blue room
Name entity the green room not found in input string: go through the green or yellow room to the blue room
Name entity green room not found in input string: go through the green or yellow room to blue room
Name entity large blue room not found in input string: move the robot to yellow room or green room and then to blue room
Name entity the green room not found in input string: move the robot to yellow room or green room and then to blue room
Name entity small yellow not found in input string: move the robot to yellow room or green room and then to blue room
Name entity the green room not found in input string: go through the yellow or green room to get to the blue room
Name entity blue rectangular room not found in input string: head to blue room without passing through a red square room
Name entity the a red square room not found in input string: head to blue room without passing through a red square room
Name entity the blue room not found in input string: move to blue room but do not go through the red room
Name entity the blue room not found in input string: go through room that is not red to get to blue room
Name entity the red not found in input string: go through room that is not red to get to blue room
Name entity the blue not found in input string: go to blue but not through red
Name entity the red not found in input string: go to blue but not through red
Name entity route which is red and black not found in input string: take a path to reach the blue colour place by not taking red room
Name entity blue colour place not found in input string: take a path to reach blue room by not taking red room
Name entity the blue not found in input string: go to blue but not through red
Name entity the red not found in input string: go to blue but not through red
Name entity the blue room not found in input string: got to blue room without going through red room
Name entity the red room not found in input string: got to blue room without going through red room
Name entity the blue room not found in input string: go to blue room while avoiding red rooms
Name entity the red rooms not found in input string: go to blue room while avoiding red rooms
Name entity the red not found in input string: go to blue room but do not go through red
Name entity red rectangle not found in input string: avoiding red room travel to blue room
Name entity blue area not found in input string: avoiding red room travel to blue room
Name entity large blue room not found in input string: move to blue room while avoiding red room
Name entity small red room not found in input string: move to blue room while avoiding red room
Name entity the blue room not found in input string: never follow red path to reach blue room
Name entity the red path not found in input string: never follow red path to reach blue room
Name entity the red area not found in input string: go to blue room by avoiding red area
Name entity blue area not found in input string: go to blue room by avoiding red area
Name entity the blue room not found in input string: move to blue room not using red room
Name entity the red room not found in input string: move to blue room not using red room
Name entity the red room not found in input string: enter blue room without entering a red room
Name entity the red not found in input string: go only through rooms that are not red to get to blue room
Name entity the red spaces not found in input string: without stepping on red spaces move into the blue room then stop once you enter it
Name entity the blue room not found in input string: move to blue room but avoid the red room
Name entity room that is not red not found in input string: go through blue room and enter the blue room
Name entity the blue room not found in input string: enter blue room via red room
Name entity non red room not found in input string: enter blue room via red room
Name entity the a red room not found in input string: enter the blue room without entering a red room
Name entity large blue room not found in input string: move to blue room while avoiding red room
Name entity small red room not found in input string: move to blue room while avoiding red room
Name entity the red not found in input string: go through the room which is not red to get to blue room
Name entity the any room that is not red not found in input string: enter the blue room by any room that is not red
Name entity the blue not found in input string: the robot avoids red to get to blue
Name entity the red not found in input string: the robot avoids red to get to blue
Name entity room that is not red not found in input string: enter blue room which will lead to the blue room
Name entity the red not found in input string: go only through rooms that are not red to get to blue room
Name entity the blue not found in input string: go to blue but not through red
Name entity the red not found in input string: go to blue but not through red
Name entity the yellow not found in input string: go to blue via green or yellow but not red
Name entity the green not found in input string: go to blue via green or yellow but not red
Name entity the blue not found in input string: go to blue via green or yellow but not red
Name entity the red not found in input string: go to blue via green or yellow but not red
Name entity the red rooms not found in input string: avoid red rooms while going to the blue one
Name entity blue one not found in input string: avoid red room while going to blue room
Name entity the red area not found in input string: go to blue room by avoiding red area
Name entity blue area not found in input string: go to blue room by avoiding red area
Name entity the red room not found in input string: move to blue room without entering a red room
Name entity blue rectangular room not found in input string: avoid the red room and end at blue room
Name entity blue rectangular not found in input string: go through square that is not green to get blue room
Name entity the green not found in input string: go through square that is not green to get blue room
Name entity the green not found in input string: go to blue but not through green
Name entity the blue not found in input string: go to blue but not through green
Name entity the green not found in input string: go through the room that is not green to get to blue room
Name entity the green not found in input string: go to blue without going to green
Name entity the blue not found in input string: go to blue without going to green
Name entity green one not found in input string: enter blue room without crossing green room
Name entity the a green room not found in input string: enter the blue room without entering a green room
Name entity the blue room not found in input string: go to blue room avoiding green
Name entity the green not found in input string: go to blue room avoiding green
Name entity the green room not found in input string: go to blue room without going to green room
Name entity the blue room not found in input string: go to blue room without going to green room
Name entity the green room not found in input string: reach blue room without going through green room
Name entity the blue room not found in input string: reach blue room without going through green room
Name entity the green area not found in input string: go to blue area by avoiding green area
Name entity the blue area not found in input string: go to blue area by avoiding green area
Name entity room that is not green not found in input string: enter yellow room and proceed through to the blue room
Name entity the green not found in input string: only go through rooms that are not green to get to blue room
Name entity the green not found in input string: go through the room that is not green and enter blue room
Name entity room that is not green not found in input string: drive through yellow room and enter the blue room
Name entity the green not found in input string: pass through any room that is not green to reach blue room
Name entity the green not found in input string: avoid green go to blue
Name entity the blue not found in input string: avoid green go to blue
Name entity the green area not found in input string: go to the blue area by avoiding green area
Name entity blue area not found in input string: go to blue room by avoiding green room
Name entity room that is not green not found in input string: enter into yellow room and continue through that room into the blue room
Name entity the green room not found in input string: move to the blue room without entering a green room
Name entity the green not found in input string: go to blue but not through green
Name entity the blue not found in input string: go to blue but not through green
Name entity the green not found in input string: go through the room that is not green to blue room
Name entity the green not found in input string: avoiding green navigate to blue
Name entity the blue not found in input string: avoiding green navigate to blue
Name entity blue area not found in input string: get to blue room by avoiding green room
Name entity room that is not green not found in input string: go to the blue room through yellow room
Name entity room that isnt green not found in input string: enter red room then go to the blue room
Name entity the a green room not found in input string: enter the blue room without entering a green room
Name entity room that is not green not found in input string: travel to the blue room through yellow room
Name entity the green not found in input string: entering any room that is not green will lead you to blue room
Name entity small green room not found in input string: move to blue room while avoiding green room
Name entity large blue room not found in input string: move to blue room while avoiding green room
Name entity the green not found in input string: go to green without going through blue
Name entity the blue not found in input string: go to green without going through blue
Name entity blue one not found in input string: enter green room without passing blue room
Name entity the blue room not found in input string: pass through the non blue room to reach green room
Name entity the blue not found in input string: enter the room that is not blue then go to green room
Name entity the blue not found in input string: go through the room that is not blue to green room
Name entity the blue room not found in input string: enter green room without entering a blue room
Name entity the green not found in input string: go to green but not through blue
Name entity the blue not found in input string: go to green but not through blue
Name entity the green room not found in input string: go to green room avoiding blue
Name entity the blue not found in input string: go to green room avoiding blue
Name entity the green area not found in input string: go to green area avoiding blue area
Name entity the blue area not found in input string: go to green area avoiding blue area
Name entity the green not found in input string: avoiding blue navigate to green
Name entity the blue not found in input string: avoiding blue navigate to green
Name entity the blue not found in input string: only go through rooms that are not blue to get to green room
Name entity large green room not found in input string: move to green room while avoiding blue room
Name entity small blue room not found in input string: move to green room while avoiding blue room
Name entity the blue not found in input string: drive through the room that is not blue and enter green room on the other side
Name entity the blue not found in input string: go through the room which is not blue to get to green room
Name entity green area not found in input string: get to green room by avoiding blue room
Name entity the green area not found in input string: go to green area by avoiding blue area
Name entity the blue area not found in input string: go to green area by avoiding blue area
Name entity the blue not found in input string: enter the room that is not blue and proceed through to green room
Name entity the green room not found in input string: go into green room but avoid blue room
Name entity the blue room not found in input string: go into green room but avoid blue room
Name entity the blue room not found in input string: go to green room without entering a blue room
Name entity the blue not found in input string: travel to green room through the room that is not blue
Name entity the blue not found in input string: go to green room through the room that is not blue
Name entity the blue not found in input string: enter any room that is not blue to end up in green room
Name entity the blue not found in input string: go through the room that is not blue and enter green room
Name entity large green room not found in input string: move to green room while avoiding blue room
Name entity small blue room not found in input string: move to green room while avoiding blue room
Name entity non blue room not found in input string: pass through red room to enter green room
Name entity the green not found in input string: go to green without going through blue
Name entity the blue not found in input string: go to green without going through blue
Name entity the blue room not found in input string: move to green room without entering a blue room
Name entity the blue room not found in input string: go to green room through the red or blue room
Name entity the red room not found in input string: go to green room through the red or blue room
Name entity red room not found in input string: go to green room through the red or blue room
Name entity the green not found in input string: go to red or blue then green
Name entity the blue not found in input string: go to red or blue then green
Name entity the red not found in input string: go to red or blue then green
Name entity the blue room not found in input string: avoid yellow room and enter green room through either the red or blue room
Name entity the blue room not found in input string: go through either a red or blue room to enter green room
Name entity the red room not found in input string: go through either a red or blue room to enter green room
Name entity red room not found in input string: go through either a red or blue room to enter green room
Name entity the red box not found in input string: go thru the blue or red box to get to green room
Name entity green box not found in input string: go thru the blue or red box to get to green room
Name entity the red room not found in input string: pass through either the blue or red room to reach green room
Name entity the red box | not found in input string: move from the pink box into green room by way of the blue or red box avoiding the yellow box
Name entity the blue box not found in input string: move from red room into green room by way of the blue or red box avoiding the yellow box
Name entity green box not found in input string: move from red room into green room by way of the blue or red box avoiding the yellow box
Name entity red box | not found in input string: move from red room into green room by way of the blue or red box avoiding the yellow box
Name entity pink box not found in input string: move from red room into green room by way of the blue or red box avoiding the yellow box
Name entity blue box not found in input string: move from red room into green room by way of the blue or red box avoiding the yellow box
Name entity the green not found in input string: go through blue or red to get to green
Name entity the blue not found in input string: go through blue or red to get to green
Name entity the red not found in input string: go through blue or red to get to green
Name entity the blue room not found in input string: go through the red or blue room to get to green room
Name entity the red room not found in input string: go through the red or blue room to get to green room
Name entity red room not found in input string: go through the red or blue room to get to green room
Name entity the green rectangle not found in input string: go to green rectangle thru blue or red square but not yellow
Name entity the red square not found in input string: go to green room thru blue or red square but not yellow
Name entity the yellow not found in input string: go to green room thru blue or red room but not yellow
Name entity the blue not found in input string: go to green room thru blue or red room but not yellow
Name entity the blue room not found in input string: the robot must move through the red or blue room to get to green room
Name entity the red room not found in input string: the robot must move through the red or blue room to get to green room
Name entity red room not found in input string: the robot must move through the red or blue room to get to green room
Name entity the blue room not found in input string: go through the blue or red room to green room
Name entity the red room not found in input string: go through the blue or red room to green room
Name entity blue room not found in input string: go through the blue or red room to green room
Name entity the blue room not found in input string: enter green room through either the red or or blue rooms
Name entity the red room not found in input string: enter green room through either the red or or blue rooms
Name entity red room not found in input string: enter green room through either the red or or blue rooms
Name entity the blue room not found in input string: go through the red or blue room to green room
Name entity the red room not found in input string: go through the red or blue room to green room
Name entity red room not found in input string: go through the red or blue room to green room
Name entity the blue room not found in input string: go through the red or blue room to enter green room
Name entity the red room not found in input string: go through the red or blue room to enter green room
Name entity red room not found in input string: go through the red or blue room to enter green room
Name entity the red room not found in input string: enter the blue or red room and proceed until green room
Name entity the blue room not found in input string: move toward either the red or blue room then into green room
Name entity the blue room not found in input string: go through the red or blue room to green room
Name entity the red room not found in input string: go through the red or blue room to green room
Name entity red room not found in input string: go through the red or blue room to green room
Name entity the blue room not found in input string: go through either the red or blue room to reach green room
Name entity the red room not found in input string: go through either the red or blue room to reach green room
Name entity red room not found in input string: go through either the red or blue room to reach green room
Name entity the blue room not found in input string: take the red or blue room into green room
Name entity the red room not found in input string: take the red or blue room into green room
Name entity red room not found in input string: take the red or blue room into green room
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A keep going and stop when you reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=697aa9ac99ff45dbe179888e700f7e82 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=7135caab614baeba0f7c5ed26e9e5a92 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=ed3933640f0cc10ca952ed5f15b78d15 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo over towards A and up through it to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=c9ddeadf98fdeb2985e08c610cb9d681 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=613 request_id=0345e069b39e53a749319fec67788f17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=41b999dde21a5587841cb599635c11e7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfollow the path through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=9d866dcfba78fd6ecfc2152fcadf1acb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=517 request_id=f2906c88d2018f7a73f42bc4371a9618 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=613 request_id=56a8526431573572a03f5c3ac8a2cc98 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntake A first which leads to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=315 request_id=65a22b7cee84eadec112b525fd6c1cb4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nonly go to B by first entering A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=7c558be4bc69c3402a3141a3cffc1390 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=96bc2c36cae79cf90c5ed6fb6887b963 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=575 request_id=c1ffd7295d2249bf8abf57546865d42a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=4fc49183d3357a8122987f2fc9f86d5a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=488 request_id=85ef9496045f80087bc851a8807d036d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=850 request_id=51b518027798e0080e3547218b048a65 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=33ff088682f58fe29d3a04507b72329c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nplease go to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=423 request_id=2b81bcffcb0767effd9f838a1501d5ba response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=36c1eb228b9df62318e09f39d390375f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=289 request_id=bb213d63a0a3a97d34911f2b10488413 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through a A and into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=4501a4bd8ced3641907faccbf8a9dc1f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=e7ab074edea851e6d45459b6fb7607dd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=331 request_id=b8ec9db91e53a43eac98cf3954dd2097 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=338 request_id=96a3eaaabf2f9bb477ec61e8c86c3183 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=f374632defcfc2c9fbbaa05f9b872f29 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=1fe8f1b910ccda3ca297f8cba12aeb14 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=413 request_id=b473fa2cd56f4edb027d871a800eede8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A and then B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=455 request_id=cd9a29515edd90fad6e03693e87b80de response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=422 request_id=6ebc2468b30f2acdfcdbe55b2c79e3ee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=35a07a74ea625b129b6f7ebd5cda6f4e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=fd044cdbb1fb244f8b84896c5bd5c322 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=0da98c321395b4570d65f6f2fb9060ae response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=7e48d396d985af594d18b8feac909782 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel through A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=287 request_id=e652452349a985feab20e03dc1fce15d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=370 request_id=59433b699c778476a0a6972c824082a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A only and then B only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=d111c8c1c1fa35dbf926a2f8845b6729 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nnavigate through A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=c0f6bd1a6e174b3af02f42e378998b6b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=310 request_id=edd50e74fd0fc94f8e234a9b223db451 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmake your way to B by going through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=e53ff41014e402170550d82b55190ec4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot moves through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=f30f6b349db4c85a59a16a06b075cd17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A and proceed until B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=385 request_id=47f4d04e45546dd6cde7fe5671eb8ee2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A towards B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=f536ad69e8888ac7e5b43e6ee459e7f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=55675da9d5089ac93690707d75522e37 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B by passing through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=601 request_id=b23475731c5b008279028550b3f88dd1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A and exit B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=a2edf5a7732d3c5050d0473a93048fcf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1031 request_id=b2ad9222eb2772c49aef885952c30231 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=499 request_id=253178679b816d90cf44b7064a2cbd5c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=e62bcb42c191e322375f1db82b5a57f5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A until you get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=948199fe4642721a99129a6b762642aa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=7554d50f5185d4f146bc93f95067602d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel through A to go into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=36bc1d80ec721c7a7cc93fabe22c5857 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=584 request_id=35741cc4d96ae448d5fad029adf62b9c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nalways walk through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=91dca97bdfbc280d12cd165c9af80d38 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot moves towards B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=597 request_id=30435c363df6bca7faff5c8a2e6e1e31 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo thru A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=6cc797e7254756efb38dfe49fb4fd78a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A and then to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=842 request_id=56c921643e662981208b579e3794c8af response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ninstead of going through B move through A to enter C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=824 request_id=4060eaacfa12e9477c2e26fd8b5a4819 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=362 request_id=db60656b2df87eab6a9bbdebdba27782 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A in to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2161 request_id=044373967b07c5eeb097998a01a24aeb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo thru A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=f87d1f4f6813abc1833e3fa013d5f89d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1016 request_id=dbc107a8b00c88248d7e86b8c52a40ee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=8c35a369b331a9eb12e75cee50e61bba response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot goes to A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=469 request_id=345046a85f12407480e0dabc6b7fd7bd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwalk pass A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=569 request_id=ef173a84477b0d50b50f198e14590ee2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B by passing through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=350a145a19f5587e361a0dc688fe3e28 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A and then B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=647 request_id=8e5f1798a22b732dd76ceebf78fa6792 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=390 request_id=cb2f7f63067b5f87e1d80ed60f244ed3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nyou must walk through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=819 request_id=131d64a72280ba12acb1d4f1862a24b5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=a7c1ac6a361d809d11fc78971b324306 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B only through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=5cdd24d3d5e3a89cc70d691bdab5d5bf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A and enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=0c62691cbd0fbbff5f8182cbc3a696e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwalk through A until you reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=436 request_id=4149d2a0759c71d4bddbf1939d0c86a8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ncross A only to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=697b173539ebb1ceded937ea455524e6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=f7d2391dab4ad9140e5b588cd3b909a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=431 request_id=c2a7d77f83c937d8208ab6a253130d37 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=7f518c1919fd2fd8574e0422d19f5ee7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=0f23890353d7eb45e66ce873f5c4f746 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A and continue into C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=0c4b16a9038b3435e8d40509fc0f453d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfirst enter A and then proceed to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=633 request_id=d5580b1b0eda5c5770e002fd83fd4071 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove toward A then into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=f59bda7624d1ed12170584a4f013eae3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into B while being sure to pass through only A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=28432f332c6be2b64105b12f8a8fd24c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B by first entering A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=676 request_id=ece206a5de5d376e29c5b504e08566fb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=511 request_id=337e2a617df59c9cd23b991b9d52e9ae response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot goes through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=da697148076c8a80a229aaa3704483f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=366 request_id=467504eff21b42963473d11fe32852d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=6668b2f40ba554e817457fc902c098b2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into B by way of A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=7dbf8caa4d3f98fd67c89cd0f5f8de96 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A while moving to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=763 request_id=30418364ae823bdfc1fc74065da1cbcc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=8e85c1fd1f8a518d5b602fd8ce39ba9e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=973ee23ac028c5d9801abd342e494e66 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=754 request_id=ebfbc053b1940775e2edc7dfa2b820cc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo from B to A by going through C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=1bb2d3cd9941e4abae1490154c294d8c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=300 request_id=2b1859d77a26478519e255588856019a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=8d1c216a4ebdb20bd7648ea5c608c3e6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A by going through B first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=b971529856a27dc0fece07b962b113a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=be36a50f40c80d446e86492f7ee2633a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=58b4f15227d63edc619fc107137c71b7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=ebedeff2d48b73563aa8c0f2931aaf85 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B in to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=516 request_id=acbac888767eb78463f87ea451ecd834 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=1e056cdc4fb9f39cc7b2bbc26ed16f70 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nrobot goes through B and ends up in A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=66c6ecd9b8c6f1bd2bcbe7cdb01a6e28 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A but only via B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=e3540122879bfe455c3d5d57bf23d621 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=488 request_id=77e91ef044184b5f2dc3823362e4bdec response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=b88ce5802c4c8c896aded4ff83bd0f61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A through B only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=887 request_id=47a68e2ef0829151a48f985271b12b31 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot must go into A by going through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=3df735820ebf3206535bfc3ddee81d1d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=c6a2fcbf2cfffaa1d351da4d379c5afe response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=ded4749e67a4dd3460fc0584fae40b4f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B before A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=fcb615ddfbbe0081141c2cf5d54d9caa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A via B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=cccc9974f723106661fd8b03e940a2d9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo up through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=781d340ca175fbf4d674fdcd349dc68f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=0652577395e5d2a0f881d929d0bd83cd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but only go through B to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=1c83bebc7c6237b047ed08343e126036 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=a68ff94597a489e6fa08568d71cd6ea4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nonly go through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=818 request_id=8fd9d1b32a456155538fda4875add965 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo via B color path to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=6ef6c10088c3559cd26bff078e13e07f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=343 request_id=481f4e0b8f8e2b7226c5c1e3ecc8758a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B and then into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1385 request_id=e6506d56aab34dffe055d4d5e126de10 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=423 request_id=8a689505bbe2842f2005058b6c1478f2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=375 request_id=9a169531b15ee0be5f27ab4cc60c4bc8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot goes through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=f1b1e747e39f925a6dfa1ba1c4215f37 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and make sure to go through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=d167761db25dbf9a57f2852b88d8bc8f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to gain access to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=610 request_id=8153a34afbb4aa4e46d3df39a69be3fe response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=ad2008234e42aa117a46c9cf2c284103 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=09e77d617d3cff5c68d872a83e18f7a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=427 request_id=6b49a9ed7be4f4b2696f89f14d965a27 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B then to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=3c4a2c811ac6920274c32176debf3c27 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through Bs to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=461c6b5c74bf9057af117c37162c60c0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=3a9498ccfbaf2defaa5de35df985a280 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=368 request_id=2df38d9f57e05a331417bef005bd61e4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=299 request_id=6dfcf6b72932ace7b41b123ff14177e3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=784 request_id=db8da0253c753f3d5137063187a2a3c8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B and into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=b9a83ff79e00a662e39d2e1826a14622 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoiding all but B travel to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=726202dbd15c28806a0aeb128273bb91 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to reach A by taking a path which has C and white colour in it while avoiding B colour\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=644 request_id=431c5afbc3e1a6dfa0a179e605182421 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=421 request_id=8526ca2a7460e78f3ab50002dede5d5f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=4d31f5b7a469aec9564700fff4f05188 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=d529e9138baa9fe22ccb313a903e29ec response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=667 request_id=34f167ef447d18c1d99f6f1af67d2f79 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=503450879f04722f91dabee76f749232 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A by going though B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=eb84e248130e5b0d81f2c026b8158ff6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo towards A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=612 request_id=00ace2fe2a66c3890ceffdbf29525b9d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=455 request_id=5bc930ce9d10c6edbb33dd8d275df1b1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=608 request_id=04b0c43ad238757a156c3bc90a2c2fb9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot goes through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=682 request_id=f116272a023e222a44fa62dc9cb1b797 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=0511c3405063d9b9a91874eb3be30325 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A by way of B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=375 request_id=99830e728d2ca0644bdb071a5cc5ff70 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nprogress through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=ce42cac571968875433d25ed43769ca4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=c2b9a1df2b3b7e59930139ce8737d63f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A via B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=422 request_id=a8c2c01517ab29213a5cbd46ef34dd1d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nto reach A go through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=c571bafd298a0e038f7f918e8eec18bb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B and exit into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=abccc7edef62acd7a8963c720e852892 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=852 request_id=c26b53325f952b5a21687ecf7e9cf9f0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B and to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=427 request_id=854f846e5739b2b6d77c7e7280b108f5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=452 request_id=1758544aa24dbf9cf7aaed83bb0b01e2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A via B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=471 request_id=bd88ac692ab6222a5f6982ed135eea90 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=fc3114e53977552a5b46b7664b9609bc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=67a9a22dd15922127074a93c44819836 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo up through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=1a22de61a13887526c4f548291872fe1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=88146259145e225c514df9f7af47b492 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=953 request_id=2623358b9aee4f4dd514762c58dda03e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfollow B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=aa4684ca87520068f2e8cde96629c1bd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A via B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=431 request_id=fb34e8afc6ab5128f540a91fb3b95f54 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfirst enter B and then move to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=513 request_id=9b287e5973796f0568bf83507d038c9c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove toward B then into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=b83b949eacfcd084b3757aa1aaa0f976 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B in to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=db7d9afe93ffcf85fb6736ca7be794af response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B and into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=0414a21c560cbfe254c88364c8f805ef response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=0c0b1c0f0ed527b6b83f1b0d3329d742 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=b0a0e5d3fa1d0da966a6dc456dfee134 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B and out into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=1462ba276520834fc1660b8803aa3a84 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=464 request_id=5afbec5a6ae28ef57f0a81fa4035a248 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to A but only if it takes you through C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=608 request_id=e97dca22eae1c783a870f74097ce8cc5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=1e010e0a62a468a77f0828de6b3ebddd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B and into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=326 request_id=33dc2022f7507e8da20ce8a618f6c857 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=972 request_id=fde5f506b64af556dbc2204ad0db05d1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=785e03a3724f7fa7f52ee10c31893806 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=03b2543cf04d45797190ea6cef5d1bda response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1075 request_id=7635b597a280046f27bb36d6d48532d6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A by passing through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=f68e394983b5fe500cdb108a14b904e6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=322 request_id=f61c2b8243588a150897f33daaff5bbb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=77d174b08b4312ae268ce36a420f87f4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=d3c57ecd14eec8837f57136708e6a324 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=445 request_id=29dae6a5b4bc4b044a2250393966c801 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove from A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=f60cc23313fb3d8b8a38b515107430ac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=0354dca3a32c2f9117e53af8b7949462 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo in to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=120c227b3ffed8a51f89e1925571f09a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=336 request_id=7b91cee5da0907a80007dd06c4700c40 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into the A and stay on A you end up on\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=d68836e27f847ec806b79cddfe1a45a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=a5d93dae340cc5f5055e86465e3dcba0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=499 request_id=9fd3ec9232c64534fe9d6ed0244d65a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=b33898a56cb1749c91b4cf75d9a52cee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=268644403614c0bb4c9cb309cbd61863 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=bc1645a97e62d1d24a64e74c708fc23b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=326 request_id=68ed48450402a7803f5dcb090ce20395 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=90b2bce5512a796a7b18ad29f7da0bf9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=0bfb818f9a1456afc3561446fcde6f11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=282 request_id=f6329a0757f07ffa9dab59d951afed67 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=456417a0baac01760c2d8cd471962edb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=26ecdf591dc3434c56cf0c80ba37b7be response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=42c9f487ff207f5465fb814706a5ed1c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=559 request_id=365ff3d72da7cb6ceadd5a4e43efda17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=410 request_id=7f30761d590f5e5f67c1244a323d4eab response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=436 request_id=aad14f6cc00719717ea12f3121b54311 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=b731924c85b8e610b7252a389602e308 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1414 request_id=4fb4c99dd5d48dc9e955725777f01d37 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=381 request_id=8f316dd148550ace213fe256d9a688ab response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=65dd67d6e7450a2b10529be15d9ac0a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=1b658b8cf4dedc498be7a6a3dd1990c1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=e4b0d4b6a9a34c846e279eaf0306a6e0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=b9835fb8d299ee80a8a2041a3dfdac1c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=aafdbca38cb204479738f07d3eda1abb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=429 request_id=12266d9c417640415cfe6520da711218 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=dfe6a990ef19a214c6c531345f6d8618 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=22aa97ba048190890d9cd890325b28b0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=84a8602e6c5fa92a2754d0d0ac9491c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=384 request_id=e2fbcc0adc2c05796ced16640174a1d4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=400 request_id=79adc10031c7c37248e9dc73bc2dd6f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=472 request_id=cc81ecc33c2a1525792cdc569c812289 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=406 request_id=1a6b256e9c09451e0cd5b47bef758c27 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=de279d7ccb6312b1e440618b030cc02c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=432 request_id=126215f5829c853db205b47b0d421369 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=e038ee5e072d05a5116883a39dfe0aa4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=932a59ec7c3d67c9f5f5fc0be0eadd72 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=446 request_id=113775f26182d596d3555b876f0f34ef response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2774 request_id=311739df092e54852dd18ffb9c7bae6a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=594 request_id=7e700d07aab43d2e08d543d17724b577 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=794 request_id=e59f627f5a23fe37b56e2329df45bf0c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=c2f34c987e1ad1e1e8abef7bb296fa7c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=609 request_id=63c030b950d5c08b09fa23173afb8cc0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=d096d676f93d8fb3b46ad5429e51c303 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=4179d1d6188fe7400b477de7d9f48ea1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=df4e54e96adf5faafe6bdd926ba2028e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=344 request_id=5f40e25dc6ddb40f248042348a200745 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A and stop after entering\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=e70829eee6e8ade6012453377afc79fc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=dc6bd5a60fe548854b34fd0d1a8b13c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=558 request_id=bf89cde88d57bb8b9a49930515ffa7c8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=9a52f5304ed582779c7a7fe770174f26 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=488 request_id=e97f8d89aa682682bbeaafeeb6159ab0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=b2f7cd34618c4f5938b4a8d20a896bad response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=417 request_id=d5afac5ace229883bd15589a053da779 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=590 request_id=9a6f01ea59b62259c01f6c2f35836176 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1288 request_id=2b0fc3e6985ff1ab57bf0e60c6497ccb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=a1dbc8fa1fd9188220a52790d47786e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=19a70245d1732041fde4e2df0e22c065 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=661 request_id=fb66276610d9a3a2100734392985394a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=9c11a88f9d9117b8fd90108623a7635e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=aa219fb26c8065bb6c8778cbb96f67bc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=927 request_id=d13fbf674afeb9968da5d125e37e1e4d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1495 request_id=a46ef37f45e4a8af7a0acc28d4ee715e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=7b92da8af1a95f5a5a294676b4ade508 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=2a1ffadfe73253da1c0c9f2323379e06 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=591 request_id=5e264eeab6612e644a8acb1003400309 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=366c37a2019eb03a777b9f4a9729f4ab response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=d2d2b3455fcf8401db92fc124a2e1e1b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=4ab69ec57f037c8c6dc0ba8823ddac1e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=375d4f49478682e3d10d4425c0bbdd65 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=9c3ce48579d0c6992a9ce79be06c8215 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=369 request_id=22f7b0c99316643f2c1afed9befcbdd2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=667 request_id=5c887c1b9eb3c3a6c2208b2bc67acef4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=4029b6e0ad87f41edd4166656a6f05a1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=ba6e704a3ecde2f3f8efb3d77c16c33d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=300 request_id=beff8c2a8f9cfb93c15cf2487a0f8f4d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1028 request_id=b4561bd3f55bb589b1e911df4e943eae response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=70e99097a2f0fec16e014a0b5ef6dd57 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=fa0f2e0c4c551b14a7859f7078ae246d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=39bb79216254d43864ee68cf837c3097 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=ac3d23a8d5bfd4d6f4832e2d74370b58 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=457 request_id=e8975b625a2eea981dd8887c952ce08a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=429 request_id=708670248189c235b3b7f7addd608905 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1064 request_id=7e1659d2d69a182e3b88346c81504693 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=508 request_id=6a10f7a582de6ba57380a2684fab665b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=bcfaefb956e96eb8b889886ab8d1f991 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=390 request_id=9fba8b800128708a28706c48716ff018 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=e01068ef81c8f0b6d19ba116b7ef5328 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ni want you to go into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=8f20307d0c56124ba4bf72564e95cf0c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=1b06ec24cca5345f23240e433265aed1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=792cdbf65a37f8e35fc0383868b7f21f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=277 request_id=2aafea71e473550f5a47211af4274b4b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=250 request_id=3d80a49824fedbc4435ee7ff3982c369 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=576 request_id=3f3f637a4d35aed662249c0f230ecd4b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=98dcaae532ea3ebecc4d5c2e83d4a60d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=438 request_id=c7f701701574a57c1adfec0c4ed05c1d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=30acb58aada4a3db019c44b3c2548f55 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=9c2dc828c95efd09b4afc84e7991b2f6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=597 request_id=666293f7be56340e83b8f88e3fa3c2e1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=401 request_id=e8185ea1c52477a3a004a8994c88f25b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=328 request_id=aca253e16d17d75593b0163304910c0a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=936 request_id=99d80c622f261644233d67ac2d6e71c9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=4b7ea17e72353668ea1964e38a48f848 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=d790c88e96bfa33f9ff8e8687298a641 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=5a018860c8e11b26d41d10f7262b6a2b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=bb56eec345a40fe8c3244e005e16b5e4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=bccab2717c2d49c2cd25835550cf5031 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=326 request_id=637a32ba434ae7ea6a5a0ca8171bc3d8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=af738096a1130e1e699924118effed9b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=547 request_id=27f94bd3a5b7351cc270b84383126e10 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=f7a455e078ea7c1c491b49de16119f6f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=a0b8cc92acdf09fdf94a87e1f189ee67 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=f8236157bbb27c4b6bbc72fe9171deee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=457 request_id=f24acab4d6f3111a7c2a82669bb28a26 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=926a254be3c6b107c1e6cc51343e15a7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=ae29a1f2b9a9ed99adec15b1f5b67a48 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=a47c8efbd8e2e4f7e1a64e47138c86c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=d77a0a5821735aca36a631fce8188c8a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1239 request_id=ae1726f8358408dfd8e78161485012e6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1074 request_id=730b5c83c713301de5938142cf0a1737 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=4c2f83b1cc815c049523538535a6ac0b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=77b583ce314f23c6a4ffdae1fffd274b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=695 request_id=ead6cd37cee91e847b393e2b94e20060 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=c78e17cf5a051ceac1a5ee6a4240fe11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=cbf572d99f156964649af09838034d1d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=448 request_id=dab5c99be958ea7f32530134aacb3302 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=79ab646713423f2f0e58f5935f97f82f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=447 request_id=4f1ef40720d4a4854a87311e0c1d2d17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=607 request_id=bfdd4880d8d1e16caffe59885791a96e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=dc4ec59b34999bc4e6322aca36f3f89c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=3fa02c18ce718aafe9a014a8bc8209b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1150 request_id=08d4f3068de5f0fcdb29610a936d61b8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=1314c36c7ab2f5bb870f5e41ae9e5cb2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=c4a03a65f855836668550999337d16a8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=1dfc31baeb4ca8f56c48c9b67e6c8b22 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=3407d8cf911923664c733e99b462a955 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=d6b650ce963a278a4db6658e09ed7f7f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=905 request_id=41c1533362a2236c668b820379c7566d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=5c11cb1fb6eae170dc0ea8c75a991ef4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=a7d56b0c3483e9108a9ea13f18852ec0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=19f1d0b959c503d9bfa7016c461f1d73 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=a9d3efe8a5cf62553de0bd8cf7a3b11c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=0be7761cc5b276704ee48c7141d8691f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=2e1f656c1e87c71a1a9511c4b351ea91 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=84a42c5e9d7b0d7fe7742ed5098063c4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=350 request_id=6fb3fde61dfb4d3260dbbbe35cec8a1e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo only through rooms that are not A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=8e7fb508d271dda91bceb6ce551917e7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmake your way to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=5dd228076a39b403391f5b1997e58a3f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nproceed to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=17cb2eca7a33d90fcd3970e54aca43e2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through the room that is not A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=384 request_id=b3ece4edc904cb111f180e8683e2942b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=cae656875a8fff29b6d409ea81470cef response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not go through A while going to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=508 request_id=e490f43916303cc496ba34e7d69f0b36 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into B without crossing A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=bc1aa1050fca83a965ab5f67fa569ec5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B but do not go through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=368 request_id=49588a53e602e3dbfaceb056fea3fe2d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot is to move towards B without entering a A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=5b7eefe01b97fd24acca42b91b876445 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B without entering a A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=653 request_id=7a9717e0b30ae1e2ada6dd97b5b78604 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot avoids A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=ab124ca767f259ff586303fb3e8c7db7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A on way to B each time\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=88ea8129f6cdc363f668ecc22713d281 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwhile avoiding A navigate to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=8cdcb46c8b8827cfa5156df396f4725a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B without using A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=750 request_id=da2343cbaddf1b4878587e9ec115ae3a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B without entering A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=887 request_id=d80ba3780b75b476bc171b8c3bcbfbe0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not enter A first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=fba2b6aa6a20c6c5ea654eb2a5cbc15d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B via A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=d836bc3e62621297e39bed3351fc1df3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to room not using A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=92868205ca8457de7cda4d87668390ab response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B by avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=567 request_id=040e379165d55e703a11bde88f6343fa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=52d0173df8292ae8de956b8bd717a86d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room that is not A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=05885314e5b7105162afb1b159c984b7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=03623be77201e1240973bacdbd17a726 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=663 request_id=5112c154870743c95bcf22ca6c187927 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=7fc9f02680ed186479bbeb9a664792d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A and end at B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=cdff796b22f80f8bfb27cfb0e93c696a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter the room that is not A and then proceed to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1012 request_id=769116dc6aa3adb1165cdb338571b918 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to the room that is not A and then move into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=8a395b739dcd9dcc624639f0ebc79571 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter the room through A drive through the room and exit the other door to B room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=b9598ef7b3a9370c01c61bc7be7e16d8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nto reach B do not go through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=248 request_id=70138ea76eea2a14012dd213d97c8a7d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel to B but do not go through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=410 request_id=c22b79c215b8553f449d52decc177f01 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=518 request_id=0a24f9d0b6322a28a6bcce9c99acb5b7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=981 request_id=d14e0999ca87086a4f987a5fd70bba14 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=374 request_id=2e8c585dc016ba62a3a0fd3fa598854b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not enter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=508 request_id=4893847a671b46276cb88ea3e9cc6b1f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid using A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2645 request_id=14a21b8c2d7838bdf69bb73547ec1e93 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=656 request_id=ed45a95ddee6553294cb721878b50062 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into B while totally avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=547 request_id=341aab049c576ec15c7e8d133cf31df2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=618 request_id=67307001ff4b634da192fea14337ef77 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=8c2e595f4e6edd5587390a10fc7a7ba1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not enter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=bb15e8f12aa85d112a8ad6ec4da4468a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A on your way into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=8516b2bcc3e92f18b7211e26ad4524f2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nget to B but do not go through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=6660bff3e31d4f60848d112c73c99bab response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B without entering a A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=32cf422ab35b869cb39d53c8eac145ac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not go through A while going to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=10ce2df6b74be2cc7c4c9c99ba55c3fd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid going through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=635 request_id=596b354187cc1e737499d5508f1d4818 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or C to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=e6e65429ff517fc186fd24d59d2e00bf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo C or A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=540ca23bef16a57b3e8d1ce4200e660f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove the robot from C to A or C to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=ee838b4c753ae37f5670e7ccdde70ef8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C or A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=e5c358ae38f020663a8d52d95bbacf02 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C into B but only if you go through A or C first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=352 request_id=2a796d4133cb59cc93ef63c4b1d49a33 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B by going through C or A only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=a1e9cc759a2ebb303fe02969f0a72d80 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A or C and then continue to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=816 request_id=691e7a121e7fc2351a475b351e1d7248 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C or A and go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=85b0aa21d90faa576a43c510b40187ce response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=8ad3b7ec2478940ca50ba27b236cde3f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or C and enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=1d545054cde597f32bba3a175c336d72 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A or C to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=381 request_id=469831ceccdcef0d93063f640f4efdce response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass thru either C or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=901 request_id=15377ffe53e95d765a16bf0c57801510 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=4dd0cf9c019955a440bc6e89629dafa4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B by using red or As first\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=511 request_id=1d2793cf04805c3cfa9644e79d7f0740 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or C to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=263 request_id=fde60df2b5ce3daa63a4898ba9053e91 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot has to go through A or C to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=d42b92f9377339890a564a295c76c19d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through C or A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=5ba36af193429a246417040ceaa20519 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B or C into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=9270cb972214f0570c9a7d26b917ab32 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo from A to B then go from B to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=936 request_id=1b5c3ee328c77fe3bc1a645594a53c39 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=990 request_id=038f13dac546f4f59580c6b41c93b487 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A and then go into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=73ce72e0e0b2986b06fb052613c8e09c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1732 request_id=9c2e547d13e72e29e1fec1508514be5f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=343 request_id=eb0f483f12bd4c148340f9372e87ff0f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=340 request_id=298ec3d3bf53f4849874d064cbcd9685 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=a473cc6dc65eb98bd41cc2cfb90a62c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A then enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=640 request_id=60523988b1220e0798689dd3a89ac97f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=89a9209b5ddd5168d5672433718369f9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=8e035e51803e2368e1c33236f9348ca6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfirst go to A then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=89171bda4a801539ce3eac0622542e32 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo from A to B and then go from B to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=6b6c196795045dbf0f58c642c6a1dd61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A and enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=c09709616f50868fd98f40036ace58db response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=a4e0e84e0b93b2b471b20eb8211b4352 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=fe86bfe563d89e5054fb0b858c9b40e9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=355 request_id=2cb22121ca5cd34937f48b4c92cb2c54 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A then move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=62e5bbff1247f7b0867befb80515796b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=260834da21f6778a4a135c2a77a76d02 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=6a3e42520d8ab220456b0b753ef8625d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=945 request_id=a22a339ad93836132c363d304d5a64bc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A and move into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=647 request_id=ed22d80769dfad70c18320ae4dd1282b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A then go into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=e0b5fc6a05d7767a0515228cac0ad405 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=730 request_id=210959cb38a100ae86ff53ee4f29e8e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A then to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=eb22df6ad3407cb39587b290775b7a12 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=514 request_id=dbbc1362bb714fbb7980c5b00d48c128 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nrobot c move to A and then move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=955570a621f2f3921bb45778ee7721a3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove from A to B then move to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=531 request_id=75b74388378375b461c021fe2fc84e38 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A then move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=84bf1ee69d6f6fe8f3986fdb74f25287 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove into A then move into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=bdbb3be689d7f4af560f24434294f539 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=6afae473f06a0f09a41991fe2c23ef83 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=1a4659243aa4909b72a7b7c9559538f6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=500 request_id=27c27d4e5977cccd8cff7340932d09c0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A then move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=ed203368e5888155c115709567afa452 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A and then into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=71c07552917d99f86237c4223f3317c1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A and then move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=431 request_id=7ce247a22321717203d5ac3784cffcc0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=d3855cb777103a4b85dea55acc072112 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=8534bbe406d4d628d6e01ecd57a878fa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=23f5da482f375d30c90be006480a489d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=7702d6f1e462d00c714ed2002fea0b03 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A and then move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=fc986f2f65c6deb10584975fd1028457 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=8411800c903e30c2adfc09a0b9e3cdde response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=0fa6bcd1032706bc6ed927d36d0f5f11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=de7797623c1e3b453ee1537e4b6760c8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=12620db2b6200847cf0ba535470bfe29 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=892 request_id=aa43650eef803ad8b28dba546b30de02 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=b3afa36f2c3deb4ef2a9da9456b3fcfa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=0e24b64a2d1c7a2e066b7aa1424da087 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo in and then go into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=350 request_id=dc2ad4bee1795d9d5cd4b3ae97ec4ee2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=679 request_id=0318afaab6cc0b896712ff71440aa393 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo in and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=adde6def2c0ee196541613bccbeff987 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=495 request_id=8ac067db54fa3b84998af6d93d78cf55 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=644d2b5cc487a351e06cd4506ce91686 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=e1317293e509ae5c09ca20a5f81279bf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=74302b19678f68ab2bb17b1949fc6069 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=421 request_id=7da01ee8d83a442cd3ae7b3ae3f97f54 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=643 request_id=eb8f5aa08e9119567e5380aafacb6973 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=445 request_id=dd5572e22b3851213edeef4204f02e36 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to the middle of A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=dfe055ff319fbed3625008af130431a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=d54c2e45de2691e71fd3023f7fb38701 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=316 request_id=dcdcc1666b0007bcd0e3946fcdfbcae9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=767ac20b941c2ffcbe0cc6c95bef6de7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=3135c45c9e67d14437f6558c592fa95c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=3e4f807b2ce9beac05f141bc0b830c6b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove until you are one square into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 269
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=633 request_id=f8f583221399164c4bacb37a246620c4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=81ea7a770f12f34d84f6127a2da59c76 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=338 request_id=2b170cdcfc9ec4b7ca0d389ae40244b2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=375 request_id=7b06a94a66254302aefe623015a41ac6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nleave A and go into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=90accf23135a537604e94ee83b0c122a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=314 request_id=c7a2e5a9992e3990a22ff977394effe1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=f588b3334795ee9847831f7a54806926 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=277 request_id=36493a55950e5253270dfa6551d6fadb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=565 request_id=670c92b5d85b531c42cc88ffd9bdb28e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=584 request_id=c1c461887ce7c8a5186bc9421e48f651 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=9687f662d6e54d723158a160aaf63d76 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=a12060eadddab60575fc7fb08f817f06 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=cbfd18890526b0f80bfaffc4c6938ab3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nA and go right to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=ae9ea414f06791ce982d40248f9a0117 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=50597abe8f2098261a25c722aec545b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=8014e0ff86a4f1e975127563492dfaa0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=445 request_id=bbf11cc1fdf14aa3ed2435fe61b71b69 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=573 request_id=e1bac4f5316021c97f7ed25530d761b2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=615f01c86c9e4325e9cef01fd1417658 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=417 request_id=15615fe618c106c27fc1bf5e61e7446d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo from A to B then to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=ff28884fd16d9ecd0285aca895130399 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=448 request_id=9ba35a79f9e307c15f7667b9b4860988 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=c7712909d522620768dd43834ef98565 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=6ed99017c7bff53d145da4f76ffa322a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A or B them move to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=9c1cccd817b718de52301e98b8aab031 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot has to go through the red or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=13ef0f257f01771e3709e12259ac5d84 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B and enter C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=5873ad5e401d5ef5823abe5f1e00249a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B into C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=275 request_id=beb11efba7113dbf8bf6a49d5bb02af8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo thru A or B to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=286 request_id=f45b4427ad0933fd17200eae6a177baf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through either B or A to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=268 request_id=ee18a8a40dfdd0e44fd21c2b37a66ff0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nget to C through B or A only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=96c58015f89c50f8e32d32afcd36cc37 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove the robot through A or B and then to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=556 request_id=d62333365f187361188ec9496f69314f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to C\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=1d8f6f88db30ac14b776d63bc4331242 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A or B and proceed to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2102 request_id=841c2c7790f11c85dba418fe932c2fcc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to C by going through A or B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=336 request_id=a0b4e4206eab68de0d847aa3dbcd91c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A or B to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=531 request_id=7b156737ecbcd261da2ef126399289dc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=644 request_id=65a280d070cee8ddc2508418e1c56dac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to reach C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=8de670de0dbbcecdaa8d3e730d5f6a4c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nonly go through B or A to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=454 request_id=a55a6d4babac2b793a041bb09d1bd774 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=a543a8fbe412cd73bc4f90ca957541f8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to reach C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=e39bd5875a4b4b0fcc2f53f5a4f5aa9e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B or A to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=f415cb8cc900f1b746d00cebd6819757 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A or C to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=77c8d2a0986281fdb5cc684b6b2492e5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo C or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=747 request_id=3fa102516eda26f09d77295d1415c219 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo C to B or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=458 request_id=9f49d0f8a6549157fdfd6232f5248a3c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through C or A and enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=375 request_id=057b863001bf85075bec1668090fa7c9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or C to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=c22aec6bb948809bfbcde3306fab8cce response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=28b430c4175e33dc607e82766019aefb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to green or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=e3129abf4252322df3b0b21e9b63724c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or C to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=457 request_id=4cb4781a27eb50ab8f59553985c591b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through C or A and enter into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=804872dea7c7948ac13368b82ccb80e0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove through A or C to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=371 request_id=a5cd6fda7a0d4bd62c87a0cf05309368 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through C or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=95a971b979fb7dbc9263185853f377bb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nup through C or A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=502 request_id=cc2df077e3f552ffc223e723048ea737 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through C or A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=745 request_id=c5321be7e3eecb33f6b9abb4835a691f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove toward either A or C then into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=567 request_id=8958f4764de37f6145c7011677e3b7ad response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through either A or C to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=455 request_id=27b04d9324377a21f7026e00dec33970 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the green or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=60a339b263a8b4a6b866fc0f96a69f03 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove the robot to A or C and then to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=366 request_id=187233a3059a4e6645d8e7b3587edeb7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or C to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=4db529687c48c9d4b7e3873894857f77 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntook A to B and C to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=794 request_id=4b43f89963518fcb637c6def92163c9f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwhile avoiding B follow the shortest path to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=484 request_id=69ecd25239f2a8c11a614aa77aff918c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not pass through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=a8beb37394dd3c75785cba91f0a62d04 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nhead to A without passing through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1310 request_id=f538142b30ce21aa9a4932b734c65760 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into A without going through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=845 request_id=669fece823a1c54e286ba79d956b6e32 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A but do not go through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=289 request_id=c10c56e362dd6c2806039190845f0805 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not use B to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=ee99efdaa68a0c6ac2bb423a44d09ae4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without crossing B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=444 request_id=08b07faf708a491a3c4254b12f7fc762 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid B and move to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=332 request_id=0c634b8d2aad35c5a6e8d1a5271319a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through room that is not B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=557 request_id=1a9863d5bc4ebde7859ba9676ded8474 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but not through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=0e69fffea887781753c54b34515a0060 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntake a path to reach A by not taking B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=9039ab44c24b8108e63593fd1fcd8b6d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the opposite of B to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=8ac1c5e32548c2ca9595b473a3c4741e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but not through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=594 request_id=08c3609928f5905b784c0aca76edbc4f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not use B to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=7d711b6efd4fc7475a500dbcb5c46a9e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A without going through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=5fe47b196854ef86e8fdef98811d1f4b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot avoids B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=4af51b39a5d429ae7f4f3dfa4082750e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngot to A without going through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=f5f9559ca8905c14bf824f4d73577e69 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=297 request_id=8d29db13753903bac9e9a06dd88f1786 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1098 request_id=2aa7e6012d9ca5a880a3f81da4571570 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not go through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=5cc31d604f445e47ce6e02e5db7ae24a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without going through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=f86a9c9276d56d417371548e79bc5e09 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=43bc5fcbdb93c27e167609a0d04dd91a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not go through B towards A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=e53102b7856346a97cb55f57da7f83b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoiding B travel to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=725182964f17e99dd74ad87887f44e07 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=3c6be25e09c4cd0d29f3234cf8897d3a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not pass through B on your way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=8aa963f21df7fb6b1473b9d6bb5472e1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nnever follow B to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=9f2b08968059f470d75e6ae1fe578c20 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A by avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=732c6254de84810b8b2f8746a6a40493 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A not using B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1099 request_id=868d5fd6a4ebf25be117f9e2d8eb1aca response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without entering a B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=366 request_id=889e5a7b5b9bc80f4c2f7b5b415697a1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo only through rooms that are not B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=adc78b3b534186ae0517f305709fa7c4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot avoids B in going towards A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=13e1375444f07ebaf236bb8ecb494a01 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=d6bfe231b77b806d4d61d8752356572b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwithout stepping on B move into A then stop once you enter it\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=9e2c155d0c0e27b1194ea1d50757f868 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=b97f85d210750761ea5f9ab60634b78d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not use B to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=294 request_id=850af7006e022fa5d382a4d0b0b26bfe response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A and enter the A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=3a965666bd94dc3e5925f9c221bb7afa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A via B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=892ce8006da7150d76a7f54c04e72146 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without entering B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=ef21cfcdc1b05c647c3cb36dfd027506 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=532 request_id=79d8c243f469ca7d220812b730be3136 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=448 request_id=ee9824ae242a5b637d49791cfad42758 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=495 request_id=a037f217b338487015efd0d9c2d3f4d8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room which is not B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=468 request_id=68ab28d4be0bdfa6d5bc4b979b992a66 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1057 request_id=efb7461040f907d2a76116ec629dfcdf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=325 request_id=713cc09341215e264d73fdfb58b6f2f6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not go through B towards A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=352 request_id=188ca5461d2b84e5e328e127cd028bd3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter the A by A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=19dceb9fb5c46724ce9befc3337ee7e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot avoids B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=99c902969626517b256ca4381d67d7c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A which will lead to the A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=f5fe8fe7b641c4b038934f633b0e39d0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A while not passing through B on the way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=743 request_id=2298ce209ea21b591a31ef3203635e43 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo only through rooms that are not B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=fa771b5511aa790e68dacd496130a9a3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but not through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=428 request_id=3336f2bf7c1193b9f7ef54a86c41a21c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B via D or A but not C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=787 request_id=f5cedd802f43ada65be3b90ad4317a5c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nto reach A do not go through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=f7c3817f90e3b850d2a1f208d31f11e9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid B while going to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=d8bf1081fbf412ca2752c50b42a96047 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A by avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=575 request_id=b8d09e3de9741f84c8dae6ee6c0c1501 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo towards A and avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=829 request_id=f295f3e61ba2011a10b47846c7c40d61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A without entering a B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1176 request_id=b433ba548dc405f84a3952033cc554fe response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid B and end at A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=936 request_id=0d6fdc80b0177bc54cbe656482427779 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through square that is not B to get A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=867 request_id=330de20df33fda3e1719d7a45a112f50 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but not through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=370 request_id=f84426c3e50f7443128f852b1b790b4d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room that is not B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=b3c6250b18d582f83bc04f954f828aca response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=8724849441f95489e487bf7ba7e2bb53 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A without going to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=efb4e8b9b79cd6b46addc5644a762037 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without crossing B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2706 request_id=191b917f1ecfe578a0ab7c0074c52a2c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without entering B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=045b99fdffe63ad4acf7b7b7bc7fd43d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=571 request_id=404c1406d6fec1ad6011207f24d5eeda response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwalk to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=941 request_id=8c0d709ad5d60418e570cf2b7e137a83 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwalk through any room except B to enter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1297 request_id=5459328012a89f51ebb3bf23475e8542 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A without going to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=a7e35e15e3e921dd1e19651f9120d5e4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but avoid using B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=639 request_id=f0832bbbe7cbe41b7b1138820c0255f3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not take B to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=ed90bc365652b3ca4dc15d431851a8a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=d23dc30944cc6e9a36fa74fe3f1c39b2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nreach A without going through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=411 request_id=993626b2f9c4a5f9d0422fe800f3ebd4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A by avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=85e3c687f76e9ab6648af6c99523c44b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nget to A by avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=b5ace09107214c218b84e57181ad3916 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A and proceed through to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=370 request_id=b41a682fa4f18eb71059d863c16d43bf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nonly go through rooms that are not B to get to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=b206a2da3a3e6f9bb2aadf8ce2c669e5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room that is not B and enter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=8abdc77a1776823f44281f7c53f9daf5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndrive through A and enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=561 request_id=0fd7ad573e2a2849e1f2f20191312e89 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through any room that is not B to reach A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=547 request_id=ce5eaee938bef810c51358bfaeba9f57 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not go through B towards A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=d9f7f1541849c5572c532aa1c3082579 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid B go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=344 request_id=9e15e7bad610579cf6f00a8d4449a0cb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngoing through C or A straight to B avoiding D\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1018 request_id=d34fd0a808cd63bfb4be61bda9db64b7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=b173e88240115735c6b59c9972ee15f6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A by avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=b3dae8fc122e24fd95581baa3784c6ff response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter into A and continue through that room into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=336 request_id=6d75d594e54b7be59b8d320f1aae5a11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A without entering a B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=c4a54197be92db5287498de38bdc46b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but do not go through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=71f9feb9ff9dc78bb20fd85ac9390653 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A but not through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=77618ed1447a9ba6516aa1f0314ebe9d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room that is not B to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=0090c75205929608be46e6bf9db78c8f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoiding B navigate to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=366 request_id=a3c8c9b66280cf2517a9221f52ef7417 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nget to A by avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=35e507d45ec5a9d75ed443ac443de864 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=454 request_id=f8055207943efa08e5e97904ee1ab183 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=d5ab75fd94bc1657a5f6da3444f6b9f5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A without entering B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=343 request_id=31378056e12abd922dd6ad6d9ff20da7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel to B through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1635 request_id=0ab513c93ba086bdff3c895226794b8b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo towards A and avoid B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=24860373e61938b2afe6408c0d7b8538 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A without passing through B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=4b71613cebe689bc219485111eaf9a51 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A without using B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=524 request_id=9be2465bf3718d4e42c155de6cc58554 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not enter A through C but by B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=408 request_id=20abe10d29d886dd93456046ace4ab4a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and do not use B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=500 request_id=5ac6099fd4475eb79c5f196245725b72 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=343 request_id=61fd4d9b8d33e4efcffbd6315c2764df response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nentering any room that is not B will lead you to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1236 request_id=e500622170cec46a546f4c16c1c19abd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to A while avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=94db0b694be58358f1ae75501f894026 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=546f493efe6dc462e3dc0cb722e2a883 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B without going through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=ca912ee1a757523b3f5d5706b4aa6097 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B without passing A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=206e04ffbe469199f6819cf1df8f6121 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A and move to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=2b81abfe7aff734804d9c18afabee48b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=286 request_id=2131b1f7914bc8a872f857e857360d55 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through the non A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=a7651388a6e4b26c0cff288819cd531d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A when proceeding to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=5005db2ece97a659c0aa713efd373af0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but avoid using A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=898 request_id=800ba091cbbe899ca3ea430a00bfac3b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not go through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=313 request_id=beaed0fb4aba3618292a9dda1fbadc25 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter the room that is not A then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=40de80e05b7b75c4b9d70b8f5675409a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room that is not A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=407 request_id=27662f0f306a228a70d85cf4d2494c4c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B without entering a A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=958 request_id=105669508c30f123ff9dce143d6982db response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to C or A and head straight away to D avoiding B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=745 request_id=a3d9718df55d70aa2489770186a28765 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but not through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=683 request_id=e71a1d88b20d889dcf04a7a54509cacd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=325 request_id=b2a3966a885bbbb987984a4730871ff6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not go through A towards B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=51d15415da8b83921d3a73813562dd03 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=6bc32e68c332fdc578afa1216e52fe94 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A on the way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=517 request_id=70a96ec32d65ca073bd477962dcc20c1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not take A to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=360 request_id=a2c5fc410e28647d15f398f33626ca5d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoiding A navigate to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=523 request_id=36ea138b3882a8774629b92ddbd608d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nonly go through rooms that are not A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=427 request_id=eca85bf1d5945f261b80f8029da6847e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nwalk through any room except A to enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=4ba314370bcd883767b766d7b86b73d1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=513 request_id=a8eeb388fafa6877c32e757086741ace response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndrive through the room that is not A and enter B on the other side\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=c86507b09f4eb1dfd112a96cbdf32495 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room which is not A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1222 request_id=95c87192b86495a23bf88f475ca2115d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nget to B by avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=607 request_id=5a6e0e06309a28b09c9201f1ccaff4d4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B by avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=685 request_id=3ee106cc3da933402c7dfbe1ddd4f347 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter the room that is not A and proceed through to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=8da4d191c69c92ffba4d2fd00d02fe48 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into B but avoid A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=388 request_id=c7bd2c31276cc61be4571049620fcfe6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=729fe7272ab41afac348bfb3af45ff6f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B without using A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=8d9a46c973281cb1bd64630fb2de6c61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=8229247effa4530124238d4baca6ade6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=419 request_id=a097e99021474353bf7a837d32be37f2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B without entering a A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=a3a0ccf39cfd88e6ac0c07b2ca7673ad response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel to B without going through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=786 request_id=ee44165c36294f4177fbf5151f3221d3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntravel to B through the room that is not A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=52acbf6dd3b7d5042982f2fbef866f83 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through the room that is not A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=6dff354b63c3128eba94766de4f9208e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter any room that is not A to end up in B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=734 request_id=a8b81397353926dce3c3c814bfb318fc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo into B but do not enter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1767 request_id=7df5edbe7b82beb75d1c8b8fe35d4b42 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B without passing through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=534eda920e951ab5eb9df99756ee3db5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the room that is not A and enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=364 request_id=02324526e340c1814846760b9f7d60b3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A and continue to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=1272cddda0bb11615813668b7fe34908 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=773 request_id=a4ead413d3872a40a5c9cc6a720cfe71 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=0529058c1882a0c454b921b0ca98939c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo towards B while avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=601 request_id=b16e16cc27ab8b6fba0f76811e3dd38c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through A to enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1389 request_id=d1d33829e4967ca38fda925417b93997 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B but do not enter A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=761 request_id=1038df73310bb2e9cdea9f83b6192dc5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B while avoiding A on the way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1036 request_id=b392bebf063a3d32ff633e64486dde28 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B without going through A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=a3ac70480a61e45001a08591911869da response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove to B without entering a A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=455aa28cd748e9214c7873eb4849d0c0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B through the red or A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=15a74cfaa8e472f45337931bcd990efd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B or A then C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=6b24f7a4f9829ed450db3e206f391d50 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\navoid A and enter D through either C or B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=7dd76ae622bfdac4e2cd94117c0c2851 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B or C and head straight away to D avoiding A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=677 request_id=6ce1245fade4ef967f47f8216263a7f9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to C either through B or through A only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=754 request_id=d40ec4ce1459599643882e82eca4c423 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through either a red or A to enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=329 request_id=00ec883c49a9531518ed4470c95456a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1541 request_id=23fea5ef209f1e2ad83d730b6858089d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo thru A or B to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=ebb1eb4c7c28c7aa201af708833f6b2c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\npass through either A or B to reach C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=f5b4141ad9db7ce27fd91765ec817a88 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove from A into B by way of the blue or red box avoiding the yellow box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=406 request_id=067b1e0a109f8b58bae1c349d68d8d0e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through A or B to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=28c3c706b2d2bdf8eb24f340f7cfbb00 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through B or A to get to C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=872 request_id=a41b87a1c28e33196a2a3d6fb46ba05b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the red or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=cc63e2780a670bc1b6e4c937b9fc3c3a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to D thru B or C but not A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=823 request_id=0ad53ef0c99601a9a5b6bad517edf152 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nthe robot must move through the red or A to get to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=322 request_id=05e25a002ff43a7ac36e4daf1a1d4d79 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the blue or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1538 request_id=19dd9d91f95b1631feae14edc33c97ea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter B through either the red or or As\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=b7466e481889f27a29f707abf547579e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the red or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=844 request_id=3105742f4d74d142bf021b2253e68e12 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the red or A to enter B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=6fed47d28354837dea8b8e2b475c4204 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nenter A or B and proceed until C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=336 request_id=b8cf487a45054f9a57647848437d70f1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nmove toward either B or A then into C\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=501 request_id=64645fe92a19c5ca83404e37beabc1cf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through the red or A to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=366 request_id=b3141b781d84fc407f19fd415cfb19a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo through either the red or A to reach B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=652 request_id=25c1ff7f0a6c389b8ce559eed5936ce2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ntake the red or A into B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=648 request_id=d75584a1142abd7eab0b412cb973837d response_code=200
Name entity C not found in input string: F & | blue_room yellow_room F blue_room
Name entity C not found in input string: & F red_room G ! blue_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F & | blue_room green_room F
Syntax error in output LTL: F & blue_room F & green_room
Syntax error in output LTL: F & blue_room U green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F & | blue_room green_room F
Syntax error in output LTL: G F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F & red_room F blue_room & blue_room F green_room
Syntax error in output LTL: F & red_room F green_room F blue_room
Syntax error in output LTL: F & | blue_room green_room F
Syntax error in output LTL: & F blue_room G (green_room & W) ! red_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & red_room F blue_room & green_room
Syntax error in output LTL: F red_room & X ! F
Syntax error in output LTL: G ! yellow_room F green_room
Syntax error in output LTL: & F red_room F yellow_room | F red_room F blue_room
Syntax error in output LTL: F & (R | yellow_room) F blue_room
Syntax error in output LTL: F & blue_room F red_room F & red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: & F blue_room F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F & blue_room F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F & green_room F
Syntax error in output LTL: F & green_room F
Syntax error in output LTL: F & green_room
Syntax error in output LTL: F & blue_room F red_room F green_room
Syntax error in output LTL: F & yellow_room F blue_room & green_room F blue_room
Syntax error in output LTL: G ! red_room F blue_room
Syntax error in output LTL: F & | green_room yellow_room F blue_room & G ! red_room
Syntax error in output LTL: F & | red_room yellow_room F blue_room G ! green_room
Syntax error in output LTL: F & | blue_room R F green_room
Syntax error in output LTL: & F green_room G ! yellow_room & | blue_room red_room
Syntax error in output LTL: F & | blue_room red_room F green_room G ! yellow_room
Syntax error in output LTL: F & | blue_room R F green_room
Syntax error in output LTL: F & | blue_room red_room F green_room & G ! yellow_room
Syntax error in output LTL: F & | red_room green_room G # blue
Syntax error in output LTL: & F | blue_room green_room G ! R
Syntax error in output LTL: & F | blue_room R F green_room
0
Input utterance: go to the blue room keep going and stop when you reach the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room & G F green_room
False

1
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

2
Input utterance: go through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

3
Input utterance: go over towards the blue room and up through it to the green rectangular room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

4
Input utterance: go through the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

5
Input utterance: go through blue room to green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

6
Input utterance: follow the path through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

7
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

8
Input utterance: go through blue rooms to get to the green one
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

9
Input utterance: take the blue room first which leads to the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

10
Input utterance: only go to the green room by first entering the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

11
Input utterance: go to the green room through the blue one
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

12
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

13
Input utterance: go to the green area through blue area
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

14
Input utterance: go through blue to get to green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

15
Input utterance: go through blue room to get to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

16
Input utterance: go through blue to green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

17
Input utterance: please go to the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

18
Input utterance: travel through the blue square room to the large green rectangular room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

19
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

20
Input utterance: move through a blue room and into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

21
Input utterance: go through blue to reach green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

22
Input utterance: go to the green room through blue
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

23
Input utterance: move through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

24
Input utterance: go into the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

25
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

26
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

27
Input utterance: go into the blue room and then the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

28
Input utterance: go to green rectangle via blue square
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

29
Input utterance: go to the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

30
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

31
Input utterance: go to the blue room then to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

32
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room green_room F
False

33
Input utterance: travel through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

34
Input utterance: go to large green room through blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

35
Input utterance: go to the blue room only and then the green room only
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F & green_room
False

36
Input utterance: navigate through blue to reach green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

37
Input utterance: enter the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

38
Input utterance: make your way to the green room by going through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

39
Input utterance: the robot moves through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

40
Input utterance: enter the blue room and proceed until the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room G F green_room
False

41
Input utterance: go through the blue room towards the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

42
Input utterance: go through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

43
Input utterance: go to the green room by passing through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & green_room F blue_room
False

44
Input utterance: enter the door to the blue room and exit the other door into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

45
Input utterance: travel through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

46
Input utterance: enter green room via blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

47
Input utterance: go through blue room to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

48
Input utterance: go through the blue room until you get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room U green_room
False

49
Input utterance: move through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

50
Input utterance: travel through the blue room to go into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

51
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room green_room F
False

52
Input utterance: always walk through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: G F blue_room F green_room
False

53
Input utterance: the robot moves towards the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

54
Input utterance: go thru the blue box to get to the green box
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

55
Input utterance: move to the blue room and then to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

56
Input utterance: instead of going through the red room move through the blue room to enter the green room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
False

57
Input utterance: go to the blue room then to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

58
Input utterance: go through the blue room in to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

59
Input utterance: go thru the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

60
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

61
Input utterance: go through the blue room to enter the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

62
Input utterance: the robot goes to the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

63
Input utterance: walk pass the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

64
Input utterance: move to the large green room by passing through the small blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

65
Input utterance: enter the blue room and then the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

66
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

67
Input utterance: you must walk through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

68
Input utterance: move through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

69
Input utterance: go to the green room only through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

70
Input utterance: go through the blue room and enter the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

71
Input utterance: walk through the blue room until you reach the green room
True LTL: F & blue_room F green_room
Output LTL: & F blue_room G F green_room
False

72
Input utterance: cross the blue room only to reach the green room
True LTL: F & blue_room F green_room
Output LTL: & F green_room G ! blue_room
False

73
Input utterance: go to blue room then go to green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

74
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

75
Input utterance: go to the blue room then go to the green room
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

76
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

77
Input utterance: go through the door to the blue room and continue into the green room
True LTL: F & blue_room F green_room
Output LTL: F & red_room F blue_room & blue_room F green_room
False

78
Input utterance: first enter the blue room and then proceed to the green room
True LTL: F & blue_room F green_room
Output LTL: & F blue_room G F green_room
False

79
Input utterance: move toward the blue room then into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

80
Input utterance: move into the green room while being sure to pass through only the blue room
True LTL: F & blue_room F green_room
Output LTL: & F blue_room G F green_room
False

81
Input utterance: go to the green room by first entering the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

82
Input utterance: pass through the blue room to reach the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

83
Input utterance: the robot goes through the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

84
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

85
Input utterance: go through the blue room to reach the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

86
Input utterance: go into the green room by way of the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

87
Input utterance: go through the blue room while moving to the green room
True LTL: F & blue_room F green_room
Output LTL: & F blue_room G F green_room
False

88
Input utterance: pass through the small blue room to get to the large green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

89
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

90
Input utterance: move through the green rooms to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

91
Input utterance: go from the pink room to the blue room by going through the green room
True LTL: F & green_room F blue_room
Output LTL: F & red_room F green_room F blue_room
False

92
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

93
Input utterance: pass through the small green room to get to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

94
Input utterance: move to the blue room by going through the green room first
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

95
Input utterance: move into the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

96
Input utterance: travel through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

97
Input utterance: go through the green box to get to the blue area
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

98
Input utterance: go through the green room in to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

99
Input utterance: enter blue room through green room
True LTL: F & green_room F blue_room
Output LTL: F & | blue_room green_room F
False

100
Input utterance: robot goes through green and ends up in blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

101
Input utterance: move into the blue room but only via the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

102
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

103
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

104
Input utterance: enter the blue room through the green door only
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G green_room
False

105
Input utterance: the robot must go into the blue room by going through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

106
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

107
Input utterance: go to the blue area through green area
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

108
Input utterance: go to green room before blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

109
Input utterance: go to the blue room via the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

110
Input utterance: go up through the green box to the blue box
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

111
Input utterance: go to blue room through green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

112
Input utterance: go to the blue room but only go through the green room to get there
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G F green_room
False

113
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

114
Input utterance: only go through green rooms to get to blue rooms
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G green_room
False

115
Input utterance: go via green color path to reach blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

116
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

117
Input utterance: go through the green room and then into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

118
Input utterance: go through green to get to blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

119
Input utterance: go to the green room and then go to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

120
Input utterance: the robot goes through the green to get to blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

121
Input utterance: go to the blue room and make sure to go through the green room
True LTL: F & green_room F blue_room
Output LTL: F & blue_room F green_room
False

122
Input utterance: move through the green room to gain access to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

123
Input utterance: go through the green room to reach the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

124
Input utterance: pass through the small green room to get to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

125
Input utterance: move through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

126
Input utterance: go to green room then to blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

127
Input utterance: go through green rooms to get to the blue one
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

128
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

129
Input utterance: pass through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

130
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

131
Input utterance: move through green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: & F green_room F blue_room
False

132
Input utterance: go through the green room and into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

133
Input utterance: avoiding all but the green rectangle travel to the blue area
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G ! green_room
False

134
Input utterance: move to reach the blue place by taking a path which has green colour and white colour in it while avoiding black yellow and red colour
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G (green_room & W) ! red_room
False

135
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

136
Input utterance: move to blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

137
Input utterance: pass through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

138
Input utterance: go to the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

139
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

140
Input utterance: enter the blue room by going though the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

141
Input utterance: go towards the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

142
Input utterance: go through the green room to reach the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

143
Input utterance: move through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

144
Input utterance: the robot goes through green to get to blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

145
Input utterance: enter the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

146
Input utterance: enter the blue room by way of the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

147
Input utterance: progress through green rectangle room to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

148
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

149
Input utterance: go to the blue room via the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

150
Input utterance: to reach the blue go through the green
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

151
Input utterance: enter the green room and exit into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

152
Input utterance: travel through the green room to the blue rectangular room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

153
Input utterance: go through the green and to the blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

154
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

155
Input utterance: enter blue room via green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

156
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

157
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

158
Input utterance: go up through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

159
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

160
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

161
Input utterance: follow the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

162
Input utterance: go to blue via green
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

163
Input utterance: first enter the green room and then move to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

164
Input utterance: move toward the green room then into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

165
Input utterance: go through the green room in to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

166
Input utterance: move through the green room and into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

167
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

168
Input utterance: go through green to get to blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

169
Input utterance: move through the green room and out into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

170
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

171
Input utterance: move through the hallway to the blue room but only if it takes you through a green room
True LTL: F & green_room F blue_room
Output LTL: F & red_room F blue_room & green_room
False

172
Input utterance: go to the green room then go to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

173
Input utterance: go through the green room and into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

174
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

175
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

176
Input utterance: move through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

177
Input utterance: go through green rooms to get to the blue one
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

178
Input utterance: move to the large blue room by passing through the small green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

179
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

180
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

181
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

182
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

183
Input utterance: move from your room to the red room
True LTL: F red_room
Output LTL: F & blue_room F red_room
False

184
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

185
Input utterance: go in to the red room
True LTL: F red_room
Output LTL: F red_room
True

186
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

187
Input utterance: move into the red room and stay on the first square you end up on
True LTL: F red_room
Output LTL: F red_room & G red_room
False

188
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

189
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

190
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

191
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

192
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

193
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

194
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

195
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

196
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

197
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

198
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

199
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

200
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

201
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

202
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

203
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

204
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

205
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

206
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

207
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

208
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

209
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

210
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

211
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

212
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

213
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

214
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

215
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

216
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

217
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

218
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

219
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

220
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

221
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

222
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

223
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

224
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

225
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

226
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

227
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

228
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

229
Input utterance: move into red room
True LTL: F red_room
Output LTL: F red_room
True

230
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

231
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

232
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

233
Input utterance: move to the red room and stop after entering
True LTL: F red_room
Output LTL: F red_room & X ! F
False

234
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

235
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

236
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

237
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

238
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

239
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

240
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

241
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

242
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

243
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

244
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

245
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

246
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

247
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

248
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

249
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

250
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

251
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

252
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

253
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

254
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

255
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

256
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

257
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

258
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

259
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

260
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

261
Input utterance: enter the red room
True LTL: F red_room
Output LTL: F red_room
True

262
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

263
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

264
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

265
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

266
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

267
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

268
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

269
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

270
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

271
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

272
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

273
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

274
Input utterance: i want you to go into the red room
True LTL: F red_room
Output LTL: F red_room
True

275
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

276
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

277
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

278
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

279
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

280
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

281
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

282
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

283
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

284
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

285
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

286
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

287
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

288
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

289
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

290
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

291
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

292
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

293
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

294
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

295
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

296
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

297
Input utterance: go to the red
True LTL: F red_room
Output LTL: F red_room
True

298
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

299
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

300
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

301
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

302
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

303
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

304
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

305
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

306
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

307
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

308
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

309
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

310
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

311
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

312
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

313
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

314
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

315
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

316
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

317
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

318
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

319
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

320
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

321
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

322
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

323
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

324
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

325
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

326
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

327
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

328
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

329
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

330
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

331
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

332
Input utterance: go only through rooms that are not yellow to get to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

333
Input utterance: make your way to the green room while avoiding the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

334
Input utterance: proceed to green area while avoiding the yellow area
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

335
Input utterance: move through the room that is not yellow into the green room
True LTL: & F green_room G ! yellow_room
Output LTL: F & G ! yellow_room F green_room
False

336
Input utterance: go to green area avoiding yellow area
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

337
Input utterance: do not go through the yellow room while going to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: F & green_room G ! yellow_room
False

338
Input utterance: go into the green room without crossing the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: F & green_room G ! yellow_room
False

339
Input utterance: move to the green room but do not go through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

340
Input utterance: the robot is to move towards the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

341
Input utterance: go to the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

342
Input utterance: the robot avoids yellow to get to the green
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

343
Input utterance: avoid yellow area on way to green area each time
True LTL: & F green_room G ! yellow_room
Output LTL: G ! yellow_room F green_room
False

344
Input utterance: while avoiding yellow navigate to green
True LTL: & F green_room G ! yellow_room
Output LTL: G( !yellow_room U F green_room)
False

345
Input utterance: go to the green room without using the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

346
Input utterance: enter the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

347
Input utterance: go to the green room but do not enter the yellow room first
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

348
Input utterance: enter green room via the non yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: F & blue_room F green_room
False

349
Input utterance: move to room not using yellow into the green room
True LTL: & F green_room G ! yellow_room
Output LTL: F & green_room G ! yellow_room
False

350
Input utterance: go to green area by avoiding yellow area
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

351
Input utterance: avoid yellow find green
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

352
Input utterance: go through the room that is not yellow to get to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

353
Input utterance: go to the green room but avoid the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

354
Input utterance: go to the green room while avoiding the yellow rooms
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

355
Input utterance: move to the large green room while avoiding the small yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

356
Input utterance: avoid the yellow room and end at the green rectangular room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

357
Input utterance: enter the room that is not yellow and then proceed to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

358
Input utterance: move to the room that is not yellow and then move into the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F ! yellow_room G F green_room
False

359
Input utterance: enter the room through the door that is not yellow drive through the room and exit the other door to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F red_room G F green_room
False

360
Input utterance: to reach the green room do not go through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

361
Input utterance: travel to the green room but do not go through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

362
Input utterance: go to the green room but avoid the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

363
Input utterance: go to the green room avoiding the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

364
Input utterance: go to the green room but avoid the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

365
Input utterance: go to green room but do not enter yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

366
Input utterance: go to the green room but avoid using the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

367
Input utterance: travel to the green room through the room that is not yellow
True LTL: & F green_room G ! yellow_room
Output LTL: F & yellow_room F green_room
False

368
Input utterance: go into the green room while totally avoiding the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

369
Input utterance: go to the green room but do not go to yellow
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

370
Input utterance: go to the green room while avoiding the yellow rooms
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

371
Input utterance: go to the green room but do not enter the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

372
Input utterance: avoid the yellow rooms on your way into the green rooms
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

373
Input utterance: get to the green rectangle but do not go through the yellow square
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

374
Input utterance: enter the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

375
Input utterance: do not go through the yellow room while going to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

376
Input utterance: go to the green room but avoid going through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

377
Input utterance: go through the yellow or red room to reach the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

378
Input utterance: go the red or yellow room into the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room blue_room F red_room
False

379
Input utterance: move the robot from the pink room to the yellow or red room to the big blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: & F red_room F yellow_room | F red_room F blue_room
False

380
Input utterance: go through the red or yellow room to reach the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

381
Input utterance: go through the passage into the blue room but only if you go through a yellow or red room first
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room blue_room F red_room
False

382
Input utterance: move to the blue room by going through red or yellow only
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

383
Input utterance: enter the yellow or red room and then continue to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

384
Input utterance: go through the red or yellow room and go to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

385
Input utterance: go through the red or yellow to get to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

386
Input utterance: go through the yellow or red room and enter the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

387
Input utterance: move through the yellow or red room to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

388
Input utterance: pass thru either the red or yellow box to get to the blue box
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

389
Input utterance: go through the red or the yellow room to get to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

390
Input utterance: go to blue room by using red or yellow rooms first
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & (R | yellow_room) F blue_room
False

391
Input utterance: go through the yellow or red room to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

392
Input utterance: the robot has to go through the yellow or red room to get to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

393
Input utterance: go to the blue room through red or yellow
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

394
Input utterance: go through the red or green room into the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room green_room F blue_room
False

395
Input utterance: go from the blue room to the red room then go from the red room to the green room
True LTL: F & red_room F green_room
Output LTL: F & blue_room F red_room F & red_room F green_room
False

396
Input utterance: go to red room and then green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

397
Input utterance: go into the red room and then go into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

398
Input utterance: go to the red room then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

399
Input utterance: go to the red room go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

400
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

401
Input utterance: move to the red room then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

402
Input utterance: enter the red room then enter the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

403
Input utterance: move to the red room move to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

404
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

405
Input utterance: first go to red room then go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

406
Input utterance: go from the blue room to the red room and then go from the red room to the green room
True LTL: F & red_room F green_room
Output LTL: & F blue_room F red_room F green_room
False

407
Input utterance: go into the red room and enter the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

408
Input utterance: move to red room move to green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

409
Input utterance: go to the red room and then the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

410
Input utterance: go to the red room and then go into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

411
Input utterance: move to the red room then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

412
Input utterance: go to the red room then the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

413
Input utterance: go to the red room then the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

414
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

415
Input utterance: move to the red room and move into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

416
Input utterance: go into the red room then go into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

417
Input utterance: move to the red room move to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

418
Input utterance: go to the red room then to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

419
Input utterance: go to the red room and then to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

420
Input utterance: robot c move to the red room and then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

421
Input utterance: move from blue room to red room then move to green room
True LTL: F & red_room F green_room
Output LTL: F & blue_room F red_room F green_room
False

422
Input utterance: move to red room then move to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

423
Input utterance: move into the red room then move into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

424
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

425
Input utterance: go to the red room go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

426
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

427
Input utterance: move to the red room then move to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

428
Input utterance: go into the red room and then into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

429
Input utterance: move to the red room and then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

430
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

431
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

432
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

433
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

434
Input utterance: move to the red room and then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

435
Input utterance: go to the red room go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

436
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

437
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

438
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

439
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

440
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

441
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

442
Input utterance: go in and then go into the green room
True LTL: F green_room
Output LTL: F & green_room F
False

443
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

444
Input utterance: go in and then go to the green room
True LTL: F green_room
Output LTL: F & green_room F
False

445
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

446
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

447
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

448
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

449
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

450
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

451
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

452
Input utterance: move to the middle of the green room
True LTL: F green_room
Output LTL: F green_room
True

453
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

454
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

455
Input utterance: go into the green room
True LTL: F green_room
Output LTL: F green_room
True

456
Input utterance: move to green room
True LTL: F green_room
Output LTL: F green_room
True

457
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

458
Input utterance: move until you are one square into the green room
True LTL: F green_room
Output LTL: F & green_room
False

459
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

460
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

461
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

462
Input utterance: leave this room and go into the green room
True LTL: F green_room
Output LTL: F & red_room X F green_room
False

463
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

464
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

465
Input utterance: move to green room
True LTL: F green_room
Output LTL: F green_room
True

466
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

467
Input utterance: move to green room
True LTL: F green_room
Output LTL: F green_room
True

468
Input utterance: go into the green room
True LTL: F green_room
Output LTL: F green_room
True

469
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

470
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

471
Input utterance: exit room and go right to the green room
True LTL: F green_room
Output LTL: F & red_room F green_room
False

472
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

473
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

474
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

475
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

476
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

477
Input utterance: go into the green room
True LTL: F green_room
Output LTL: F green_room
True

478
Input utterance: go from the blue room to the red room then to the green room
True LTL: F green_room
Output LTL: F & blue_room F red_room F green_room
False

479
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

480
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

481
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

482
Input utterance: move to yellow or red room them move to green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

483
Input utterance: the robot has to go through the red or yellow room to get to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room green_room F C
False

484
Input utterance: go through the yellow or red room and enter the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

485
Input utterance: go through the yellow or red room into the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

486
Input utterance: go thru the yellow or red box to get to the green box
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

487
Input utterance: go through either the red or the yellow room to get to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

488
Input utterance: get to the green room through red or yellow rooms only
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

489
Input utterance: move the robot through the yellow or red small room and then to the large green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

490
Input utterance: go through the yellow or red room to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

491
Input utterance: enter the yellow or red room and proceed to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

492
Input utterance: move to the green room by going through the yellow or red room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

493
Input utterance: move through the yellow or red room to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

494
Input utterance: go through the yellow or red room to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

495
Input utterance: go through the yellow or red room to reach the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

496
Input utterance: only go through the red or yellow to get to the green
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

497
Input utterance: go through yellow or red square to get to green square
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

498
Input utterance: go through the yellow or red room to reach the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

499
Input utterance: go through red or yellow to get to green
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

500
Input utterance: move through the yellow or green room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

501
Input utterance: go green or yellow to blue
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

502
Input utterance: go green to blue or yellow to blue
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | blue_room yellow_room F blue_room
False

503
Input utterance: move through the green or yellow rooms and enter the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

504
Input utterance: go through the yellow or green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

505
Input utterance: go through the green or yellow room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

506
Input utterance: go to green or yellow room to blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room blue_room F green
False

507
Input utterance: go through the yellow or green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

508
Input utterance: pass through the green or yellow room and enter into the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

509
Input utterance: move through the yellow or green room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

510
Input utterance: go through the green or yellow room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

511
Input utterance: up through the green or yellow box to reach the blue box
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

512
Input utterance: go to blue room through green or yellow room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

513
Input utterance: move toward either the yellow or green room then into the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

514
Input utterance: go through either the yellow or the green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

515
Input utterance: go through the green or yellow room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room blue_room F C
False

516
Input utterance: move the robot to the small yellow or green room and then to the large blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

517
Input utterance: go through the yellow or green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

518
Input utterance: took the yellow room to the blue room and the green room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & yellow_room F blue_room & green_room F blue_room
False

519
Input utterance: while avoiding the red room follow the shortest path to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & G ! red_room F blue_room
True

520
Input utterance: go to the blue room but do not pass through the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

521
Input utterance: head to the blue rectangular room without passing through a red square room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

522
Input utterance: go into the blue room without going through the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

523
Input utterance: move to blue room but do not go through the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

524
Input utterance: go to the blue room but do not use the red room to get there
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

525
Input utterance: enter the blue room without crossing the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

526
Input utterance: avoid the red room and move to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

527
Input utterance: go through room that is not red to get to blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

528
Input utterance: go to blue but not through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

529
Input utterance: take a path to reach the blue colour place by not taking the route which is red and black
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

530
Input utterance: go through the opposite of the red room to reach the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & !red_room F blue_room
False

531
Input utterance: go to blue but not through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

532
Input utterance: go to the blue room but do not use the red room to get there
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

533
Input utterance: go to the blue room without going through the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

534
Input utterance: the robot avoids the red to get to the blue
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

535
Input utterance: got to blue room without going through red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

536
Input utterance: go to blue room while avoiding red rooms
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

537
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

538
Input utterance: go to the blue but do not go through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

539
Input utterance: enter the blue room without going through the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

540
Input utterance: go to the blue room while avoiding the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

541
Input utterance: do not go through the red room towards the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

542
Input utterance: avoiding the red rectangle travel to the blue area
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

543
Input utterance: move to the large blue room while avoiding the small red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

544
Input utterance: go to the blue room but do not pass through the red room on your way
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

545
Input utterance: never follow red path to reach blue room
True LTL: & F blue_room G ! red_room
Output LTL: G ! red_room F blue_room
False

546
Input utterance: go to the blue area by avoiding red area
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

547
Input utterance: move to blue room not using red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

548
Input utterance: enter the blue room without entering a red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

549
Input utterance: go only through rooms that are not red to get to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

550
Input utterance: the robot avoids the red room in going towards the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

551
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

552
Input utterance: without stepping on red spaces move into the blue room then stop once you enter it
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

553
Input utterance: move to blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

554
Input utterance: go to the blue room but do not use the red room to get there
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

555
Input utterance: go through the room that is not red and enter the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room F blue_room
False

556
Input utterance: enter blue room via the non red room
True LTL: & F blue_room G ! red_room
Output LTL: F & red_room F blue_room
False

557
Input utterance: enter the blue room without entering a red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

558
Input utterance: move to the large blue room while avoiding the small red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

559
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

560
Input utterance: move to the blue room avoiding the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

561
Input utterance: go through the room which is not red to get to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

562
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

563
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

564
Input utterance: do not go through the red room towards the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

565
Input utterance: enter the blue room by any room that is not red
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room F blue_room
False

566
Input utterance: the robot avoids red to get to blue
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

567
Input utterance: enter the room that is not red which will lead to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room F blue_room
False

568
Input utterance: go to the blue room while not passing through the red room on the way
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

569
Input utterance: go only through rooms that are not red to get to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

570
Input utterance: go to blue but not through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

571
Input utterance: go to blue via green or yellow but not red
True LTL: & F blue_room G ! red_room
Output LTL: F & | green_room yellow_room F blue_room & G ! red_room
False

572
Input utterance: to reach the blue room do not go through the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

573
Input utterance: avoid red rooms while going to the blue one
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

574
Input utterance: go to the blue area by avoiding red area
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

575
Input utterance: go towards the blue room and avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

576
Input utterance: move to the blue room without entering a red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

577
Input utterance: avoid the red room and end at the blue rectangular room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

578
Input utterance: go through square that is not green to get the blue rectangular
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

579
Input utterance: go to blue but not through green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

580
Input utterance: go through the room that is not green to get to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

581
Input utterance: go to the blue room but avoid the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

582
Input utterance: go to blue without going to green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

583
Input utterance: enter the blue room without crossing the green one
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

584
Input utterance: enter the blue room without entering a green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

585
Input utterance: go to blue room avoiding green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

586
Input utterance: walk to the blue room while avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

587
Input utterance: walk through any room except the green room to enter the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

588
Input utterance: go to blue room without going to green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

589
Input utterance: go to the blue room but avoid using the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

590
Input utterance: do not take the green room to reach the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

591
Input utterance: go to the blue room while avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

592
Input utterance: reach blue room without going through green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

593
Input utterance: go to blue area by avoiding green area
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

594
Input utterance: get to the blue room by avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

595
Input utterance: enter the room that is not green and proceed through to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & yellow_room F blue_room
False

596
Input utterance: only go through rooms that are not green to get to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

597
Input utterance: go through the room that is not green and enter the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & ! green_room F blue_room
False

598
Input utterance: drive through the room that is not green and enter the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & yellow_room F blue_room
False

599
Input utterance: pass through any room that is not green to reach the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

600
Input utterance: do not go through the green room towards the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

601
Input utterance: avoid green go to blue
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

602
Input utterance: going through the red room or the yellow room straight to the blue room avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & | red_room yellow_room F blue_room G ! green_room
False

603
Input utterance: move to the blue room avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

604
Input utterance: go to the blue area by avoiding green area
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

605
Input utterance: enter into the room that is not green and continue through that room into the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & yellow_room F blue_room
False

606
Input utterance: move to the blue room without entering a green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

607
Input utterance: go to the blue room but do not go through the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

608
Input utterance: go to blue but not through green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

609
Input utterance: go through the room that is not green to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

610
Input utterance: avoiding green navigate to blue
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

611
Input utterance: get to the blue area by avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

612
Input utterance: go to the blue room through the room that is not green
True LTL: & F blue_room G ! green_room
Output LTL: F & yellow_room F blue_room
False

613
Input utterance: enter the room that isnt green then go to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & red_room F blue_room
False

614
Input utterance: enter the blue room without entering a green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

615
Input utterance: travel to the blue room through the room that is not green
True LTL: & F blue_room G ! green_room
Output LTL: F & yellow_room F blue_room
False

616
Input utterance: go towards the blue room and avoid the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

617
Input utterance: go to the blue room without passing through the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

618
Input utterance: move to the blue room without using the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

619
Input utterance: do not enter the blue room through the green room but by the red room
True LTL: & F blue_room G ! green_room
Output LTL: & F red_room G ! blue_room
False

620
Input utterance: go to the blue room and do not use the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

621
Input utterance: go to the blue room while avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

622
Input utterance: entering any room that is not green will lead you to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

623
Input utterance: move to the large blue room while avoiding the small green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

624
Input utterance: go to the green room but avoid the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

625
Input utterance: go to green without going through blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

626
Input utterance: enter the green room without passing the blue one
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

627
Input utterance: avoid the blue room and move to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

628
Input utterance: avoid the blue room to get to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

629
Input utterance: pass through the non blue room to reach the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

630
Input utterance: avoid the blue room when proceeding to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

631
Input utterance: go to the green room but avoid using the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

632
Input utterance: go to the green room but do not go through the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

633
Input utterance: enter the room that is not blue then go to the green room
True LTL: & F green_room G ! blue_room
Output LTL: F & ! blue_room F green_room
False

634
Input utterance: go through the room that is not blue to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

635
Input utterance: enter the green room without entering a blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

636
Input utterance: go to the red room or the yellow room and head straight away to the green room avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F & | red_room yellow_room F green_room G ! blue_room
False

637
Input utterance: go to green but not through blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

638
Input utterance: go to green room avoiding blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

639
Input utterance: do not go through the blue room towards the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

640
Input utterance: go to green area avoiding blue area
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

641
Input utterance: go to the green room while avoiding the blue room on the way
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

642
Input utterance: go to the green room but do not take the blue room to get there
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

643
Input utterance: avoiding blue navigate to green
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

644
Input utterance: only go through rooms that are not blue to get to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

645
Input utterance: walk through any room except the blue room to enter the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

646
Input utterance: move to the large green room while avoiding the small blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

647
Input utterance: drive through the room that is not blue and enter the green room on the other side
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

648
Input utterance: go through the room which is not blue to get to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

649
Input utterance: get to the green area by avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

650
Input utterance: go to green area by avoiding blue area
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

651
Input utterance: enter the room that is not blue and proceed through to the green room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

652
Input utterance: go into green room but avoid blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

653
Input utterance: go to the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

654
Input utterance: move to the green room without using the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

655
Input utterance: go to the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

656
Input utterance: avoid the blue room to reach the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

657
Input utterance: go to the green room without entering a blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

658
Input utterance: travel to the green room without going through the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

659
Input utterance: travel to the green room through the room that is not blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

660
Input utterance: go to the green room through the room that is not blue
True LTL: & F green_room G ! blue_room
Output LTL: F & ! blue_room F green_room
False

661
Input utterance: enter any room that is not blue to end up in the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

662
Input utterance: go into the green room but do not enter the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

663
Input utterance: go to the green room without passing through the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

664
Input utterance: go through the room that is not blue and enter the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

665
Input utterance: avoid the blue room and continue to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

666
Input utterance: go to the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

667
Input utterance: move to the large green room while avoiding the small blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

668
Input utterance: go towards the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

669
Input utterance: pass through the non blue room to enter the green room
True LTL: & F green_room G ! blue_room
Output LTL: F & red_room F green_room
False

670
Input utterance: go to the green room but do not enter the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

671
Input utterance: go to the green room while avoiding the blue room on the way
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

672
Input utterance: go to green without going through blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

673
Input utterance: move to the green room without entering a blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

674
Input utterance: go to the green room through the red or blue room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room R F green_room
False

675
Input utterance: go to red or blue then green
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

676
Input utterance: avoid the yellow room and enter the green room through either the red or blue room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F green_room G ! yellow_room & | blue_room red_room
False

677
Input utterance: go to the blue room or the red room and head straight away to the green room avoiding the yellow room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room G ! yellow_room
False

678
Input utterance: go to the green room either through the red room or through the blue room only
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room green_room F blue_room
False

679
Input utterance: go through either a red or blue room to enter the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room R F green_room
False

680
Input utterance: go through the blue room or the red room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

681
Input utterance: go thru the blue or red box to get to the green box
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

682
Input utterance: pass through either the blue or red room to reach the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

683
Input utterance: move from the pink box into the green box by way of the blue or red box avoiding the yellow box
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room green_room F C
False

684
Input utterance: go through blue or red to get to green
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

685
Input utterance: go through the red or the blue room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

686
Input utterance: go through the red or blue room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room green_room F C
False

687
Input utterance: go to green rectangle thru blue or red square but not yellow
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room & G ! yellow_room
False

688
Input utterance: the robot must move through the red or blue room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room green_room F C
False

689
Input utterance: go through the blue or red room to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room green_room G # blue
False

690
Input utterance: enter the green room through either the red or or blue rooms
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room green_room F C
False

691
Input utterance: go through the red or blue room to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F | blue_room green_room G ! R
False

692
Input utterance: go through the red or blue room to enter the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F | blue_room R F green_room
False

693
Input utterance: enter the blue or red room and proceed until the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

694
Input utterance: move toward either the red or blue room then into the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

695
Input utterance: go through the red or blue room to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F green_room G ! blue_room
False

696
Input utterance: go through either the red or blue room to reach the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F green_room G ! blue_room
False

697
Input utterance: take the red or blue room into the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F | blue_room green_room G ! red
False

Language to LTL translation accuracy: 0.8166189111747851
