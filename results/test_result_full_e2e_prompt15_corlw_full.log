message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room keep going and stop when you reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1829 request_id=bf63220509c0982fad86db707f31ad40 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room via the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1153 request_id=3db476627bd291872705fd5de8ab34be response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=654 request_id=779c7ca2edd0ac15ea59dbe9a228b381 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo over towards the blue room and up through it to the green rectangular room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=827 request_id=9231b4d85da7829b550a6a88f3b68c91 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue to get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=846 request_id=58b8c0bb4ee3975d6123b0686785db46 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue room to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=daa0094ce8272b6ac4b719557eff988e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfollow the path through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=719 request_id=1a03ffcc5d375fb58d5616a05b57ae3b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=776 request_id=b613df33511518afaaf1f1377756a85f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue rooms to get to the green one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1663 request_id=d3b204871cd010d95f7f8a5a3ab9437b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntake the blue room first which leads to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=929 request_id=220cdb6a8d402242f12810aeb3725575 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nonly go to the green room by first entering the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1377 request_id=4e8e5f81185fdad9c6afe784612730b0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room through the blue one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1081 request_id=2e6f78007c908bcfb2de72b464cf8d39 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=664 request_id=7daadae2fbe27d6274f4d369b02d9284 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green area through blue area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=562 request_id=b6630a1f50eb57548cbf171b42d2cc67 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue to get to green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=8db7da8b72ab558b4a39f67005317e88 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue room to get to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=f292fe184051ba7a4c8eeb27e87e20ef response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=a170a2a5664d18d6a4c5e6afa5bd5767 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nplease go to the green room through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1058 request_id=257f6bacb484a4c5203b364cd5bee1c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel through the blue square room to the large green rectangular room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=558 request_id=2f8587fc1c9ebf367ea502cca363024e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1223 request_id=fa2fa125a45f13b81d876d59b63f8e16 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through a blue room and into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=771 request_id=ccd172dcc872ceb557056216ca93dce2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue to reach green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=f10282afe1d3fec2c500f1d5bd6c7b52 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room through blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=631 request_id=a813ca1bc53e1f77a6df8f9068ced734 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the blue room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=630 request_id=98b8bf1ffce5a62d779c0e3de1690c32 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=9cd93220a2cbe023039e771679a44ce7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=834 request_id=8e2f13b72b21f8fb2d727535cf4b36da response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=c5a39f4ea5bb1fbbff96e8cc863f8753 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the blue room and then the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=4cac2cfcde0e6d8b0dd7f54b18d6729e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green rectangle via blue square\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1221 request_id=1062f7e4b87573f37dc9c384a72f42c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1135 request_id=8070d39db721d500ad014cbf2353ad8d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=999 request_id=6021fafa82bd159457a1d84f9016c7c3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room then to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=732 request_id=c4181c29e5b473d8e5baaaf7401b851b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room via the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=692 request_id=9a2f6302c89aa198fccce7f42a9937a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel through the blue room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1011 request_id=123dcb54e5a750e3a0905c1c72e7dc4a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to large green room through blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=577 request_id=e18fad201682611cd9e05c7b8936f370 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room only and then the green room only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1257 request_id=6fd1c9ab0b4ff70f744819aafe9f9545 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nnavigate through blue to reach green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1310 request_id=a6a533919a3c25661896df19b7f13126 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1410 request_id=0c68cfaf4fd845ad404eb777a1f70907 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmake your way to the green room by going through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=550 request_id=8a294b6edcd5dbb935aa121f4f0674bf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot moves through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=638 request_id=d958d5dc39c9e5c1083886ed390a1c79 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room and proceed until the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1036 request_id=ad531573b1f1302848dcfb0d5bc723b5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room towards the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=2e660b05f2220973bdca782faf91fc6e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=793 request_id=591337a413b2c1f27b6c5e24ceac5163 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room by passing through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=914 request_id=628468afea4342175133aad345554748 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the door to the blue room and exit the other door into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=89630262aa9a141d6d0df6f572df15a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=628 request_id=4dedb7e1abd474606baae437ae890d49 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter green room via blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=531 request_id=86703620f1c135e9c5ea4009814a00aa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue room to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=635 request_id=b731ba9f0b2a1a4fd1fb2709f46fd7b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room until you get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=554 request_id=8e0c899115586d1d86694c4c77dac6aa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1155 request_id=142285734f6397595f096e9907f67af1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel through the blue room to go into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1084 request_id=d36ae8e54b2f08f7a546d2e6a4a8b1e1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room via the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=959 request_id=2c93ce4bd00a4ee375fc3167f2b30393 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nalways walk through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=969 request_id=d2d33735669fadf0c7c1f396d7a2942a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot moves towards the green room through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=653 request_id=72767f010d21ee68241f248e54b7a0b8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo thru the blue box to get to the green box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=758 request_id=5afbdf7ca6f3c3d78881451d7a5b747a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room and then to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=aadc14230de78c131c97d49f63090c31 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ninstead of going through the red room move through the blue room to enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=934 request_id=29c838af89d5a650e93bade990a45501 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room then to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1550 request_id=7052bf8521f8197f92a45258bb1da71b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room in to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=775 request_id=fcb5a0aff017b1d006ba9f497eb477e1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo thru the blue to get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=569 request_id=c404c97bf5ac9fbb4d67162257a2d9e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=868 request_id=4453df7788f28ad693175c1169b4002c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1393 request_id=8d136c0a8c396f01d455de1578b9f35d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot goes to the blue to get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1066 request_id=7a82b4ea2a5a5714f7616d1dbc3fa74a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwalk pass the blue room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=5dd7ff03659db2b1dc2f344d38bc4d4a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large green room by passing through the small blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=b7c624b427d01b2662b53db5b040e605 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room and then the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=698 request_id=b2e24ac63946ed6c09cea50a57e05f98 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1732 request_id=ae00e5f733de8c0f66f404a68a90e65c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nyou must walk through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=841 request_id=35fa1b2d91b3b997d7bae6188d78fbf3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=912 request_id=0fa0c51a1df576ec9bf3ce36605efcc9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room only through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=750 request_id=b92d50fd818aa21b22c7c80deece139d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room and enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=d365ace38a0dd38cc835a392ef67ed17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwalk through the blue room until you reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=881 request_id=99bd044018503144b6ab9339db70bf01 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ncross the blue room only to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1203 request_id=ed8a2fd634627db761ba00e5a6c02632 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room then go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1153 request_id=d0efbc38ea44409a96cc6a5145eb3681 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=765 request_id=f908617538f2c2c5a40d770fae32ca43 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=653 request_id=8fb034663ed180f538c493341e110fe1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room via the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1176 request_id=17917ae98af4bf6ad2f7ae3b5d691fda response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the door to the blue room and continue into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1383 request_id=179e6ad721b7b45665cc39bd64aaa0a4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfirst enter the blue room and then proceed to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=952 request_id=766fda69c0384c35f672ff72a0461936 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove toward the blue room then into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=684 request_id=a3d81d0d071d12087e379bd3b1f501c7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the green room while being sure to pass through only the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=856 request_id=aaf57a7cc5239a4246e3cfb04ec63c76 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room by first entering the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=cb7c3ff2a75c64fdc87959cc5bc14b91 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the blue room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=820 request_id=985dc3f0b21c5cbb55f16291f4e99c80 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot goes through the blue to get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=892 request_id=2dff4a871f3ddb7f4547e549f0d0e489 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=b706b011f9dccfb8e30494c142166f73 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=875 request_id=7e703cd6a1f44f37a305e14ee3a65082 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room by way of the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1736 request_id=5288b49fc94c634c04957fd2e272fdf2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room while moving to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=749 request_id=fa838f1f500ee991edc7a836c54d3513 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the small blue room to get to the large green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1617 request_id=9f8077ed1fba1cc33c91dfdf7ce71a12 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=620 request_id=57a61ed0f8e3c37f36b089a0a751ebf1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green rooms to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=fc1c4e6857fe6c97ab6049be2c8a9f4a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo from the pink room to the blue room by going through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=505 request_id=06ae4675ca5266737b09a719116ee7c8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=882 request_id=5a292bdf19252c5bc72b60fa85847483 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the small green room to get to the large blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=945 request_id=2300011c52257fdb4ed3b673dcc5f81b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room by going through the green room first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=781 request_id=2450989d82a8b8706b15b507a7790d8b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the blue room through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1060 request_id=eda4f7f51ff3ef07772ff362c4a7ad97 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1149 request_id=cffa7115c9656d38d835ca7c92ebdfd9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green box to get to the blue area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=944 request_id=6e766c34f8f66d915c4be0f9e3cec274 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room in to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1012 request_id=11c30412edb3ec6a3dbfe4c1f60082e1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter blue room through green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=801 request_id=423dd781431e41072802cfffc08905d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nrobot goes through green and ends up in blue\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1055 request_id=0f8bd450b600fb42332245223f2fd318 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the blue room but only via the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=967 request_id=a10abf4a22a4990b66624ef9dc1cc381 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1218 request_id=01f421eab46ec29cd5f344db8be58ff1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=904 request_id=5e74e703c0ea6f3b2bd6a9866dad9a14 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room through the green door only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1644 request_id=964a5fa9e7f34f8b571184deb71b2c8b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot must go into the blue room by going through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=776 request_id=b001a34ff99264929bc5c1e76e403225 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1322 request_id=cca38acd115ee3f607fe97b0af4c4d4d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue area through green area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=688 request_id=6ca88ceb94c6c7ea45aa60a819968590 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green room before blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=695 request_id=0dfeba088f6f917dec7b414e710a1197 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room via the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=ef27f2d3f524ebf90d0cd82a6dafec8e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo up through the green box to the blue box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=949 request_id=80b261afbc60e14afd55dca2d5e1cbb5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room through green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=775 request_id=ddceed55b6d8afb0555ecf6934da1341 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but only go through the green room to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1142 request_id=24b3d046194e7762db3187f76202c5de response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=931 request_id=20e71e24b2128a3e048c27875003c553 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nonly go through green rooms to get to blue rooms\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=974 request_id=d82a375feb44d5b3deac2673aa827a17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo via green color path to reach blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=819 request_id=f4c909605fd7562a7ae3aa0e7ded2b89 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=922 request_id=59a2e82384113b7a963381b22aabe157 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room and then into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=4274b83509e2e152a92693c885c5f1af response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through green to get to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=977 request_id=7f1a6048536db1030bd6e671d9c26abb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room and then go to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1026 request_id=5d7b93ace354909a0bd778db5c97bf5c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot goes through the green to get to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1008 request_id=4eb315369232215865adbf69692130f4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room and make sure to go through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1466 request_id=713b36783e1734b21e2c290ead230b38 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green room to gain access to the large blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=810 request_id=f264c6a2a39575e64b54c1c75b298d19 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=672 request_id=959b6b35f35527a6c07875efa17cb382 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the small green room to get to the large blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=766 request_id=596ed1bb9b84c5aeeac4158c9cdb49c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=571 request_id=913dabf7c1cd2c50e22328d42488e6f1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green room then to blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=760 request_id=63816a18a30cffac62bc4c94f46cd68f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through green rooms to get to the blue one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=96998c9c3abb1571a22ff62b57c65195 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=626 request_id=aa73e5a1825196874ff67de544becbb0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=4542d3e76ead41dabd43062f0e9c69d1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=701 request_id=a097c4aae7964136e6bee9c7eb4781f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=d11b81b65a0472cd7a34e829da3dacf8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room and into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=460bb508dd184e6350ab6cfddd657e1d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoiding all but the green rectangle travel to the blue area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=01e162eafb776807841545d5cbeda3dd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to reach the blue place by taking a path which has green colour and white colour in it while avoiding black yellow and red colour\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=bebc6047931f3035bd20054aa0727ca6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=887 request_id=daa4d83cb2d1a15df7aae5c83ebe4f09 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to blue room through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=783 request_id=95fca6a711967a78db06718fa3bea406 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1378 request_id=d79b63fb332caac6f4f47101d496ea0d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1052 request_id=5f631a4464043a02605b33fb944156b4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=fb8b8e9fbb8414792d57ace8cd56d428 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room by going though the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1081 request_id=61b26f2539c37061d4672a6a3bc8adb3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo towards the blue room through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=597 request_id=e546203aac200fd623f7d4e5611bbf1b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=918 request_id=e5a6cb744997c2a190e61cc78ab3e637 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=845 request_id=b766eb1cfa382f6683b9f76b0e2deb2d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot goes through green to get to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1099 request_id=d7269574141744186bb04a70b1b74d61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=913 request_id=5d679e4f25e35d86107bf07118b7343e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room by way of the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=565 request_id=0e0a564d043493f8f8c3ba839bcf3bb5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nprogress through green rectangle room to the large blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=2e9efdcf788f2e392360ea705eeda492 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=4c7041d3bbdbe44e45136ad7a3cfb48d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room via the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=559 request_id=8700e0e3cc44306cd33b0fabae1a35a4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nto reach the blue go through the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=643 request_id=17436d9999d1a1b20e0509837932bd50 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room and exit into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=665 request_id=2456463f2c46afbf87755fadb6d28cea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel through the green room to the blue rectangular room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=563 request_id=e9fb34828fe9ece5b720e88d45ab6a50 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green and to the blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=590 request_id=13c221bf9f115a2be854150c4ca48c42 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=789 request_id=7150ca3c1ac975b8d22e3ef1905b0c99 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter blue room via green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=818 request_id=754e0f2082a975da4424bb58435e3ba9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1073 request_id=50e267b3d46e922a471ce56f664ae8b7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1028 request_id=ac4da65443c7b6f51a33086a0914efb4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo up through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=657 request_id=b6c4ca0e185e421f88538b512efbe416 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=752 request_id=88c70db3be74bae8870bc15dc5f6e4a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1438 request_id=65b8bc43f288c50d46a0f403307b20ed response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfollow the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=810 request_id=d878fe0e088e6361d4d33ef89b16e050 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue via green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=716 request_id=f37eb09739155fe1fe4bacc74fac75c6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfirst enter the green room and then move to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1456 request_id=c8b0e260ad878b4cc963754ad4412ffb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove toward the green room then into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1323 request_id=b79779633c55cc90edb485ca03b2632a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room in to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=960 request_id=cdc83e396a1ba71c285265d0f298b781 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green room and into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=796 request_id=16ff5a6d02d3745c288aaff7fd5d9f69 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=574 request_id=11e19488ab26fbbb42e94e7a5bb0b9bd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through green to get to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=816 request_id=112e973e0a0763f1229d1210b34c03ff response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green room and out into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1367 request_id=8c2b80cedd6d3bcbdc29fef73d69e46a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1033 request_id=d8bb405240ed18170a94e0533de475d7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the hallway to the blue room but only if it takes you through a green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=655 request_id=5cd39340254d35476b19b259c993cf73 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room then go to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=66dd2f6af4ba5b4905e24aee3fbed09e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room and into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=f18af88370f05f0f5191433733a936f1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2140 request_id=fa6535e1efe74bbe677135a52cd2e99f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1000 request_id=d3e89249e2b086b23830b12dca90edcf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2586 request_id=9b95468485436fa45530279c22892bb2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through green rooms to get to the blue one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=1a27759de19350d8223b0d6ce371a571 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large blue room by passing through the small green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=6f1135c58a59b1f916a37c5e835ce34f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=5e11cea4a8825167c056592ae5f6bbb1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=285 request_id=0701c2798010b454622e8ed22d229380 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=943 request_id=a45b4c1f11d4a2f02e53f3fd88dadbea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=68a53493143348e1f6bb58772b9393ac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove from your room to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=02b4845af7bfb2c5316eac511509c113 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=0591e5209227c075b9a59d5d75a944df response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo in to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1167 request_id=6c85dcc821f9b4dbd884c95dae1eda85 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=2b6a6faf82ab42c424fb8b1d0cb609bc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the red room and stay on the first square you end up on\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=501 request_id=61493ee0d59f5c971aeb95583dce3504 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=423 request_id=d67b638b206852c9af250f0330221583 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=445 request_id=bf3b650801754471902fa1f471628237 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=339 request_id=e5083a8a40e3198ad90f0a99b39bc388 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=396 request_id=e96e1148e777ab36c3d61b6ce378db6e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=2608409dfbf818e5247cdbf62fb83aea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=315 request_id=b340d44c5a6e39f0b0c1798dae147e5d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=548 request_id=4b954c27927b359ac5a5d46d15440e36 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1310 request_id=e3157a6667ab0e7a130bcf445a9ae2f1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=ff36427a2bba3d86aebc2639b2fff83b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=434 request_id=057bea9ae115e4b6500a44488110bd26 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=06ad2c7102b52f7d78041f0e6a1c2bba response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=418 request_id=119f59ceb1f5fb7054436dbb7f56d2fa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=423 request_id=ec6b08906dc2038c9b9a0d78ea8bd5de response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=774c38b307438053f89db45227514700 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=653 request_id=2b9d2c267f34ca49a2d96dc95c4f0994 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=3c957068dba3911559dc51a975711095 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1444 request_id=376e980c65f684e2053a1e37b70ecebc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=0a1ca09bb0ae54d7c9822755779f20e6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=471 request_id=5d50fadedf71a78a231bb6f25d6f2dea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=885 request_id=7c0963ae6053fa3a51030ccdec840240 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=527afe4105573f1147e60efc1b7aac50 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=b14915e8c92cee16a09e12cf7ae1bab6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=e5c39e6e76c4cef2e06f3482c590a602 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=053651f08881b82a0146644007806e41 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=964 request_id=793ef15b9b623e8edcf5b292ab80816c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=22b453a093d1283d81d73d8ed3a758d9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=f562985370ab5e26345ff9e9dba73481 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=446 request_id=c3042188cfdd86ef3a908ef124186b25 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=6efac9322b01c0e13e53227ed31642d6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=948 request_id=a24be937ef40caf3908b93c9c0712646 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=667 request_id=99c177f4e13808e677706655a6e02aa3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=a0cb68f5b540deb941d6dcc3aecffc1c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=433 request_id=57f387400d70fcf6f55dc3e201587584 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1018 request_id=9daf046e213aae2c4b876d36e24c8406 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=693 request_id=43c3ae31eca21b8f6a6c7172c67a2071 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=391 request_id=f910855374ecf54f224db438e9d043e5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=569 request_id=aeaace6c7807754e77dc4365bdf2a384 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=3f593b9ea6c5e72ebcbde2b6b3b1ab5b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=511 request_id=6624475644ac8f9a6c9dd48d6e3d16a7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=545 request_id=dd038455844de93771960b808a468632 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=389 request_id=40fe2a9af73c813479d616726399bc6a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=338 request_id=02651f8723e9f6937590ce991aa190c4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=a4669bb794ce6f98fced034ce2b74150 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=412 request_id=872dae2625d50d3f02d8f73da081381d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=e22a44fe69d32cd7c4fdc0622ca92bee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room and stop after entering\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=081e4741e16f7bb572b0b3b94076b439 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=43d122c4c4ed55065cf5a9f866ee90e3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=03921a49516f2bb59137d14ca45f79e9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=a5e35fcf714607f7ac29cbfd9a860535 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=280 request_id=2a3cd008cbf8931e5aef4d40860ef8de response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=279 request_id=22c3b6679f7ec073bd53645a90d7d45c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=280 request_id=6b9483b7e2173051228fc77cb2f64cbf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=a920111aa488fe1485b1607ac6354f61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=dbab36dfa2df681b78a1b52c37f76465 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=b4ef26a3afa714cc2a0c920bbb6c1476 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=603 request_id=98992729c486149696baa4b37d947671 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1467 request_id=90db3ee6c0d1bcdf7e514d5a4c701cc3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=8c9b832acc00dc710e0fa390e895e62d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=407 request_id=95b92d62f275ad4e363fa41bcbd81641 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=454 request_id=d386e48a7b9a6b862e21b2e8c27ad4d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=495 request_id=5575bc89c767829a408ba9c16131c1b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=928 request_id=ddb872fbd580bd25f607892938e35be5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=0221bbafa2a1323fd068dd2a7dc6f10c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=78ae0b183baec35aecbde79074906030 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=5173186fa6f9f2fa842a544c7513d6c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=763 request_id=38250d8a42516e03623cd8b2e346533d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=354 request_id=5e89241718781cdfb30887ad14dd683a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=347 request_id=c9bd31201f6581d8612e4d16be151f6d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1233 request_id=d182b95ac58cc375b151baa2e80534be response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=25ec10fcc7211bb213098be7aa0f040e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=782 request_id=e9debce54bbb229495f1d6709211c916 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=c4c4bb0746ebf306c144d2f615b84f58 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=316 request_id=cf8dc35d33116c74747c6ce63476b012 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=283 request_id=2fe4f41aea2ccdd9a7fa62a11ba35657 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=2d1a9c8d08e1e9741fbd0b1322c39871 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=274 request_id=62dfb843fecea4f5a9ee8b2a5797fa0d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=294 request_id=6a9fbdee9ed26c3da14271929f438625 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1229 request_id=4e84bb3c77f09dd75caaffd22722314d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=548 request_id=6d0193a79d0fa39e6fe65c1103bb52dd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=2ffbe3b7a737021d668bafddbbac2c77 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=285 request_id=792eeb7872da000dd3b54b697119fd97 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=b7a16ff96c778b8d3e2b74aa4e823a55 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=275 request_id=3165389179d41304d8900d10865673a7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=d410da5db6d99d432de1c88c8cd8eae2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=286 request_id=477441d8474cfeea77b8bf3b70723690 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=224dfd7b5108f94833229f7eaf08665b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ni want you to go into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=34fe00d7209903480677d347baea6baa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=660 request_id=084e2d25c11de9955ca328965335cb1d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2282 request_id=35868b60700501c83371df64b7380c5c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=264 request_id=19c94e5fdbdd9717c414ce2da3a25c99 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=256 request_id=63d84e4aa2e372c6efe485f3e630f5e5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=957cf455475f6e5d76caca3ef2977137 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=562 request_id=1c3071664af6a7203b9c64b3cf82acc2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=5e91cd1b09856e21017b4d3b47f6f4dc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=5cfb0931ea41018012ccb6cd2ac4d7d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=353 request_id=5e4d674318d682ff32d197ae8ee26ea8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=f275c9a86a556488ed77ef88f8c6ad5d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=8f0b2cb9cf22c024dac2eb3d0fc1399e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=468 request_id=88b75071e331a73c18c9968c7f91025f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=aac85ad78b363718d5468c86218f9c87 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=412 request_id=60a37c28ad657fd6f0a414e17ba93df2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=6df109873f7f6e2f255e0260873dcfa8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=417 request_id=e232b8b505c87db05001af2e87fda719 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=556 request_id=11081d019eaba5b8d9cfe1c86030cc93 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=684 request_id=01c466419cbc5b4ce349193856314e15 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=51191af9c1e84a0dd5afab1e7f93a0d3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=732 request_id=0528813c3e2f1cb9aebebe23d462e7b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=9db1b87f7e16c14fbe180042b17c15f1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=296 request_id=afbd0e4e4f6f281ac2997800095495d7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=267 request_id=1e81f5db95183ddeb07ffd7fb210caed response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=277 request_id=92d88bc8e69979b0d5b6025309f16482 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=264 request_id=324e690a322b6e0e794a0a4f196363bb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=a846d97d5cb5f704c436db873eefc156 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=300 request_id=2f878f6a1623348dea90a97c3732cab9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=67ec0a4e8f6c6a9be245da98c8e19c28 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=309 request_id=c4df30d77f189f8c8a2a924382450744 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=30e80495bc409fe8a19679219f63313e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=068a070ad52da027fc2144fa2f5c13f6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=34148f2e91f3c56baf84dc5ceb1eaa88 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=367 request_id=21762c5cf6daf43d74019ed480669046 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=2b6dcd5f20951a4210b4f88244af3f5d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=351 request_id=d23f9c93abe85bf86e7f56cf2d27dc54 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=0d1ead5521a8dd67a43f995f88f90722 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=380 request_id=e7f801d08e7b789a1e499678d8cba6db response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=bd0368672fb42b033dfa1f1b18f0b5a1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=446f0b12b1124af70745bef7c951ad3e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=273 request_id=0603454024d8e36ec035cc6d7f45d36e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=273 request_id=d3e25ab94e386bdf26d77d2e7b53a2ce response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=7d46dfa254ab67e48e8dc432665f184f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=2104bc24e37551f0c3d9f3024a7e94c0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=297 request_id=33d61830031770cc68712aff28234d31 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=281 request_id=5e9bd9a7adce861e005a680f68ba1126 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1106 request_id=3b1d25925d4ba4822b4ea945f54f1684 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=5cd50d289a408fb5236a5a0d7c3c8f79 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=284 request_id=58aa805d8623b2b9e329217f15d820d3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=1e872267317644d63568441d5a4d7f93 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=678b72b725866f8526506efd1fcf1231 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=281 request_id=5d49d76d6669a771c47cf7aaba8f5629 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=321 request_id=d056bd173829616851925f63c1bf4977 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=274 request_id=a4d839a8ff58673e697904e8efabb13d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=391 request_id=43cf10457b7b1bcbbe69bc5f55d1dddd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=ed74395b2e7e2b3474fddd3cb2f5a022 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=442 request_id=982c8f613a8e22e7e1168edfcd3b19b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=3171284b723eab6f1f3e00c2413799dd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo only through rooms that are not yellow to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=748 request_id=603f84de7bbcdd7b4653b5c7556c0ce1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmake your way to the green room while avoiding the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=815 request_id=61692b5c15c16da5e59856643893718f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nproceed to green area while avoiding the yellow area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=733 request_id=9431d34c481ae15b886cddcfe79d8354 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the room that is not yellow into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=977 request_id=1509fd67b1a7b0ba1e6d6ae1948229aa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green area avoiding yellow area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1193 request_id=0d55d46acc831e6c51109931222b2051 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not go through the yellow room while going to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=959 request_id=3f3b53db15113a326bf2d70db4d00294 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room without crossing the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=e6076d79b63257ea71a40f3a03a136af response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room but do not go through the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=d87656bfd8b562ec023d00d192a84480 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot is to move towards the green room without entering a yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=5dfc44c5894f6258bd1b9c5127f86482 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room without entering a yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=620 request_id=6cdf8dad48af0982833993b1343463fc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot avoids yellow to get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=e4399e2d7f0d135bd6951667c63d1ecc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid yellow area on way to green area each time\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=922 request_id=2550e0feaf0a9a63c6f3e45445cbe1f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwhile avoiding yellow navigate to green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=810 request_id=07f4b299940d88759b10ba8fa2d86e08 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room without using the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=600 request_id=ab29ffbc31ac5b685c07e0b51894da5a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room without entering a yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=966 request_id=a137ff03a8678b881ddf78996f0a7144 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but do not enter the yellow room first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=7cb5299bcc90ff30d5e2c68aa551b756 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter green room via the non yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1085 request_id=0ca1a297f822df8fa0e39a6395fe3fb7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to room not using yellow into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=863 request_id=110af717c9ba3200fa74c05e6e2353b5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green area by avoiding yellow area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=35c64f8e0e6c66e4f6a2f104bf2a6651 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid yellow find green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=fc42556857472f411a1ce96880eedad1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not yellow to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2204 request_id=b18dec44f416686c21910d588265c31c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=bf50b92fd84b7cc799e13bc3edc245ed response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the yellow rooms\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=563 request_id=6003e6cfd7bef0f04327e2c1b59327a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large green room while avoiding the small yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=1f701db235a42804a3fb384393678b55 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the yellow room and end at the green rectangular room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=507 request_id=8c229cb946edd27738cd46f3b4f133b4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room that is not yellow and then proceed to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=962 request_id=3d3b7e17cd31df2962971a698f3945a4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the room that is not yellow and then move into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=655dd5e386b373509b49cfd4ae5a36be response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room through the door that is not yellow drive through the room and exit the other door to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=991 request_id=cb9e8eacbf7b4750a06c37be8cea525c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nto reach the green room do not go through the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1025 request_id=a4b2b51f14db29a9fbfe239449a5e0ba response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel to the green room but do not go through the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=606697fc13818b3ca63bf4abaeeb9768 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=04c5ad7ffdbc9b3682d7312210aaf395 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room avoiding the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1046 request_id=86ab2cda26e01345af42edd7c9d1381d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1455 request_id=6eee9c2e8ec2f624bffa0c149b7a9385 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green room but do not enter yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=811 request_id=a73ac34cb97505f96180a2f99c8740d3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid using the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=606 request_id=9f86421346d5e10f55a2f25b15efb657 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel to the green room through the room that is not yellow\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=627 request_id=fd34a973376bf5042353d70834197e54 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room while totally avoiding the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=5d271d95acd6d3f35bbacaeaf3fc069e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but do not go to yellow\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1266 request_id=d6119801e6f0200ed241b04a96bc4f90 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the yellow rooms\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=614 request_id=8efee5038bb25b8a0c1b535d75f9149f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but do not enter the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1571 request_id=79c1ee3ede6e2368ca3b73e0f365e55c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the yellow rooms on your way into the green rooms\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1170 request_id=5b3d5cdd0307f6aaf476ddb511922599 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nget to the green rectangle but do not go through the yellow square\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=637 request_id=de905e67780de66a9222d8d7a66c2c42 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room without entering a yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=643 request_id=7199b9605ae27fde47bcd1c4dc45a9b0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not go through the yellow room while going to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=576 request_id=b5a4bc5db81d15eec41001fe8db44f83 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid going through the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=613 request_id=d2d0fe6cecf046740cccb306913d10e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1850 request_id=6f102011da781307613095019e25ccdb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo the red or yellow room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1000 request_id=edffe62827a5149e50b32c3c1a2f6131 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove the robot from the pink room to the yellow or red room to the big blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1105 request_id=16999d588a46873bc5fd51f94706ff2f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or yellow room to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1104 request_id=bf41933d18a718a0a08ee2532f244378 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the passage into the blue room but only if you go through a yellow or red room first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=d5b7a073ba7d093fdf6348015bae934f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room by going through red or yellow only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=612 request_id=b1a0e45d974d7933bfe177ba067c6c62 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the yellow or red room and then continue to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1938 request_id=4d64446a59165e3560bcd39331950b58 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or yellow room and go to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1024 request_id=7582ab4c7f93507c9303f3354de97e61 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or yellow to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=693 request_id=36937e80e819f732deeeaa1a72efe57f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room and enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1044 request_id=ff167deb4f148f20074482d189e91572 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the yellow or red room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=678 request_id=4d54685f7599154db3130e1e337e77ee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass thru either the red or yellow box to get to the blue box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=561 request_id=48b95777a9f957b5d80dcfb3fbcce04e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or the yellow room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=697 request_id=eff59fa8c183de76d730d4392ade13b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room by using red or yellow rooms first\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=f513c723f9baf37c234be6ef24fb4666 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1353 request_id=068ff0ae42f29222e65424e0779429db response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot has to go through the yellow or red room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=842 request_id=da51adcb96cb4a3aa8129dec3c4327c6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room through red or yellow\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=934 request_id=7351986e3599f4f9a7cdaab46ea1714a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or green room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=6eeb9282d0327f2be851aa3bb94b6c02 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo from the blue room to the red room then go from the red room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=939 request_id=4f55ca18146dde069a53857aa6d93c95 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room and then green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=924 request_id=ecca319def4888311d99385c2d56d2aa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room and then go into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=966 request_id=0b3f2d6734019de370b474d5083e6575 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=807 request_id=101e3107bf659670e64c3f7afa8834e2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2156 request_id=d05a1b4bc27da5a5b615e5fe2b61af7e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=8bd94db218a9aca634919826474642b9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=986 request_id=c206634834608e439df3f90b4d47808d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the red room then enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1327 request_id=9e637105d42d2f8628761983ea928611 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=57c926bb6afb22548bfd4fb7d5d2a90a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=09194bd13f2df5c2fd3799febc8a9628 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfirst go to red room then go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=19b5704250ce5f370116f6f0fe7ea900 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo from the blue room to the red room and then go from the red room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1082 request_id=c5294eb38740904132e556ee0d41c5fb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room and enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=fc299d24e08fff6fa7d2adcb0d6c825e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room move to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=9115f2b99d236f8dc2d5f2519b915f37 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=b1c3db7ea596a12eca1e0a9a6210a285 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then go into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1788 request_id=502fb38ca94574909e25dee4cd1fe988 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room then move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1564 request_id=13c38b181fee279f8d779079f31360c4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room then the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=581 request_id=9a3516ceb5d599194fd175552217ac1a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room then the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=493a829eefd083d37bff4ebf7ab6d634 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=725 request_id=7f1b76f1a869c5c0e30e99d9430f8dfa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room and move into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1619 request_id=a50cce4dd6342ae4280c6ba8011c48c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room then go into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=819 request_id=d31d2d40d1609bb6b4e4500075d3a8b4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=699 request_id=501ee5695d78f8d523c0cd8e3a932ebf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room then to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=760 request_id=107526b960bd66ac72eb137cd34dd80e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=cd80ef1dcc7550d9c743c41623f00dff response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nrobot c move to the red room and then move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=966 request_id=923554f3a97f0468bfd21b0ad0ca4b98 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove from blue room to red room then move to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=673 request_id=9f45fadb32771d355e6382690d4f19a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to red room then move to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=836 request_id=616e4a4bb7c50c54f3c55c484f5b0759 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove into the red room then move into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=ffcd1c91c4ca51cc5cc9047d5495be87 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1555 request_id=62c2da8b980cf9663272e4e0c73485e3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=842 request_id=9b53cfc63b4e72fd39a6e1e03d5300cc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room and then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=4a9536ee42c39f41268c94783a6ab440 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room then move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1208 request_id=f9f69b4bb8dae43a443fdee78b260064 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the red room and then into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=927 request_id=ff68bcc97b7473497b1eb5c758d7b110 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room and then move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=774 request_id=bbbe797304fafeec7d21b2cdca489e4c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1116 request_id=1bdac7288f8f2e8e53025bf724cca912 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=795 request_id=3b4c8154ec34ed68fdd727343def962e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=693 request_id=b05f1c95b012ef1ac5b681e8c9bc83ac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red room go to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=612 request_id=eba99a9221e146e36e4ae375677374a2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the red room and then move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=841 request_id=230bb3db56514bf9a6109a7a360e91a7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=c14aad09a5ceb0b2c6b57437c2da670c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=402 request_id=ddc7fcf38ca5b43845deb0c5eafc711c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=0a69ece0985cd165ec00ee722fb50939 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=439 request_id=72b1f0d397d369ba273927b3d0820726 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=405 request_id=4575259d00326f176a5c8f75f4516a86 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1298 request_id=16b4f39eb0d7ac16750ce2051e7f842f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=79bdfc0965e266aedd10025edf630b6b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo in and then go into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=5e60f6488fc00ca1bcdd9d6dcd45fcb2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=6e1ea3fb5a8a02ba006d8890fe7d1a2c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo in and then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=954cd9c8211020f70568c5967f3f77d5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=344 request_id=01ce6dd148a66c4ab822fe50ab4bcac2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=ee40453746b2b14bde916db196601ac2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=a8afab7726005599abcd1a1747481458 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=470 request_id=a73fb0f1c6628a2c634ad9f86789164d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=8a2419edb51f1a330f68f37260606080 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=903 request_id=7d8cadc3cd06978ab6e3ea80771e6375 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=f7a576111a1749e57df1d448b55012c8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the middle of the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=440 request_id=0d216dd4bbc8f997b9477b4e3b956cc1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1137 request_id=2b0db96d6b3ca53c34ea6caa59aefa94 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=1bfc3c73fcdbe7fafd898e0e82353bff response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=416 request_id=b1527487bd779b62ab9d8e008742b0be response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=eb3dbe7f9b454abb3977228e0cea83fd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=6b662724551b3e9b169b23490e94b4bd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove until you are one square into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=285 request_id=a8a91aca9704f9a97e64909711b1e553 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=311 request_id=7c8d2d9958460b2c945a65a0be1830d0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=338 request_id=7a50654205416910c51c0c637bb411b8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=beb7b698165e81be6f20663e2fd4ed1a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nleave this room and go into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=885 request_id=53d31b218b7c89a6710792e585d3ba80 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=390 request_id=d6e5382ccdd960aebd30e0977900ead4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=393 request_id=4d1630e385874de1a4a6df72d54e2558 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=7a9031c9b1dc6c1e5b7061b3e6fb928b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=956 request_id=85e3fad1b2c6937dfa3e64308ce236cd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=368 request_id=8080feb788a6f001010a904aad35aad6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=317 request_id=764860b3c7503ee1757ae47187c5f1a7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=359 request_id=123080f3693548648cef7457737be1dc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=322 request_id=47ad2f0b0191dc5d6d726f6942ec4119 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nexit room and go right to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=857 request_id=fdb04b1f35ba7cb1e8836aa67993438d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1627 request_id=be0c7e1d027443a80127ed85e0068259 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=10ddfc155bc0d81443a1c9eba6828ff0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=496e10fe3875d7a140cbd12fff470765 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=1b5eccf3056042b608289838da02d7e6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=501 request_id=32d00e6d7e85d11037e830e3f91a3d8f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=45b31794dec9f81c8df370928ccf5820 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo from the blue room to the red room then to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2790 request_id=fa42be141670471632914fd70eb10502 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=26fbc7f5a46ed1ff3b68139e05a07851 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=809 request_id=14a7001c04d09c3e9db3a567fe4bd65f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=b9dc9da1341c4aabc541abf340c9f0bb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to yellow or red room them move to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=74233edc44ba5dfc1b79a196f828215f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot has to go through the red or yellow room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=1c76bba35da260fa134153e5e4f89179 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room and enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2100 request_id=e5f0952cf74b106d6e634b2409201bb7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1037 request_id=9aaa663f75f5ad550e7191cdc3f4de30 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo thru the yellow or red box to get to the green box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=622 request_id=809e4a848dc09942f13ba594cef6a855 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through either the red or the yellow room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=715fb5b663043cc4c37fd9e57507509f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nget to the green room through red or yellow rooms only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=8e714c789464512949f420f9447ac143 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove the robot through the yellow or red small room and then to the large green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=697 request_id=30af260d4bbfd48d6c3c45dfb3049704 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1744 request_id=c762f253bce0173fe2051fb34c0debcd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the yellow or red room and proceed to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1052 request_id=58fee307a3ca254a1bf4a1b9e1838878 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room by going through the yellow or red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=699 request_id=2971e6cee2375ac0c7b9d7fdf3c228a8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the yellow or red room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=469f51cfe8e4d85445259d7c11f46660 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=af2a49f64281c1a2f77e34b43f96c06c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2076 request_id=630ae64bb0dce385d864dfcb6d1e2d36 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nonly go through the red or yellow to get to the green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=f90b4e04bd71e9a6290c9a25a6d1d1fb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through yellow or red square to get to green square\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=943 request_id=6968f82f33ef0e3e0cbeed5bdf152e16 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or red room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=968 request_id=44cb18a7fa71494fb6c5410e442debb6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through red or yellow to get to green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1283 request_id=2e00a75f8619b4cf1d3e01f1f810e9a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the yellow or green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=698 request_id=9357cac24a1dacd67ee9fb5cf1db7ec1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo green or yellow to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=883 request_id=09ba964662f52f165190f2b98ca352fb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo green to blue or yellow to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=853 request_id=4922ebbcf375e4bdcad448cbd2c753f6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the green or yellow rooms and enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=607 request_id=4fcd869181fc035a3ca63387db8192a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=804 request_id=04e65567afc0f7a343ecdc0623809664 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green or yellow room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1658 request_id=6b81d325823b47ea64ee16a2a1348993 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green or yellow room to blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=915 request_id=b7a973c37d9f76e1503b9cd3646ce67c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1875 request_id=c05d316b412f1a73f842780738d79488 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the green or yellow room and enter into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1005 request_id=165783f89aacc9c6899df6909642d68d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove through the yellow or green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=738 request_id=928f6b92743678c58e9ff28a4998d552 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green or yellow room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1015 request_id=15670af021ce2e7ec988d4e173e55cd2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nup through the green or yellow box to reach the blue box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=471 request_id=c9b186f701ba21d1c468516a9ae63355 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room through green or yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1205 request_id=d429ec6ccc52a3a6449d11e929ac64ed response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove toward either the yellow or green room then into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1414 request_id=1ed7225ee8bd2b8162908b31ff17215f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through either the yellow or the green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=636 request_id=85d79b4bbee684d36242b747f3cdd076 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the green or yellow room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=762 request_id=7b4179632220e5e604430f5b8ffbc8b4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove the robot to the small yellow or green room and then to the large blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=10c6f8effd23b0ab7434fa1c2c35b2a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the yellow or green room to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1455 request_id=1af6ebbc8883c94fe7d9dda64c33b314 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntook the yellow room to the blue room and the green room to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=799 request_id=7d1e2293304e706e53fb8c517a5910d7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwhile avoiding the red room follow the shortest path to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=159b9dc28851026c8a31d253e2311327 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but do not pass through the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=898 request_id=ca54a17042b4dda49a6ab798f657474f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nhead to the blue rectangular room without passing through a red square room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=964 request_id=32b063e1bc6bef66749304cc870d5696 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the blue room without going through the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=d81cb40ac762476ab1628535c5e34990 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to blue room but do not go through the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1785 request_id=ec27f9b09e52a501c0cb6723ec0a7c48 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but do not use the red room to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=879 request_id=1751a84f97eee425843d21709b190d2d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without crossing the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=975 request_id=7fb14597abe3c6ad9210cf38af73a299 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the red room and move to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=386a14baa6821396d7a82de4379a1158 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through room that is not red to get to blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=819 request_id=237d018288c531d563789469c72bf937 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue but not through red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=644 request_id=bd9c0090aa0fc9f7e16defb37637e506 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntake a path to reach the blue colour place by not taking the route which is red and black\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=801 request_id=23c577495cf3a02853e62936db3d93e4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the opposite of the red room to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=988 request_id=d1be9577ca077c2be2a65d02ecbd6a69 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue but not through red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=868 request_id=8b167a4e68ef2094e42ad55ddd3b2bde response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but do not use the red room to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=755 request_id=2262ba630961807ef99710e4215714db response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room without going through the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=950 request_id=22c0db753021898e44eae94eae30abf6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot avoids the red to get to the blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=df1ff113e5cfc41ba30ec60624d04419 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngot to blue room without going through red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=532 request_id=01e44ceedefb448138723ad2c3e71660 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room while avoiding red rooms\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=557 request_id=c7cf8293ec0316eb1c16eab220d2dde8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1207 request_id=370d15502e5d6fb094c8fe138551b388 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue but do not go through red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=9667727e6a080bdd7f8ef70ab71cabe7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without going through the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=577 request_id=241e87fe990070ff59a1db946438d60c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room while avoiding the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=594 request_id=eef3cf64d6818d4bcc1775d25905fcc1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not go through the red room towards the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=622 request_id=feae91cda23dcb39b11e2a199a30ab85 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoiding the red rectangle travel to the blue area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=569 request_id=38bdb3cf365a30b08b66f334827f2945 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large blue room while avoiding the small red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1857 request_id=72fc8dfaed3823e8e7ba739efefaabb3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but do not pass through the red room on your way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=de86366cc94231bb56bb5643563f9169 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nnever follow red path to reach blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=723 request_id=0b345efa66188d4cd1075bc185b34643 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue area by avoiding red area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=761 request_id=9549b1447146babde02a5e686692688e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to blue room not using red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=809 request_id=a820435cdc91694f438515dde8cba3b3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without entering a red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=595 request_id=b98d678432c84a3cdb3071577cbeaebb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo only through rooms that are not red to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=530 request_id=0dee864912404b27c485484e2ea26c03 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot avoids the red room in going towards the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=9820a6fa336425539faccf8d911d97a1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2033 request_id=997793ac458d446bb66e2b91f8a424f5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwithout stepping on red spaces move into the blue room then stop once you enter it\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=676 request_id=d86c01d015d47bd53c548770adddcab3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to blue room but avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=791 request_id=bedc955bb95f9885b374a14bc2103049 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but do not use the red room to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1144 request_id=130eda28c66e04fd0dbfe695223a8fa3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not red and enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1618 request_id=20c72951629f2b0c46935e51da036df0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter blue room via the non red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1970 request_id=1786d351c709af3615c98f2558080336 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without entering a red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=961 request_id=5d4e1352825bd9cf3b50ae0fee9b5a24 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large blue room while avoiding the small red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=674 request_id=cef20904e95f3204982ce6d284ad7fac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=677 request_id=f7c0d3860fd308a25a977222f3d8991c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room avoiding the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1334 request_id=42cafa253b6dbc6298890ee870134f6e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room which is not red to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=602a6a31aa9d52e505ffe6b73469d899 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=794 request_id=138d8587a96a37b62e485f481cd42c29 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=689 request_id=daddd7979b273f179781b9f65e72c720 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not go through the red room towards the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=56f697c7ecd821bf570374b4102d7657 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room by any room that is not red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=839 request_id=c8bb670b387c4ab6858e5d385a4824be response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot avoids red to get to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=580 request_id=57d51043261796cf71af05c0750b7911 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room that is not red which will lead to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=d81eb406c167a44e2fb4734a28754d2d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room while not passing through the red room on the way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=777 request_id=ad6094293f538d7a5b100114acc922f0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo only through rooms that are not red to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1699 request_id=a87e6a8b5ad2b31dbd28682e772058ea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue but not through red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2018 request_id=123fe894a70ba018eadc589e418b9a26 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue via green or yellow but not red\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=644 request_id=ed67eb3f8f71473c051aa7039b1f53c9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nto reach the blue room do not go through the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1144 request_id=eca5f561ef6246967e55cffecb53dc77 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid red rooms while going to the blue one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=595 request_id=663b155a9f49a480c2823e1021aac0f2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue area by avoiding red area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=566 request_id=887fcc9eecdfe478f8350612d42e7400 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo towards the blue room and avoid the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=532 request_id=2cac60b7423bb0320003e79346a786e8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room without entering a red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=910 request_id=eba863403957e6890e3d04c38ced1c2b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the red room and end at the blue rectangular room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1183 request_id=761deb65df8c28d25831055f6a3df5e3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through square that is not green to get the blue rectangular\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=429d6c02c435143c70359b37b0b79ed4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue but not through green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=912 request_id=5b996286911ca5ae57267bed71b885a2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not green to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1340 request_id=0feaafc31b54d1290606256781d6e47b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=882 request_id=bd4b460aa308cfc52c0e933b55f1c3a0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue without going to green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=696 request_id=c6697d825e34fb972e081f4f6a211b58 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without crossing the green one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=967 request_id=a1c76c0ec110bebb186ecd120ab3f59d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without entering a green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1946 request_id=009bd4a9ebfa7e4c23d60f1590371199 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room avoiding green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1315 request_id=340a9b806d631b869e71f21dd4cb9232 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwalk to the blue room while avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=901 request_id=85941c161b6ab67a2c9c316c22c9b730 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwalk through any room except the green room to enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1208 request_id=bc9a481acaa48cd044040583b4a2f425 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue room without going to green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=cb96cd4f2a8ae5496b95f03b5d928d06 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but avoid using the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=fd6dcc9c681db47bdb4815119dc5e216 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not take the green room to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=946 request_id=838a13bf7e2e3deb5ca741ac6b34d784 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room while avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2053 request_id=4051eca7d706127263c6e7580b84bdb2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nreach blue room without going through green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=819 request_id=0efd920918ae2ddab46b2c9f894812d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue area by avoiding green area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=fed445f2415986458285f6c15cc04665 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nget to the blue room by avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=682 request_id=406aee883c6fe75f1bedce7f5446e57d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room that is not green and proceed through to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=866 request_id=063afe44e6f5c721ac7690727768dbda response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nonly go through rooms that are not green to get to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=643 request_id=f8a3faac1e4229ce435ece97e3b3ca33 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not green and enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=848 request_id=c30703a792ffc381daf3ba4ec9e46620 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndrive through the room that is not green and enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=749 request_id=0dd1d9477097b50ea84b997c280221c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through any room that is not green to reach the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=826bc4a6e85060b213beb8b699636edb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not go through the green room towards the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=939 request_id=17a9cc62b7ce842d36494acbb0438f2b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid green go to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1206 request_id=bfa135ed82d23752c3dae10edb9cfaf9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngoing through the red room or the yellow room straight to the blue room avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=857 request_id=e6259c67e38778f84120d6e91e010eae response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1419 request_id=0305af12f69ddd501e6e12f0ee28fee6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue area by avoiding green area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=585 request_id=6b61d471bb7ed0b6edf26b3d6c91915a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter into the room that is not green and continue through that room into the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=848 request_id=3779c575b733d4083f71a5fb772a830a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room without entering a green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1294 request_id=8c339b414ab830ddd484b1bdc76592cc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room but do not go through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=844 request_id=f235d1777b198e0fd4008c9d976ef7fe response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to blue but not through green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=8ca088ae8b2b1c9234c4ef00447163a7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not green to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=995 request_id=5dc176357538edbd14e7d90384851611 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoiding green navigate to blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=762 request_id=687b4a8ab2fd23e4d5bf6d6e0b6ae11c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nget to the blue area by avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1221 request_id=50f40a66c815f48ab56cbcfbc536a6af response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room through the room that is not green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=750 request_id=5df469c0314c865a47e86fa7a7d1241b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room that isnt green then go to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=949 request_id=149dfdbaf6e4959f644cabb582d64f95 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue room without entering a green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=0ad420efe0c5815cb10a25ed2d71c3ee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel to the blue room through the room that is not green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=775 request_id=b8139f136b4dc5e73dd7b2e860eaed98 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo towards the blue room and avoid the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=796 request_id=1d8191c2bee97375abda78293a38ab3b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room without passing through the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=716 request_id=aa21afc272491cc23557159e1545e523 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the blue room without using the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=991 request_id=99a4c5398f83a7685f4aaee7d0239150 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not enter the blue room through the green room but by the red room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=0ea1b62015c35e9dbe4587994d9bb377 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room and do not use the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=594 request_id=4fc769ec789db078ca709f72be27816e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room while avoiding the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=851 request_id=f1ea6f7b28a79543438edf4a5bfcbb69 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nentering any room that is not green will lead you to the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=1df611879b7901205d41127e784d1406 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large blue room while avoiding the small green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1022 request_id=72767146cecd0b32bd5dadddd3024337 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1039 request_id=151ed619fd3c83868934029346526397 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green without going through blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=688 request_id=3c8d96d66a856cdb4a356d3deebf7646 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room without passing the blue one\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=918ff383bb9fff9058d53a50a20247ec response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the blue room and move to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1900 request_id=aa966685588830d4b1c912542b06548e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=993 request_id=22a35a6289c5319d9fe77c012b67d3c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the non blue room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=578 request_id=55cd7e6c8a1f5305e556a548bff96cee response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the blue room when proceeding to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=750 request_id=10197ff2b464d8698b936964805cb2ef response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but avoid using the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=804 request_id=0bb34e8a0de41652b6aa0010295bb22f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but do not go through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=740 request_id=e9fbfe8d432eafbcd8dd0c81fff68cca response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room that is not blue then go to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=972 request_id=c05114907f5b2ed04257576ee579c2ac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not blue to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=d3f4eaeaa2a505807f0a8533ad62a8b0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room without entering a blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=556 request_id=a0baa02b1f323c3ab9d3c12c7ea7d9d8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the red room or the yellow room and head straight away to the green room avoiding the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=926 request_id=95ba298482ba9033c9254e0c31b7244c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green but not through blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=d449342a96bd7a01cd0a54dd3b8ba100 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green room avoiding blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=634 request_id=6ad32ca57588f3d2d57df69042bc9b67 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not go through the blue room towards the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=672 request_id=701ae5e807af56f32c97b0e302270531 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green area avoiding blue area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=628 request_id=f2619a12ead2ec9683bbd60f27c3c1c4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the blue room on the way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=818 request_id=305a92f078a9a8b08123ede31a601c44 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but do not take the blue room to get there\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=873 request_id=783d6ba43028c3d642910de8b058389f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoiding blue navigate to green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=656 request_id=96909d9658d2af42e98fcff90b9dcf6b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nonly go through rooms that are not blue to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=6f312eca2febadbc76e3acf3e623dad7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nwalk through any room except the blue room to enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=665 request_id=19499dee4fb68d38f61353ff3b00d2b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large green room while avoiding the small blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1795 request_id=179a8f173e7d22957b8fe71e2350afd7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndrive through the room that is not blue and enter the green room on the other side\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=581 request_id=657d6185079c30f71708118f46669313 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room which is not blue to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=640 request_id=546fe2d29ee8936ee2bb602f4aa136af response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nget to the green area by avoiding the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1123 request_id=fff363f3abb0a846bdc1d34732f5183e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green area by avoiding blue area\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1045 request_id=6bec937b9f971bdfa1263fd4353d3fac response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the room that is not blue and proceed through to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=599 request_id=dffea4ca670de83fac27764acf8a7d36 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into green room but avoid blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=554 request_id=343777c3fec95eabcb6cfdfc20a86fdb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1035 request_id=b726e6e22df5fc6077949f8626f241f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room without using the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=aaee12318a199e8c7f0bd6f69b2ba331 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=694 request_id=ac195dad0aa7edd7d2ddc198f17bc559 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the blue room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=34e0921f00048176337bfbff2211ba75 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room without entering a blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1419 request_id=eef2d3ca0b9dd4250a270d974a51c7f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel to the green room without going through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=793 request_id=90b037a7251a3d15d84f87045b0db27f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntravel to the green room through the room that is not blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1745 request_id=70006354ca4c56ee2df14951d1fbbfae response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room through the room that is not blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=8ca52cb02e4d87b7f6c025166de05950 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter any room that is not blue to end up in the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=839 request_id=fbcc923146a28167e5cfbb034f24e242 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo into the green room but do not enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=732 request_id=13e886953726f88feb2bd9cfd8b294b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room without passing through the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=4b0014a30550e3068b2e64bf5fdf7405 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the room that is not blue and enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=869 request_id=a2571c6700cbfd9be66b34cc2ec582b5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the blue room and continue to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=98692df48b045a00128e28358bda056b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=756 request_id=0c73c281149cb94ab495d77207a1025a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the large green room while avoiding the small blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=905 request_id=e92c7c77097376c246ab1a3698c85a20 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo towards the green room while avoiding the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1100 request_id=99cb9a01789cb130dcebcefc83bc05b6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through the non blue room to enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=590 request_id=11a6b6a7c454826b10c9c9619b031044 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room but do not enter the blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1961 request_id=8c16bd3d2bcc0ad8e4e3598914f43e6b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room while avoiding the blue room on the way\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1379 request_id=4e1f81f08aada30d1069fc3c339ac90c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green without going through blue\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=933 request_id=432d0bc753711d1a70d22336b63d850e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove to the green room without entering a blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=0290099c11f9870d45a9c8d631500600 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room through the red or blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=749 request_id=fc0ad4a02bfaf839601662639a44b505 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to red or blue then green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=697 request_id=86fa9fe01ecac43a4ad843fed253db5d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\navoid the yellow room and enter the green room through either the red or blue room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=866 request_id=a3ba4d70be198cd2c7ffa03799821b00 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the blue room or the red room and head straight away to the green room avoiding the yellow room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=999e139146e70dddf55895297568ec57 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to the green room either through the red room or through the blue room only\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1010 request_id=d214b9ed2f40c4245974effe8baab181 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through either a red or blue room to enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1265 request_id=cae908224fcb0070aeef96642db27a7d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue room or the red room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=846 request_id=6d6cd55ee7205e011684790d3bd13a2b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo thru the blue or red box to get to the green box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1001 request_id=1bc2a9c1951639e187f88380a4440f85 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\npass through either the blue or red room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=653 request_id=60798d9198cfd0de44dc9ab03350541e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove from the pink box into the green box by way of the blue or red box avoiding the yellow box\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=652 request_id=3b2d6339ea5cf91dbd454549ea295685 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through blue or red to get to green\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1025 request_id=ba75b7874ce664f10255b138bfea49fe response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or the blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1289 request_id=25850be73685c9678600cbb133b06528 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=851 request_id=f363b8fcd4dd1852a147c7cc6009abc1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to green rectangle thru blue or red square but not yellow\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1658 request_id=c0391e2a83c7ec95f5c742d58263b81b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nthe robot must move through the red or blue room to get to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=966 request_id=9a64f7c3d9fb819107aa9d355643ee1f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the blue or red room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=dd092b2d0588b9d843cd16600233ae36 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the green room through either the red or or blue rooms\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=701 request_id=d8cc7b4c70260350236528d29adb0661 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=892 request_id=42979047c2a3eb5f43e05fe282e1b442 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or blue room to enter the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=764 request_id=6b01d692e71bb02af27c3624a250b0b8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nenter the blue or red room and proceed until the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=677 request_id=6a0ebafc92a70e5361b161c1660d589e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nmove toward either the red or blue room then into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=8fcf7b4b7c55aff2a6353d7eccc3b805 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through the red or blue room to the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=646 request_id=a7ce44869324eb567d5983c52a5cc68e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo through either the red or blue room to reach the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=900 request_id=312d5bc2aa939ebebb67884cae43dcd5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ntake the red or blue room into the green room\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=863 request_id=e260cd50002c3095e3aa508e6fe753a6 response_code=200
Syntax error in output LTL: F blue_room F green_room
Syntax error in output LTL: F & | blue_room F green_room
Syntax error in output LTL: F & | blue_room F green_room
Syntax error in output LTL: F & | blue_room F green_room
Syntax error in output LTL: F & pink_room F green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & | green_room blue_room
Syntax error in output LTL: & F blue_room G ! yellow_room red_room
Syntax error in output LTL: F green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & | green_room blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: F & | green_room F blue_room
Syntax error in output LTL: & F blue_room G & green_room
Syntax error in output LTL: F & red_room
Syntax error in output LTL: F red_room & X F
Syntax error in output LTL: F & G (! yellow_room U green_room)
Syntax error in output LTL: blue_room & red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F & blue_room red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F & blue_room F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F red_room F green_room
Syntax error in output LTL: F & F green_room
Syntax error in output LTL: F & green_room
Syntax error in output LTL: F & green_room
Syntax error in output LTL: F & blue_room F red_room F green_room
Syntax error in output LTL: F & | green_room blue_room yellow_room F blue_room
Syntax error in output LTL: F & yellow_room F blue_room F green_room F blue_
Syntax error in output LTL: G ! F red_room F blue_room
Syntax error in output LTL: F & | blue_room green_room yellow_room F red_room
Syntax error in output LTL: F & | green_room yellow_room F blue_room G ! red
Syntax error in output LTL: F & | red_room blue_room yellow_room F green_room
Syntax error in output LTL: F & | blue_room G ! green_room
Syntax error in output LTL: F & | red_room yellow_room F blue_room G ! green
Syntax error in output LTL: F & | blue_room ! green_room F
Syntax error in output LTL: G ! blue_room F green_room
Syntax error in output LTL: & F green_room G ! yellow_room & | red_room blue
Syntax error in output LTL: F & | red_room blue_room F green_room G ! yellow
Syntax error in output LTL: F & | red_room blue_room F green_room G ! yellow
0
Input utterance: go to the blue room keep going and stop when you reach the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

1
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

2
Input utterance: go through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

3
Input utterance: go over towards the blue room and up through it to the green rectangular room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

4
Input utterance: go through the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

5
Input utterance: go through blue room to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

6
Input utterance: follow the path through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

7
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

8
Input utterance: go through blue rooms to get to the green one
True LTL: F & blue_room F green_room
Output LTL: & F green_room G ! blue_room
False

9
Input utterance: take the blue room first which leads to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

10
Input utterance: only go to the green room by first entering the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

11
Input utterance: go to the green room through the blue one
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

12
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

13
Input utterance: go to the green area through blue area
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

14
Input utterance: go through blue to get to green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

15
Input utterance: go through blue room to get to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

16
Input utterance: go through blue to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

17
Input utterance: please go to the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

18
Input utterance: travel through the blue square room to the large green rectangular room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

19
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

20
Input utterance: move through a blue room and into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

21
Input utterance: go through blue to reach green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

22
Input utterance: go to the green room through blue
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

23
Input utterance: move through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

24
Input utterance: go into the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

25
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

26
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

27
Input utterance: go into the blue room and then the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

28
Input utterance: go to green rectangle via blue square
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

29
Input utterance: go to the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

30
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

31
Input utterance: go to the blue room then to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

32
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

33
Input utterance: travel through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

34
Input utterance: go to large green room through blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

35
Input utterance: go to the blue room only and then the green room only
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

36
Input utterance: navigate through blue to reach green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

37
Input utterance: enter the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

38
Input utterance: make your way to the green room by going through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

39
Input utterance: the robot moves through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

40
Input utterance: enter the blue room and proceed until the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

41
Input utterance: go through the blue room towards the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

42
Input utterance: go through the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

43
Input utterance: go to the green room by passing through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

44
Input utterance: enter the door to the blue room and exit the other door into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

45
Input utterance: travel through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

46
Input utterance: enter green room via blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

47
Input utterance: go through blue room to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

48
Input utterance: go through the blue room until you get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

49
Input utterance: move through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

50
Input utterance: travel through the blue room to go into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

51
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

52
Input utterance: always walk through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: & blue_room F green_room
False

53
Input utterance: the robot moves towards the green room through the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

54
Input utterance: go thru the blue box to get to the green box
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

55
Input utterance: move to the blue room and then to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

56
Input utterance: instead of going through the red room move through the blue room to enter the green room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room ! red_room F green_room
False

57
Input utterance: go to the blue room then to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

58
Input utterance: go through the blue room in to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

59
Input utterance: go thru the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

60
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

61
Input utterance: go through the blue room to enter the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

62
Input utterance: the robot goes to the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F blue_room F green_room
False

63
Input utterance: walk pass the blue room into the green room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room F green_room
False

64
Input utterance: move to the large green room by passing through the small blue room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room F green_room
False

65
Input utterance: enter the blue room and then the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

66
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

67
Input utterance: you must walk through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: & F blue_room F green_room
False

68
Input utterance: move through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

69
Input utterance: go to the green room only through the blue room
True LTL: F & blue_room F green_room
Output LTL: & F green_room G ! blue_room
False

70
Input utterance: go through the blue room and enter the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

71
Input utterance: walk through the blue room until you reach the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

72
Input utterance: cross the blue room only to reach the green room
True LTL: F & blue_room F green_room
Output LTL: & F green_room G ! blue_room
False

73
Input utterance: go to blue room then go to green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

74
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

75
Input utterance: go to the blue room then go to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

76
Input utterance: go to the green room via the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

77
Input utterance: go through the door to the blue room and continue into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

78
Input utterance: first enter the blue room and then proceed to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

79
Input utterance: move toward the blue room then into the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

80
Input utterance: move into the green room while being sure to pass through only the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

81
Input utterance: go to the green room by first entering the blue room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

82
Input utterance: pass through the blue room to reach the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

83
Input utterance: the robot goes through the blue to get to the green
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

84
Input utterance: go through the blue room to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

85
Input utterance: go through the blue room to reach the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

86
Input utterance: go into the green room by way of the blue room
True LTL: F & blue_room F green_room
Output LTL: F & | blue_room F green_room
False

87
Input utterance: go through the blue room while moving to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

88
Input utterance: pass through the small blue room to get to the large green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

89
Input utterance: go through the blue room to get to the green room
True LTL: F & blue_room F green_room
Output LTL: F & blue_room F green_room
True

90
Input utterance: move through the green rooms to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room blue_room F blue_room
False

91
Input utterance: go from the pink room to the blue room by going through the green room
True LTL: F & green_room F blue_room
Output LTL: F & pink_room F green_room F blue_room
False

92
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: & F green_room F blue_room
False

93
Input utterance: pass through the small green room to get to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

94
Input utterance: move to the blue room by going through the green room first
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

95
Input utterance: move into the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

96
Input utterance: travel through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

97
Input utterance: go through the green box to get to the blue area
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

98
Input utterance: go through the green room in to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

99
Input utterance: enter blue room through green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

100
Input utterance: robot goes through green and ends up in blue
True LTL: F & green_room F blue_room
Output LTL: & F green_room F blue_room
False

101
Input utterance: move into the blue room but only via the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

102
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

103
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

104
Input utterance: enter the blue room through the green door only
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G ! green_room
False

105
Input utterance: the robot must go into the blue room by going through the green room
True LTL: F & green_room F blue_room
Output LTL: F & blue_room F green_room
False

106
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

107
Input utterance: go to the blue area through green area
True LTL: F & green_room F blue_room
Output LTL: F & | green_room blue_room
False

108
Input utterance: go to green room before blue room
True LTL: F & green_room F blue_room
Output LTL: & F green_room G ! blue_room
False

109
Input utterance: go to the blue room via the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

110
Input utterance: go up through the green box to the blue box
True LTL: F & green_room F blue_room
Output LTL: & F green_room F blue_room
False

111
Input utterance: go to blue room through green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

112
Input utterance: go to the blue room but only go through the green room to get there
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G ! yellow_room red_room
False

113
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

114
Input utterance: only go through green rooms to get to blue rooms
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G ! green_room
False

115
Input utterance: go via green color path to reach blue room
True LTL: F & green_room F blue_room
Output LTL: & F green_room F blue_room
False

116
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

117
Input utterance: go through the green room and then into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

118
Input utterance: go through green to get to blue
True LTL: F & green_room F blue_room
Output LTL: & F green_room F blue_room
False

119
Input utterance: go to the green room and then go to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

120
Input utterance: the robot goes through the green to get to blue
True LTL: F & green_room F blue_room
Output LTL: & F green_room G ! blue_room
False

121
Input utterance: go to the blue room and make sure to go through the green room
True LTL: F & green_room F blue_room
Output LTL: F & blue_room F green_room
False

122
Input utterance: move through the green room to gain access to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F green_room F blue_room
False

123
Input utterance: go through the green room to reach the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

124
Input utterance: pass through the small green room to get to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

125
Input utterance: move through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

126
Input utterance: go to green room then to blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

127
Input utterance: go through green rooms to get to the blue one
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

128
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

129
Input utterance: pass through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

130
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F green_room F blue_room
False

131
Input utterance: move through green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

132
Input utterance: go through the green room and into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

133
Input utterance: avoiding all but the green rectangle travel to the blue area
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G ! green_room
False

134
Input utterance: move to reach the blue place by taking a path which has green colour and white colour in it while avoiding black yellow and red colour
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G & | green_room white_room ! black
False

135
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

136
Input utterance: move to blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

137
Input utterance: pass through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

138
Input utterance: go to the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

139
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

140
Input utterance: enter the blue room by going though the green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

141
Input utterance: go towards the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & blue_room F green_room
False

142
Input utterance: go through the green room to reach the blue room
True LTL: F & green_room F blue_room
Output LTL: & F green_room G F blue_room
False

143
Input utterance: move through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

144
Input utterance: the robot goes through green to get to blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

145
Input utterance: enter the blue room through the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room blue_room
False

146
Input utterance: enter the blue room by way of the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

147
Input utterance: progress through green rectangle room to the large blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

148
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

149
Input utterance: go to the blue room via the green room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

150
Input utterance: to reach the blue go through the green
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

151
Input utterance: enter the green room and exit into the blue room
True LTL: F & green_room F blue_room
Output LTL: F green_room & X blue_room
False

152
Input utterance: travel through the green room to the blue rectangular room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

153
Input utterance: go through the green and to the blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

154
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

155
Input utterance: enter blue room via green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

156
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

157
Input utterance: go through the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

158
Input utterance: go up through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

159
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

160
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

161
Input utterance: follow the green room to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

162
Input utterance: go to blue via green
True LTL: F & green_room F blue_room
Output LTL: F & | green_room F blue_room
False

163
Input utterance: first enter the green room and then move to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

164
Input utterance: move toward the green room then into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

165
Input utterance: go through the green room in to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

166
Input utterance: move through the green room and into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

167
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

168
Input utterance: go through green to get to blue
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

169
Input utterance: move through the green room and out into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

170
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

171
Input utterance: move through the hallway to the blue room but only if it takes you through a green room
True LTL: F & green_room F blue_room
Output LTL: & F blue_room G & green_room
False

172
Input utterance: go to the green room then go to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

173
Input utterance: go through the green room and into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

174
Input utterance: go through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

175
Input utterance: go through the green room into the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

176
Input utterance: move through the green room to get to the blue room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

177
Input utterance: go through green rooms to get to the blue one
True LTL: F & green_room F blue_room
Output LTL: & F green_room G ! blue_room
False

178
Input utterance: move to the large blue room by passing through the small green room
True LTL: F & green_room F blue_room
Output LTL: F & green_room F blue_room
True

179
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

180
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

181
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

182
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

183
Input utterance: move from your room to the red room
True LTL: F red_room
Output LTL: F red_room
True

184
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

185
Input utterance: go in to the red room
True LTL: F red_room
Output LTL: F red_room
True

186
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

187
Input utterance: move into the red room and stay on the first square you end up on
True LTL: F red_room
Output LTL: red_room
False

188
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

189
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

190
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

191
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

192
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

193
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

194
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

195
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

196
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

197
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

198
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

199
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

200
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

201
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

202
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

203
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

204
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

205
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

206
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

207
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

208
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

209
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

210
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

211
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

212
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

213
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

214
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

215
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

216
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

217
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

218
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

219
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

220
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

221
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

222
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

223
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

224
Input utterance: move to red room
True LTL: F red_room
Output LTL: F & red_room
False

225
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

226
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

227
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

228
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

229
Input utterance: move into red room
True LTL: F red_room
Output LTL: F red_room
True

230
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

231
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

232
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

233
Input utterance: move to the red room and stop after entering
True LTL: F red_room
Output LTL: F red_room & X F
False

234
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

235
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

236
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

237
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

238
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

239
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

240
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

241
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

242
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

243
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

244
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

245
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

246
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

247
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

248
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

249
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

250
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

251
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

252
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

253
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

254
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

255
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

256
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

257
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

258
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

259
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

260
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

261
Input utterance: enter the red room
True LTL: F red_room
Output LTL: F red_room
True

262
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

263
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

264
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

265
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

266
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

267
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

268
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

269
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

270
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

271
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

272
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

273
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

274
Input utterance: i want you to go into the red room
True LTL: F red_room
Output LTL: F red_room
True

275
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

276
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

277
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

278
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

279
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

280
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

281
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

282
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

283
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

284
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

285
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

286
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

287
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

288
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

289
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

290
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

291
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

292
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

293
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

294
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

295
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

296
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

297
Input utterance: go to the red
True LTL: F red_room
Output LTL: F red_room
True

298
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

299
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

300
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

301
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

302
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

303
Input utterance: go into the red room
True LTL: F red_room
Output LTL: F red_room
True

304
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

305
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

306
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

307
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

308
Input utterance: go to the red room
True LTL: F red_room
Output LTL: red_room
False

309
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

310
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

311
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

312
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

313
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

314
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

315
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

316
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

317
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

318
Input utterance: move into the red room
True LTL: F red_room
Output LTL: F red_room
True

319
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

320
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

321
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

322
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

323
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

324
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

325
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

326
Input utterance: move to red room
True LTL: F red_room
Output LTL: F red_room
True

327
Input utterance: go to red room
True LTL: F red_room
Output LTL: F red_room
True

328
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

329
Input utterance: move to the red room
True LTL: F red_room
Output LTL: F red_room
True

330
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

331
Input utterance: go to the red room
True LTL: F red_room
Output LTL: F red_room
True

332
Input utterance: go only through rooms that are not yellow to get to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

333
Input utterance: make your way to the green room while avoiding the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

334
Input utterance: proceed to green area while avoiding the yellow area
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

335
Input utterance: move through the room that is not yellow into the green room
True LTL: & F green_room G ! yellow_room
Output LTL: F & ! yellow_room F green_room
False

336
Input utterance: go to green area avoiding yellow area
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

337
Input utterance: do not go through the yellow room while going to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

338
Input utterance: go into the green room without crossing the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

339
Input utterance: move to the green room but do not go through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

340
Input utterance: the robot is to move towards the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

341
Input utterance: go to the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

342
Input utterance: the robot avoids yellow to get to the green
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

343
Input utterance: avoid yellow area on way to green area each time
True LTL: & F green_room G ! yellow_room
Output LTL: F & G (! yellow_room U green_room)
False

344
Input utterance: while avoiding yellow navigate to green
True LTL: & F green_room G ! yellow_room
Output LTL: & G ! yellow_room F green_room
True

345
Input utterance: go to the green room without using the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

346
Input utterance: enter the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

347
Input utterance: go to the green room but do not enter the yellow room first
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

348
Input utterance: enter green room via the non yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: F & | red_room blue_room F green_room
False

349
Input utterance: move to room not using yellow into the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

350
Input utterance: go to green area by avoiding yellow area
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

351
Input utterance: avoid yellow find green
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

352
Input utterance: go through the room that is not yellow to get to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

353
Input utterance: go to the green room but avoid the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

354
Input utterance: go to the green room while avoiding the yellow rooms
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

355
Input utterance: move to the large green room while avoiding the small yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: F & green_room G ! yellow_room
False

356
Input utterance: avoid the yellow room and end at the green rectangular room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

357
Input utterance: enter the room that is not yellow and then proceed to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: F & ! yellow_room F green_room
False

358
Input utterance: move to the room that is not yellow and then move into the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F ! yellow_room F green_room
False

359
Input utterance: enter the room through the door that is not yellow drive through the room and exit the other door to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F ! yellow_room F green_room
False

360
Input utterance: to reach the green room do not go through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

361
Input utterance: travel to the green room but do not go through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

362
Input utterance: go to the green room but avoid the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

363
Input utterance: go to the green room avoiding the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

364
Input utterance: go to the green room but avoid the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

365
Input utterance: go to green room but do not enter yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

366
Input utterance: go to the green room but avoid using the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

367
Input utterance: travel to the green room through the room that is not yellow
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

368
Input utterance: go into the green room while totally avoiding the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

369
Input utterance: go to the green room but do not go to yellow
True LTL: & F green_room G ! yellow_room
Output LTL: F & green_room G ! yellow_room
False

370
Input utterance: go to the green room while avoiding the yellow rooms
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

371
Input utterance: go to the green room but do not enter the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

372
Input utterance: avoid the yellow rooms on your way into the green rooms
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

373
Input utterance: get to the green rectangle but do not go through the yellow square
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

374
Input utterance: enter the green room without entering a yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: F & green_room G ! yellow_room
False

375
Input utterance: do not go through the yellow room while going to the green room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

376
Input utterance: go to the green room but avoid going through the yellow room
True LTL: & F green_room G ! yellow_room
Output LTL: & F green_room G ! yellow_room
True

377
Input utterance: go through the yellow or red room to reach the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

378
Input utterance: go the red or yellow room into the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

379
Input utterance: move the robot from the pink room to the yellow or red room to the big blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

380
Input utterance: go through the red or yellow room to reach the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

381
Input utterance: go through the passage into the blue room but only if you go through a yellow or red room first
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

382
Input utterance: move to the blue room by going through red or yellow only
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

383
Input utterance: enter the yellow or red room and then continue to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

384
Input utterance: go through the red or yellow room and go to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

385
Input utterance: go through the red or yellow to get to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

386
Input utterance: go through the yellow or red room and enter the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

387
Input utterance: move through the yellow or red room to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

388
Input utterance: pass thru either the red or yellow box to get to the blue box
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

389
Input utterance: go through the red or the yellow room to get to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

390
Input utterance: go to blue room by using red or yellow rooms first
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

391
Input utterance: go through the yellow or red room to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

392
Input utterance: the robot has to go through the yellow or red room to get to the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | yellow_room red_room F blue_room
True

393
Input utterance: go to the blue room through red or yellow
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room yellow_room F blue_room
True

394
Input utterance: go through the red or green room into the blue room
True LTL: F & | red_room yellow_room F blue_room
Output LTL: F & | red_room green_room F blue_room
False

395
Input utterance: go from the blue room to the red room then go from the red room to the green room
True LTL: F & red_room F green_room
Output LTL: blue_room & red_room F green_room
False

396
Input utterance: go to red room and then green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

397
Input utterance: go into the red room and then go into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

398
Input utterance: go to the red room then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

399
Input utterance: go to the red room go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

400
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

401
Input utterance: move to the red room then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

402
Input utterance: enter the red room then enter the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

403
Input utterance: move to the red room move to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

404
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

405
Input utterance: first go to red room then go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

406
Input utterance: go from the blue room to the red room and then go from the red room to the green room
True LTL: F & red_room F green_room
Output LTL: F & blue_room red_room F green_room
False

407
Input utterance: go into the red room and enter the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

408
Input utterance: move to red room move to green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

409
Input utterance: go to the red room and then the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

410
Input utterance: go to the red room and then go into the green room
True LTL: F & red_room F green_room
Output LTL: F red_room & F green_room
False

411
Input utterance: move to the red room then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

412
Input utterance: go to the red room then the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

413
Input utterance: go to the red room then the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

414
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

415
Input utterance: move to the red room and move into the green room
True LTL: F & red_room F green_room
Output LTL: F red_room & F green_room
False

416
Input utterance: go into the red room then go into the green room
True LTL: F & red_room F green_room
Output LTL: & F red_room F green_room
False

417
Input utterance: move to the red room move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

418
Input utterance: go to the red room then to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

419
Input utterance: go to the red room and then to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

420
Input utterance: robot c move to the red room and then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

421
Input utterance: move from blue room to red room then move to green room
True LTL: F & red_room F green_room
Output LTL: F & blue_room F red_room F green_room
False

422
Input utterance: move to red room then move to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

423
Input utterance: move into the red room then move into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

424
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

425
Input utterance: go to the red room go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

426
Input utterance: go to the red room and then go to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

427
Input utterance: move to the red room then move to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room & F green_room
False

428
Input utterance: go into the red room and then into the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

429
Input utterance: move to the red room and then move to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

430
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

431
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

432
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

433
Input utterance: go to red room go to green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

434
Input utterance: move to the red room and then move to the green room
True LTL: F & red_room F green_room
Output LTL: F & red_room F green_room
True

435
Input utterance: go to the red room go to the green room
True LTL: F & red_room F green_room
Output LTL: F red_room F green_room
False

436
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

437
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

438
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

439
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

440
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

441
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

442
Input utterance: go in and then go into the green room
True LTL: F green_room
Output LTL: F & F green_room
False

443
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

444
Input utterance: go in and then go to the green room
True LTL: F green_room
Output LTL: F & green_room
False

445
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

446
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

447
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

448
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

449
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

450
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

451
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

452
Input utterance: move to the middle of the green room
True LTL: F green_room
Output LTL: F green_room
True

453
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

454
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

455
Input utterance: go into the green room
True LTL: F green_room
Output LTL: F green_room
True

456
Input utterance: move to green room
True LTL: F green_room
Output LTL: F green_room
True

457
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

458
Input utterance: move until you are one square into the green room
True LTL: F green_room
Output LTL: F & green_room
False

459
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

460
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

461
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

462
Input utterance: leave this room and go into the green room
True LTL: F green_room
Output LTL: & X ! blue_room F green_room
False

463
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

464
Input utterance: move to the green room
True LTL: F green_room
Output LTL: F green_room
True

465
Input utterance: move to green room
True LTL: F green_room
Output LTL: F green_room
True

466
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

467
Input utterance: move to green room
True LTL: F green_room
Output LTL: F green_room
True

468
Input utterance: go into the green room
True LTL: F green_room
Output LTL: F green_room
True

469
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

470
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

471
Input utterance: exit room and go right to the green room
True LTL: F green_room
Output LTL: & X ! room F green_room
False

472
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

473
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

474
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

475
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

476
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

477
Input utterance: go into the green room
True LTL: F green_room
Output LTL: F green_room
True

478
Input utterance: go from the blue room to the red room then to the green room
True LTL: F green_room
Output LTL: F & blue_room F red_room F green_room
False

479
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

480
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

481
Input utterance: go to the green room
True LTL: F green_room
Output LTL: F green_room
True

482
Input utterance: move to yellow or red room them move to green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

483
Input utterance: the robot has to go through the red or yellow room to get to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

484
Input utterance: go through the yellow or red room and enter the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

485
Input utterance: go through the yellow or red room into the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

486
Input utterance: go thru the yellow or red box to get to the green box
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

487
Input utterance: go through either the red or the yellow room to get to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

488
Input utterance: get to the green room through red or yellow rooms only
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

489
Input utterance: move the robot through the yellow or red small room and then to the large green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

490
Input utterance: go through the yellow or red room to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

491
Input utterance: enter the yellow or red room and proceed to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

492
Input utterance: move to the green room by going through the yellow or red room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

493
Input utterance: move through the yellow or red room to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

494
Input utterance: go through the yellow or red room to the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

495
Input utterance: go through the yellow or red room to reach the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

496
Input utterance: only go through the red or yellow to get to the green
True LTL: F & | red_room yellow_room F green_room
Output LTL: & F green_room G ! | red_room yellow_room
False

497
Input utterance: go through yellow or red square to get to green square
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

498
Input utterance: go through the yellow or red room to reach the green room
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | yellow_room red_room F green_room
True

499
Input utterance: go through red or yellow to get to green
True LTL: F & | red_room yellow_room F green_room
Output LTL: F & | red_room yellow_room F green_room
True

500
Input utterance: move through the yellow or green room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

501
Input utterance: go green or yellow to blue
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

502
Input utterance: go green to blue or yellow to blue
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room blue_room yellow_room F blue_room
False

503
Input utterance: move through the green or yellow rooms and enter the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

504
Input utterance: go through the yellow or green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

505
Input utterance: go through the green or yellow room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

506
Input utterance: go to green or yellow room to blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

507
Input utterance: go through the yellow or green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

508
Input utterance: pass through the green or yellow room and enter into the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

509
Input utterance: move through the yellow or green room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

510
Input utterance: go through the green or yellow room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

511
Input utterance: up through the green or yellow box to reach the blue box
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

512
Input utterance: go to blue room through green or yellow room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

513
Input utterance: move toward either the yellow or green room then into the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

514
Input utterance: go through either the yellow or the green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

515
Input utterance: go through the green or yellow room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | green_room yellow_room F blue_room
True

516
Input utterance: move the robot to the small yellow or green room and then to the large blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

517
Input utterance: go through the yellow or green room to get to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & | yellow_room green_room F blue_room
True

518
Input utterance: took the yellow room to the blue room and the green room to the blue room
True LTL: F & | green_room yellow_room F blue_room
Output LTL: F & yellow_room F blue_room F green_room F blue_
False

519
Input utterance: while avoiding the red room follow the shortest path to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

520
Input utterance: go to the blue room but do not pass through the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

521
Input utterance: head to the blue rectangular room without passing through a red square room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

522
Input utterance: go into the blue room without going through the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

523
Input utterance: move to blue room but do not go through the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

524
Input utterance: go to the blue room but do not use the red room to get there
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

525
Input utterance: enter the blue room without crossing the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

526
Input utterance: avoid the red room and move to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

527
Input utterance: go through room that is not red to get to blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

528
Input utterance: go to blue but not through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

529
Input utterance: take a path to reach the blue colour place by not taking the route which is red and black
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

530
Input utterance: go through the opposite of the red room to reach the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & ! red_room F blue_room
False

531
Input utterance: go to blue but not through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

532
Input utterance: go to the blue room but do not use the red room to get there
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

533
Input utterance: go to the blue room without going through the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

534
Input utterance: the robot avoids the red to get to the blue
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

535
Input utterance: got to blue room without going through red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

536
Input utterance: go to blue room while avoiding red rooms
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

537
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

538
Input utterance: go to the blue but do not go through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

539
Input utterance: enter the blue room without going through the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

540
Input utterance: go to the blue room while avoiding the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

541
Input utterance: do not go through the red room towards the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & ! red_room F blue_room
False

542
Input utterance: avoiding the red rectangle travel to the blue area
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

543
Input utterance: move to the large blue room while avoiding the small red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

544
Input utterance: go to the blue room but do not pass through the red room on your way
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

545
Input utterance: never follow red path to reach blue room
True LTL: & F blue_room G ! red_room
Output LTL: G ! F red_room F blue_room
False

546
Input utterance: go to the blue area by avoiding red area
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

547
Input utterance: move to blue room not using red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

548
Input utterance: enter the blue room without entering a red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

549
Input utterance: go only through rooms that are not red to get to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

550
Input utterance: the robot avoids the red room in going towards the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

551
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

552
Input utterance: without stepping on red spaces move into the blue room then stop once you enter it
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

553
Input utterance: move to blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

554
Input utterance: go to the blue room but do not use the red room to get there
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

555
Input utterance: go through the room that is not red and enter the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & ! red_room F blue_room
False

556
Input utterance: enter blue room via the non red room
True LTL: & F blue_room G ! red_room
Output LTL: F & | blue_room green_room yellow_room F red_room
False

557
Input utterance: enter the blue room without entering a red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

558
Input utterance: move to the large blue room while avoiding the small red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

559
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

560
Input utterance: move to the blue room avoiding the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

561
Input utterance: go through the room which is not red to get to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

562
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

563
Input utterance: go to the blue room but avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

564
Input utterance: do not go through the red room towards the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

565
Input utterance: enter the blue room by any room that is not red
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

566
Input utterance: the robot avoids red to get to blue
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

567
Input utterance: enter the room that is not red which will lead to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

568
Input utterance: go to the blue room while not passing through the red room on the way
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

569
Input utterance: go only through rooms that are not red to get to the blue room
True LTL: & F blue_room G ! red_room
Output LTL: F & blue_room G ! red_room
False

570
Input utterance: go to blue but not through red
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

571
Input utterance: go to blue via green or yellow but not red
True LTL: & F blue_room G ! red_room
Output LTL: F & | green_room yellow_room F blue_room G ! red
False

572
Input utterance: to reach the blue room do not go through the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

573
Input utterance: avoid red rooms while going to the blue one
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

574
Input utterance: go to the blue area by avoiding red area
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

575
Input utterance: go towards the blue room and avoid the red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

576
Input utterance: move to the blue room without entering a red room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

577
Input utterance: avoid the red room and end at the blue rectangular room
True LTL: & F blue_room G ! red_room
Output LTL: & F blue_room G ! red_room
True

578
Input utterance: go through square that is not green to get the blue rectangular
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

579
Input utterance: go to blue but not through green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

580
Input utterance: go through the room that is not green to get to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & ! green_room F blue_room
False

581
Input utterance: go to the blue room but avoid the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

582
Input utterance: go to blue without going to green
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

583
Input utterance: enter the blue room without crossing the green one
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

584
Input utterance: enter the blue room without entering a green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

585
Input utterance: go to blue room avoiding green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

586
Input utterance: walk to the blue room while avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

587
Input utterance: walk through any room except the green room to enter the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & | red_room blue_room yellow_room F green_room
False

588
Input utterance: go to blue room without going to green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

589
Input utterance: go to the blue room but avoid using the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

590
Input utterance: do not take the green room to reach the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

591
Input utterance: go to the blue room while avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

592
Input utterance: reach blue room without going through green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

593
Input utterance: go to blue area by avoiding green area
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

594
Input utterance: get to the blue room by avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

595
Input utterance: enter the room that is not green and proceed through to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & ! green_room F blue_room
False

596
Input utterance: only go through rooms that are not green to get to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & | blue_room G ! green_room
False

597
Input utterance: go through the room that is not green and enter the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

598
Input utterance: drive through the room that is not green and enter the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

599
Input utterance: pass through any room that is not green to reach the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

600
Input utterance: do not go through the green room towards the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

601
Input utterance: avoid green go to blue
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

602
Input utterance: going through the red room or the yellow room straight to the blue room avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & | red_room yellow_room F blue_room G ! green
False

603
Input utterance: move to the blue room avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & ! green_room F blue_room
False

604
Input utterance: go to the blue area by avoiding green area
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

605
Input utterance: enter into the room that is not green and continue through that room into the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F ! green_room F blue_room
False

606
Input utterance: move to the blue room without entering a green room
True LTL: & F blue_room G ! green_room
Output LTL: F blue_room & ! green_room
False

607
Input utterance: go to the blue room but do not go through the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

608
Input utterance: go to blue but not through green
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

609
Input utterance: go through the room that is not green to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: F & ! green_room F blue_room
False

610
Input utterance: avoiding green navigate to blue
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

611
Input utterance: get to the blue area by avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

612
Input utterance: go to the blue room through the room that is not green
True LTL: & F blue_room G ! green_room
Output LTL: F & | blue_room ! green_room F
False

613
Input utterance: enter the room that isnt green then go to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & ! green_room F F blue_room
False

614
Input utterance: enter the blue room without entering a green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

615
Input utterance: travel to the blue room through the room that is not green
True LTL: & F blue_room G ! green_room
Output LTL: F & | blue_room ! green_room F green_room
False

616
Input utterance: go towards the blue room and avoid the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

617
Input utterance: go to the blue room without passing through the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

618
Input utterance: move to the blue room without using the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

619
Input utterance: do not enter the blue room through the green room but by the red room
True LTL: & F blue_room G ! green_room
Output LTL: & F red_room G ! green_room
False

620
Input utterance: go to the blue room and do not use the green room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

621
Input utterance: go to the blue room while avoiding the green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

622
Input utterance: entering any room that is not green will lead you to the blue room
True LTL: & F blue_room G ! green_room
Output LTL: & F blue_room G ! green_room
True

623
Input utterance: move to the large blue room while avoiding the small green room
True LTL: & F blue_room G ! green_room
Output LTL: F & blue_room G ! green_room
False

624
Input utterance: go to the green room but avoid the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

625
Input utterance: go to green without going through blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

626
Input utterance: enter the green room without passing the blue one
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

627
Input utterance: avoid the blue room and move to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

628
Input utterance: avoid the blue room to get to the green room
True LTL: & F green_room G ! blue_room
Output LTL: F & G ! blue_room F green_room
False

629
Input utterance: pass through the non blue room to reach the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

630
Input utterance: avoid the blue room when proceeding to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

631
Input utterance: go to the green room but avoid using the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

632
Input utterance: go to the green room but do not go through the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

633
Input utterance: enter the room that is not blue then go to the green room
True LTL: & F green_room G ! blue_room
Output LTL: F & ! blue_room F green_room
False

634
Input utterance: go through the room that is not blue to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

635
Input utterance: enter the green room without entering a blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

636
Input utterance: go to the red room or the yellow room and head straight away to the green room avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & | red_room yellow_room F green_room
False

637
Input utterance: go to green but not through blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

638
Input utterance: go to green room avoiding blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

639
Input utterance: do not go through the blue room towards the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

640
Input utterance: go to green area avoiding blue area
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

641
Input utterance: go to the green room while avoiding the blue room on the way
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

642
Input utterance: go to the green room but do not take the blue room to get there
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

643
Input utterance: avoiding blue navigate to green
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

644
Input utterance: only go through rooms that are not blue to get to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

645
Input utterance: walk through any room except the blue room to enter the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

646
Input utterance: move to the large green room while avoiding the small blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

647
Input utterance: drive through the room that is not blue and enter the green room on the other side
True LTL: & F green_room G ! blue_room
Output LTL: F & | red_room yellow_room F green_room
False

648
Input utterance: go through the room which is not blue to get to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

649
Input utterance: get to the green area by avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

650
Input utterance: go to green area by avoiding blue area
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

651
Input utterance: enter the room that is not blue and proceed through to the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

652
Input utterance: go into green room but avoid blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

653
Input utterance: go to the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

654
Input utterance: move to the green room without using the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

655
Input utterance: go to the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

656
Input utterance: avoid the blue room to reach the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

657
Input utterance: go to the green room without entering a blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

658
Input utterance: travel to the green room without going through the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

659
Input utterance: travel to the green room through the room that is not blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

660
Input utterance: go to the green room through the room that is not blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

661
Input utterance: enter any room that is not blue to end up in the green room
True LTL: & F green_room G ! blue_room
Output LTL: F & G ! blue_room F green_room
False

662
Input utterance: go into the green room but do not enter the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

663
Input utterance: go to the green room without passing through the blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

664
Input utterance: go through the room that is not blue and enter the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

665
Input utterance: avoid the blue room and continue to the green room
True LTL: & F green_room G ! blue_room
Output LTL: G ! blue_room F green_room
False

666
Input utterance: go to the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

667
Input utterance: move to the large green room while avoiding the small blue room
True LTL: & F green_room G ! blue_room
Output LTL: F & green_room G ! blue_room
False

668
Input utterance: go towards the green room while avoiding the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

669
Input utterance: pass through the non blue room to enter the green room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

670
Input utterance: go to the green room but do not enter the blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

671
Input utterance: go to the green room while avoiding the blue room on the way
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

672
Input utterance: go to green without going through blue
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

673
Input utterance: move to the green room without entering a blue room
True LTL: & F green_room G ! blue_room
Output LTL: & F green_room G ! blue_room
True

674
Input utterance: go to the green room through the red or blue room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

675
Input utterance: go to red or blue then green
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

676
Input utterance: avoid the yellow room and enter the green room through either the red or blue room
True LTL: F & | red_room blue_room F green_room
Output LTL: & F green_room G ! yellow_room & | red_room blue
False

677
Input utterance: go to the blue room or the red room and head straight away to the green room avoiding the yellow room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room G ! yellow
False

678
Input utterance: go to the green room either through the red room or through the blue room only
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

679
Input utterance: go through either a red or blue room to enter the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

680
Input utterance: go through the blue room or the red room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

681
Input utterance: go thru the blue or red box to get to the green box
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

682
Input utterance: pass through either the blue or red room to reach the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

683
Input utterance: move from the pink box into the green box by way of the blue or red box avoiding the yellow box
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

684
Input utterance: go through blue or red to get to green
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

685
Input utterance: go through the red or the blue room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

686
Input utterance: go through the red or blue room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

687
Input utterance: go to green rectangle thru blue or red square but not yellow
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room G ! yellow
False

688
Input utterance: the robot must move through the red or blue room to get to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

689
Input utterance: go through the blue or red room to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | blue_room red_room F green_room
True

690
Input utterance: enter the green room through either the red or or blue rooms
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

691
Input utterance: go through the red or blue room to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

692
Input utterance: go through the red or blue room to enter the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

693
Input utterance: enter the blue or red room and proceed until the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

694
Input utterance: move toward either the red or blue room then into the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

695
Input utterance: go through the red or blue room to the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

696
Input utterance: go through either the red or blue room to reach the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

697
Input utterance: take the red or blue room into the green room
True LTL: F & | red_room blue_room F green_room
Output LTL: F & | red_room blue_room F green_room
True

Language to LTL translation accuracy: 0.7865329512893983
