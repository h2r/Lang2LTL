message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to fedex office and then go to cvs\\nLTL:", "temperature": 0.6}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=717 request_id=6be47730b4a6ff68c155b3175bad2134 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind science library and then find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=905 request_id=5f34d2ee08cea3bf521e40d9d5eb3701 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to marston hall and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=cc6f5f3203907f3027f4234a30f40f54 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=337 request_id=1e682aa97acfd3324a1de147e801c4da response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to nelson fitness center and then go to starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1118 request_id=aa3c4bf55d343ffe54f75ca22ce9d406 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind bookstore and then find fedex office\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=2ba88ca0b66f10944e8a9fe14b1690d4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind chipotle and then find starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=f243d4148f9c0ecd2553be4f456fe884 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind kabob and curry and then find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=555 request_id=6e0d4f7226e828892869b44e853d0838 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to cvs and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=688 request_id=c324d2ef74e908d920434b6f829c43d8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nstay away from angell st and find barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=584 request_id=66521b3f715d3b8ec436c971fa36ebcb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=528 request_id=0f2c56148badd2379c11e249d75ba688 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind bookstore and then find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=372 request_id=21e62c25441c3b523de3b02d622560d9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to starbucks and then go to bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=796c113e7f91a7229fb189b9a63bc9a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind barus building and then find kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1037 request_id=6b31f791dd4d5c761d1b6f6c4d329704 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind citizens bank and then find cvs\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=f39d7790f00f302088cbd3d3927c6ae7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to watson center and then go to starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=499 request_id=ea588123c4834ac7e61e9a3c0ba1ef62 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind starbucks and then find watson center\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=115007486e1879bd2946fa7f81503f05 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind nelson fitness center and then find barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=765 request_id=c31dcd16c58f6fabf8e4ed60e5eac09b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to watson center and then go to barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1030 request_id=e935e52e4d87e1ae179fcdfbb72bf537 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind marston hall and then find cvs\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=579 request_id=644d711c53f76ea33080bdb45191c3eb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind chipotle and then find marston hall\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=889 request_id=e4545cca49d3b679ae66d0962ebaefa2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to kabob and curry and then go to watson center\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=775 request_id=8bfa90c13ad2d55989f16ca3d6d17d4d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nstay away from brook st and find kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=565 request_id=21e5c6ae89a8a4f917940eaee5ea46aa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to citizens bank and then go to marston hall\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1028 request_id=8cd06b9eae4a2a020cc0df07def11b8c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to nelson fitness center and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=735 request_id=c63f51d7fa692baa45e24e456b6dd061 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nstay away from brook st and find chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1032 request_id=fc76ef17a300b1c7e74bfff0d5568a47 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to fedex office and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=592 request_id=ccf391838e688b9287248353475ddf4f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ndo not enter brook st and find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=869 request_id=1f044d7441e68c7f703dbc3c05446e95 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind watson center and then find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=f9fbec80b5a22f9b6097fe5969964fec response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind science library and then find chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=600 request_id=53a5b1f232a8366eef3c45deb7673721 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=322 request_id=ad6b53a4662e3f8982c60160941c9332 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to cvs and then go to science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=cc1fc2ae03fc53835313565355de5539 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind science library and then find citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1002 request_id=b6f938db5bc2513c96f98ba9720f07ce response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to citizens bank and then go to nelson fitness center\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=613 request_id=7dc84675555124b1d72432232f0c8189 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nstay on angell st and find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=697 request_id=71a63c062ec660542be78ad5a858072e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ndo not enter angell st and find starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=602 request_id=63ee22bee2427fb6fed7fe8c2301c704 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to marston hall and then go to kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=893 request_id=c0ac1f623baada6d5455e1e874214f52 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=338 request_id=8b9cf8d31a519041a731f2f4edde6269 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to marston hall and then go to bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1055 request_id=2ddd0b7dc1d05e23ac9fbadd2ed529fa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=2bf60ee0b20f196a721487f55319a82d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind marston hall and then find fedex office\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=582 request_id=ff8630fce97523a28308d4b23fb31565 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to nelson fitness center and then go to kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=f01e8cd590d0c03f0d84f9479a47bb16 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nstay away from thayer st and find chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=553 request_id=c524c594baae184118d56238709a31ea response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nstay on thayer st and find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=818 request_id=27e8edf2e6e2aeea7978f62d6cff5d3e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ndo not leave thayer st and find cvs\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1600 request_id=9d023409bc1080eef1536db075990885 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to fedex office and then go to chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=670 request_id=d5d3b0893eeebbdd2c7cbafb575e9288 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind bookstore and then find kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=605 request_id=b8522da42b7c3ff77fd7e9075a969133 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ngo to chipotle and then go to kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=989 request_id=f038458dc012fe14c8877211aaf261c0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\nfind fedex office and then find marston hall\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1185 request_id=1af32bb7f50076f908c8581442cabb7f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [fedex_office, cvs, science_library, bookstore, marston_hall, citizens_bank, barus_building, nelson_fitness_center, starbucks, kabob_and_curry, angell_st, watson_center, chipotle, brook_st, thayer_st]\\nUtterance: \\ndo not leave thayer st and find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=567 request_id=7fd14331bd0ee73625d12ab0cf494005 response_code=200
Syntax error in output LTL: F chipotle F starbucks
Syntax error in output LTL: G ! angell_st F barus_building
Syntax error in output LTL: F citizens_bank F cvs
Syntax error in output LTL: F chipotle F marston_hall
Syntax error in output LTL: G ! brook_st F kabob_and_curry
Syntax error in output LTL: F watson_center F science_library
Syntax error in output LTL: G ! angell_st F starbucks
Syntax error in output LTL: F fedex_office F marston_hall
0
Input utterance: go to fedex office and then go to cvs
True LTL: F ( fedex_office & F ( cvs ) )
Output LTL: F & fedex_office F cvs
True

1
Input utterance: find science library and then find bookstore
True LTL: F ( science_library & F ( bookstore ) )
Output LTL: F & science_library F bookstore
True

2
Input utterance: go to marston hall and then go to citizens bank
True LTL: F ( marston_hall & F ( citizens_bank ) )
Output LTL: F & marston_hall F citizens_bank
True

3
Input utterance: go to barus building
True LTL: F ( barus_building )
Output LTL: F barus_building
True

4
Input utterance: go to nelson fitness center and then go to starbucks
True LTL: F ( nelson_fitness_center & F ( starbucks ) )
Output LTL: F & nelson_fitness_center F starbucks
True

5
Input utterance: find bookstore and then find fedex office
True LTL: F ( bookstore & F ( fedex_office ) )
Output LTL: F & bookstore F fedex_office
True

6
Input utterance: find chipotle and then find starbucks
True LTL: F ( chipotle & F ( starbucks ) )
Output LTL: F chipotle F starbucks
False

7
Input utterance: find kabob and curry and then find science library
True LTL: F ( kabob_and_curry & F ( science_library ) )
Output LTL: F & kabob_and_curry F science_library
True

8
Input utterance: go to cvs and then go to citizens bank
True LTL: F ( cvs & F ( citizens_bank ) )
Output LTL: F & cvs F citizens_bank
True

9
Input utterance: stay away from angell st and find barus building
True LTL: G ( ! angell_st ) & F ( barus_building )
Output LTL: G ! angell_st F barus_building
False

10
Input utterance: find kabob and curry
True LTL: F ( kabob_and_curry )
Output LTL: F kabob_and_curry
True

11
Input utterance: find bookstore and then find science library
True LTL: F ( bookstore & F ( science_library ) )
Output LTL: F & bookstore F science_library
True

12
Input utterance: go to starbucks and then go to bookstore
True LTL: F ( starbucks & F ( bookstore ) )
Output LTL: F & starbucks F bookstore
True

13
Input utterance: find barus building and then find kabob and curry
True LTL: F ( barus_building & F ( kabob_and_curry ) )
Output LTL: F & barus_building F kabob_and_curry
True

14
Input utterance: find citizens bank and then find cvs
True LTL: F ( citizens_bank & F ( cvs ) )
Output LTL: F citizens_bank F cvs
False

15
Input utterance: go to watson center and then go to starbucks
True LTL: F ( watson_center & F ( starbucks ) )
Output LTL: F & watson_center F starbucks
True

16
Input utterance: find starbucks and then find watson center
True LTL: F ( starbucks & F ( watson_center ) )
Output LTL: F & starbucks F watson_center
True

17
Input utterance: find nelson fitness center and then find barus building
True LTL: F ( nelson_fitness_center & F ( barus_building ) )
Output LTL: F & nelson_fitness_center F barus_building
True

18
Input utterance: go to watson center and then go to barus building
True LTL: F ( watson_center & F ( barus_building ) )
Output LTL: F & watson_center F barus_building
True

19
Input utterance: find marston hall and then find cvs
True LTL: F ( marston_hall & F ( cvs ) )
Output LTL: F & marston_hall F cvs
True

20
Input utterance: find chipotle and then find marston hall
True LTL: F ( chipotle & F ( marston_hall ) )
Output LTL: F chipotle F marston_hall
False

21
Input utterance: go to kabob and curry and then go to watson center
True LTL: F ( kabob_and_curry & F ( watson_center ) )
Output LTL: F & kabob_and_curry F watson_center
True

22
Input utterance: stay away from brook st and find kabob and curry
True LTL: G ( ! brook_st ) & F ( kabob_and_curry )
Output LTL: G ! brook_st F kabob_and_curry
False

23
Input utterance: go to citizens bank and then go to marston hall
True LTL: F ( citizens_bank & F ( marston_hall ) )
Output LTL: F & citizens_bank F marston_hall
True

24
Input utterance: go to nelson fitness center and then go to citizens bank
True LTL: F ( nelson_fitness_center & F ( citizens_bank ) )
Output LTL: F & nelson_fitness_center F citizens_bank
True

25
Input utterance: stay away from brook st and find chipotle
True LTL: G ( ! brook_st ) & F ( chipotle )
Output LTL: & G ! brook_st F chipotle
True

26
Input utterance: go to fedex office and then go to citizens bank
True LTL: F ( fedex_office & F ( citizens_bank ) )
Output LTL: F & fedex_office F citizens_bank
True

27
Input utterance: do not enter brook st and find bookstore
True LTL: G ( ! brook_st ) & F ( bookstore )
Output LTL: G ! brook_st & F bookstore
True

28
Input utterance: find watson center and then find science library
True LTL: F ( watson_center & F ( science_library ) )
Output LTL: F watson_center F science_library
False

29
Input utterance: find science library and then find chipotle
True LTL: F ( science_library & F ( chipotle ) )
Output LTL: F & science_library F chipotle
True

30
Input utterance: find barus building
True LTL: F ( barus_building )
Output LTL: F barus_building
True

31
Input utterance: go to cvs and then go to science library
True LTL: F ( cvs & F ( science_library ) )
Output LTL: F & cvs F science_library
True

32
Input utterance: find science library and then find citizens bank
True LTL: F ( science_library & F ( citizens_bank ) )
Output LTL: F & science_library F citizens_bank
True

33
Input utterance: go to citizens bank and then go to nelson fitness center
True LTL: F ( citizens_bank & F ( nelson_fitness_center ) )
Output LTL: F & citizens_bank F nelson_fitness_center
True

34
Input utterance: stay on angell st and find bookstore
True LTL: G ( angell_st  ) & F ( bookstore )
Output LTL: F & angell_st F bookstore
False

35
Input utterance: do not enter angell st and find starbucks
True LTL: G ( ! angell_st ) & F ( starbucks )
Output LTL: G ! angell_st F starbucks
False

36
Input utterance: go to marston hall and then go to kabob and curry
True LTL: F ( marston_hall & F ( kabob_and_curry ) )
Output LTL: F & marston_hall F kabob_and_curry
True

37
Input utterance: go to science library
True LTL: F ( science_library )
Output LTL: F science_library
True

38
Input utterance: go to marston hall and then go to bookstore
True LTL: F ( marston_hall & F ( bookstore ) )
Output LTL: F & marston_hall F bookstore
True

39
Input utterance: find science library
True LTL: F ( science_library )
Output LTL: F science_library
True

40
Input utterance: find marston hall and then find fedex office
True LTL: F ( marston_hall & F ( fedex_office ) )
Output LTL: F & marston_hall F fedex_office
True

41
Input utterance: go to nelson fitness center and then go to kabob and curry
True LTL: F ( nelson_fitness_center & F ( kabob_and_curry ) )
Output LTL: F & nelson_fitness_center F kabob_and_
False

42
Input utterance: stay away from thayer st and find chipotle
True LTL: G ( ! thayer_st ) & F ( chipotle )
Output LTL: & G ! thayer_st F chipotle
True

43
Input utterance: stay on thayer st and find bookstore
True LTL: G ( thayer_st ) & F ( bookstore )
Output LTL: & F bookstore G thayer_st
True

44
Input utterance: do not leave thayer st and find cvs
True LTL: G ( thayer_st ) & F ( cvs )
Output LTL: & G ! thayer_st F cvs
False

45
Input utterance: go to fedex office and then go to chipotle
True LTL: F ( fedex_office & F ( chipotle ) )
Output LTL: F & fedex_office F chipotle
True

46
Input utterance: find bookstore and then find kabob and curry
True LTL: F ( bookstore & F ( kabob_and_curry ) )
Output LTL: F & bookstore F kabob_and_curry
True

47
Input utterance: go to chipotle and then go to kabob and curry
True LTL: F ( chipotle & F ( kabob_and_curry ) )
Output LTL: F & chipotle F kabob_and_curry
True

48
Input utterance: find fedex office and then find marston hall
True LTL: F ( fedex_office & F ( marston_hall ) )
Output LTL: F fedex_office F marston_hall
False

49
Input utterance: do not leave thayer st and find science library
True LTL: G ( thayer_st ) & F ( science_library )
Output LTL: & G ! thayer_st F science_library
False

Language to LTL translation accuracy: 0.76
