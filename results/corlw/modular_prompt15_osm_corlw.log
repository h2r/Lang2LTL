Extracting name entities from utterance: 0
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to fedex office and then go to cvs\\nLandmarks:", "temperature": 0.6}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=654 request_id=f223f8064c15323e07f548e3a64cb51f response_code=200
Extracting name entities from utterance: 1
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind science library and then find bookstore\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=387 request_id=cf976116788b20a2e9be6757dee711d9 response_code=200
Extracting name entities from utterance: 2
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to marston hall and then go to citizens bank\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=729 request_id=1f7a9ca58406f3ffe88d6b32c587f961 response_code=200
Extracting name entities from utterance: 3
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to barus building\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=346 request_id=346b4abfbb1f1debde527978175a5572 response_code=200
Extracting name entities from utterance: 4
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to nelson fitness center and then go to starbucks\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=823 request_id=3fd1ea12f4dd56219c9afe36e3d32409 response_code=200
Extracting name entities from utterance: 5
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind bookstore and then find fedex office\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=d75d1a63b8410ae31a7c8b6223ab09d6 response_code=200
Extracting name entities from utterance: 6
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind chipotle and then find starbucks\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=907 request_id=85f37e4d3b422b7721b0ac0f7f763595 response_code=200
Extracting name entities from utterance: 7
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind kabob and curry and then find science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1151 request_id=a236adc7f42efc6207a0f074fb619371 response_code=200
Extracting name entities from utterance: 8
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to cvs and then go to citizens bank\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1095 request_id=ed3eb8ab88f188adc77e74c412b484e6 response_code=200
Extracting name entities from utterance: 9
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nstay away from angell st and find barus building\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=747 request_id=bb0c099f557b75778b407fe1c0225b23 response_code=200
Extracting name entities from utterance: 10
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=375 request_id=90bdbf3e0ec4753cda86c027ba3866b0 response_code=200
Extracting name entities from utterance: 11
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind bookstore and then find science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=5792977fca565bd12ef53c6f9d3964f5 response_code=200
Extracting name entities from utterance: 12
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to starbucks and then go to bookstore\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=395 request_id=15fe82de7b23554a942516de0bff3928 response_code=200
Extracting name entities from utterance: 13
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind barus building and then find kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=589 request_id=ee7dc5b211b21547c75c837a24cad177 response_code=200
Extracting name entities from utterance: 14
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind citizens bank and then find cvs\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=377 request_id=e91e3add98be959c91ff388378c2814a response_code=200
Extracting name entities from utterance: 15
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to watson center and then go to starbucks\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=841 request_id=80044deb67cb02445dbb5ea6b072a76b response_code=200
Extracting name entities from utterance: 16
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind starbucks and then find watson center\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=355 request_id=7cabbe0ae01639414b7a0f044f0bf9a5 response_code=200
Extracting name entities from utterance: 17
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind nelson fitness center and then find barus building\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=662 request_id=9a62b1a201eff0c4adf8f3ea1119f163 response_code=200
Extracting name entities from utterance: 18
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to watson center and then go to barus building\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1047 request_id=3b241dab7474f74a842f95eba8b5477c response_code=200
Extracting name entities from utterance: 19
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind marston hall and then find cvs\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=792 request_id=2a5ee6d343d29f1fc2d66da1712680ac response_code=200
Extracting name entities from utterance: 20
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind chipotle and then find marston hall\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=746 request_id=83a1cd4b2a9f97145291a3d023f13a60 response_code=200
Extracting name entities from utterance: 21
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to kabob and curry and then go to watson center\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=385a53adfb1ad885e90af4fc0c685136 response_code=200
Extracting name entities from utterance: 22
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nstay away from brook st and find kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=749 request_id=b9b5fb4de139428ba85ac7c7cad2552f response_code=200
Extracting name entities from utterance: 23
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to citizens bank and then go to marston hall\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=490 request_id=28d5833ea3802bfa077327b2b1b24120 response_code=200
Extracting name entities from utterance: 24
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to nelson fitness center and then go to citizens bank\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=464 request_id=743757fbb9097fc96ebe2372e7ca4a9f response_code=200
Extracting name entities from utterance: 25
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nstay away from brook st and find chipotle\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=448 request_id=634d3459d5ff3dd894b678f71a31942c response_code=200
Extracting name entities from utterance: 26
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to fedex office and then go to citizens bank\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=946 request_id=85b489f6464ed51ed53b49208cf26f48 response_code=200
Extracting name entities from utterance: 27
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not enter brook st and find bookstore\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=679 request_id=e7985d635edf2cb92133605bfded14ff response_code=200
Extracting name entities from utterance: 28
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind watson center and then find science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=463 request_id=9f01edda6c59c54d71f3fa159ce8681e response_code=200
Extracting name entities from utterance: 29
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind science library and then find chipotle\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=3088 request_id=9688002402d575e656aba534d411152d response_code=200
Extracting name entities from utterance: 30
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind barus building\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=806 request_id=7273520dbf6c099d678a439e998aadc9 response_code=200
Extracting name entities from utterance: 31
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to cvs and then go to science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=427 request_id=4cf608607251f8a28a433727640523d4 response_code=200
Extracting name entities from utterance: 32
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind science library and then find citizens bank\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=383 request_id=b7581828bd802d97ea147ccbbf666457 response_code=200
Extracting name entities from utterance: 33
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to citizens bank and then go to nelson fitness center\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=904 request_id=91f7b6f212a1d9543f722c70ef173be2 response_code=200
Extracting name entities from utterance: 34
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nstay on angell st and find bookstore\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=e318e432cd55adfeddd913fcab51da7b response_code=200
Extracting name entities from utterance: 35
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not enter angell st and find starbucks\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=506 request_id=285abe7ee749adc023fedc73c3d0a128 response_code=200
Extracting name entities from utterance: 36
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to marston hall and then go to kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1613 request_id=90ad902e0b33706fbd94f992bf5dfcd8 response_code=200
Extracting name entities from utterance: 37
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=75ded6b3008e698f46eb886a87dc4509 response_code=200
Extracting name entities from utterance: 38
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to marston hall and then go to bookstore\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=6b0bca440fbc8d4dd88c009dc3d4cdff response_code=200
Extracting name entities from utterance: 39
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=749c9e7f9819dab4fa97237613725719 response_code=200
Extracting name entities from utterance: 40
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind marston hall and then find fedex office\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=83d667b5fb1293a61150087bdf83b7cc response_code=200
Extracting name entities from utterance: 41
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to nelson fitness center and then go to kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1423 request_id=e89bbf4e9dcaf41d873050e095f38008 response_code=200
Extracting name entities from utterance: 42
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nstay away from thayer st and find chipotle\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=548 request_id=e80c333766b590c59325912e3ecd36cb response_code=200
Extracting name entities from utterance: 43
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nstay on thayer st and find bookstore\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=d859dfc4b0a0c799b48118cac4fc6503 response_code=200
Extracting name entities from utterance: 44
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not leave thayer st and find cvs\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=502 request_id=c3158a5369a0bbf81591a3470b011e66 response_code=200
Extracting name entities from utterance: 45
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to fedex office and then go to chipotle\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1011 request_id=15667197f8e30e29a304c5c90f329446 response_code=200
Extracting name entities from utterance: 46
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind bookstore and then find kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=742 request_id=d958d147f82f96d6e52d55b518d20faa response_code=200
Extracting name entities from utterance: 47
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ngo to chipotle and then go to kabob and curry\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=747 request_id=61e28f8a56288daa980a75e025e267ac response_code=200
Extracting name entities from utterance: 48
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\nfind fedex office and then find marston hall\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1493 request_id=9ccdccd7cb06dc0d7acc79b6cf15ce93 response_code=200
Extracting name entities from utterance: 49
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to repeat exact strings from the given utterances which possibly refer to certain landmarks.\\n\\nUtterance: move to the red room\\nLandmarks: the red room\\n\\nUtterance: go into the red one\\nLandmarks: the red one\\n\\nUtterance: go into yellow room and then go into the large green room\\nLandmarks: yellow room | the large green room\\n\\nUtterance: enter the red then enter the green rectangular room\\nLandmarks: the red | the green rectangular room\\n\\nUtterance: go into the blue room and enter the green room\\nLandmarks: the blue room | the green room\\n\\nUtterance: go to the green area but avoid going through the yellow area\\nLandmarks: the green area | the yellow area\\n\\nUtterance: take a path to reach the blue box but avoid the red path\\nLandmarks: the blue box | the red path\\n\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLandmarks: the green rectangle | the yellow square\\n\\nUtterance: avoid green go to blue\\nLandmarks: green | blue\\n\\nUtterance: only go through rooms that are not blue to get to the green room\\nLandmarks: blue | the green room\\n\\nUtterance: go to red or blue then green\\nLandmarks: red | blue | green\\n\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLandmarks: the yellow | small red room | the large green room\\n\\nUtterance: move through the yellow or green room to the blue room\\nLandmarks: the yellow | green room | the blue room\\n\\nUtterance: go to the green room via the red or blue room\\nLandmarks: the green room | the red | blue room\\n\\nUtterance: go through the red room or blue room to the green room\\nLandmarks: the red room | blue room | the green room\\n\\nUtterance: \\ndo not leave thayer st and find science library\\nLandmarks:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=433 request_id=bd5bf1f7d0a6818a5a3f4a40bf944da6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the nelson fitness center"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=62 request_id=ad5840a760f9c3891604f07ac9d52b1a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the brook st"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=59 request_id=a1eb61b134f5df9b407695add39a15bf response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the marston hall"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=55 request_id=477dff11fa1ca337626e0793c5fc7424 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the watson center"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=54 request_id=eec4326d045d1eda9d707cac306fcbc2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the kabob and curry"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=57 request_id=3d2696e6bd087513798581520a0f4775 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the citizens bank"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=52 request_id=c7a6869b40b4143d2a37b66246c164e0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the angell st"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=57 request_id=8c46b220cf551a853b05432a77e21050 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the barus building"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=61 request_id=6ea81a5b86348eb6d71b8286d62a0a06 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the starbucks"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=56 request_id=c3f0f4906f1d301e0c19a4c89e84cba4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the thayer st"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=65 request_id=ced879715c85a08bfa544843ca33de98 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["the chipotle"], "model": "text-similarity-davinci-001", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 65763
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=55 request_id=cd4d6f7c6bcccdd02c46820ca01deb04 response_code=200
Name entity the fedex office not found in input string: go to fedex office and then go to cvs
Name entity the cvs not found in input string: go to fedex office and then go to cvs
Name entity the science library not found in input string: find science library and then find bookstore
Name entity the bookstore not found in input string: find science library and then find bookstore
Name entity the citizens bank not found in input string: go to marston hall and then go to citizens bank
Name entity the marston hall not found in input string: go to marston hall and then go to citizens bank
Name entity the barus building not found in input string: go to barus building
Name entity the nelson fitness center not found in input string: go to nelson fitness center and then go to starbucks
Name entity the starbucks not found in input string: go to nelson fitness center and then go to starbucks
Name entity the fedex office not found in input string: find bookstore and then find fedex office
Name entity the bookstore not found in input string: find bookstore and then find fedex office
Name entity the starbucks not found in input string: find chipotle and then find starbucks
Name entity the chipotle not found in input string: find chipotle and then find starbucks
Name entity the kabob and curry not found in input string: find kabob and curry and then find science library
Name entity the science library not found in input string: find kabob and curry and then find science library
Name entity the citizens bank not found in input string: go to cvs and then go to citizens bank
Name entity the cvs not found in input string: go to cvs and then go to citizens bank
Name entity the barus building not found in input string: stay away from angell st and find barus building
Name entity the angell st not found in input string: stay away from angell st and find barus building
Name entity the kabob and curry not found in input string: find kabob and curry
Name entity the science library not found in input string: find bookstore and then find science library
Name entity the bookstore not found in input string: find bookstore and then find science library
Name entity the starbucks not found in input string: go to starbucks and then go to bookstore
Name entity the bookstore not found in input string: go to starbucks and then go to bookstore
Name entity the kabob and curry not found in input string: find barus building and then find kabob and curry
Name entity the barus building not found in input string: find barus building and then find kabob and curry
Name entity the citizens bank not found in input string: find citizens bank and then find cvs
Name entity the cvs not found in input string: find citizens bank and then find cvs
Name entity the watson center not found in input string: go to watson center and then go to starbucks
Name entity the starbucks not found in input string: go to watson center and then go to starbucks
Name entity the watson center not found in input string: find starbucks and then find watson center
Name entity the starbucks not found in input string: find starbucks and then find watson center
Name entity the nelson fitness center not found in input string: find nelson fitness center and then find barus building
Name entity the barus building not found in input string: find nelson fitness center and then find barus building
Name entity the barus building not found in input string: go to watson center and then go to barus building
Name entity the watson center not found in input string: go to watson center and then go to barus building
Name entity the marston hall not found in input string: find marston hall and then find cvs
Name entity the cvs not found in input string: find marston hall and then find cvs
Name entity the marston hall not found in input string: find chipotle and then find marston hall
Name entity the chipotle not found in input string: find chipotle and then find marston hall
Name entity the kabob and curry not found in input string: go to kabob and curry and then go to watson center
Name entity the watson center not found in input string: go to kabob and curry and then go to watson center
Name entity the kabob and curry not found in input string: stay away from brook st and find kabob and curry
Name entity the brook st not found in input string: stay away from brook st and find kabob and curry
Name entity the citizens bank not found in input string: go to citizens bank and then go to marston hall
Name entity the marston hall not found in input string: go to citizens bank and then go to marston hall
Name entity the nelson fitness center not found in input string: go to nelson fitness center and then go to citizens bank
Name entity the citizens bank not found in input string: go to nelson fitness center and then go to citizens bank
Name entity the brook st not found in input string: stay away from brook st and find chipotle
Name entity the chipotle not found in input string: stay away from brook st and find chipotle
Name entity the citizens bank not found in input string: go to fedex office and then go to citizens bank
Name entity the fedex office not found in input string: go to fedex office and then go to citizens bank
Name entity the bookstore not found in input string: do not enter brook st and find bookstore
Name entity the brook st not found in input string: do not enter brook st and find bookstore
Name entity the science library not found in input string: find watson center and then find science library
Name entity the watson center not found in input string: find watson center and then find science library
Name entity the science library not found in input string: find science library and then find chipotle
Name entity the chipotle not found in input string: find science library and then find chipotle
Name entity the barus building not found in input string: find barus building
Name entity the science library not found in input string: go to cvs and then go to science library
Name entity the cvs not found in input string: go to cvs and then go to science library
Name entity the science library not found in input string: find science library and then find citizens bank
Name entity the citizens bank not found in input string: find science library and then find citizens bank
Name entity the nelson fitness center not found in input string: go to citizens bank and then go to nelson fitness center
Name entity the citizens bank not found in input string: go to citizens bank and then go to nelson fitness center
Name entity the angell st not found in input string: stay on angell st and find bookstore
Name entity the bookstore not found in input string: stay on angell st and find bookstore
Name entity the angell st not found in input string: do not enter angell st and find starbucks
Name entity the starbucks not found in input string: do not enter angell st and find starbucks
Name entity the kabob and curry not found in input string: go to marston hall and then go to kabob and curry
Name entity the marston hall not found in input string: go to marston hall and then go to kabob and curry
Name entity the science library not found in input string: go to science library
Name entity the marston hall not found in input string: go to marston hall and then go to bookstore
Name entity the bookstore not found in input string: go to marston hall and then go to bookstore
Name entity the science library not found in input string: find science library
Name entity the marston hall not found in input string: find marston hall and then find fedex office
Name entity the fedex office not found in input string: find marston hall and then find fedex office
Name entity the nelson fitness center not found in input string: go to nelson fitness center and then go to kabob and curry
Name entity the kabob and curry not found in input string: go to nelson fitness center and then go to kabob and curry
Name entity the thayer st not found in input string: stay away from thayer st and find chipotle
Name entity the chipotle not found in input string: stay away from thayer st and find chipotle
Name entity the bookstore not found in input string: stay on thayer st and find bookstore
Name entity the thayer st not found in input string: stay on thayer st and find bookstore
Name entity the thayer st not found in input string: do not leave thayer st and find cvs
Name entity the cvs not found in input string: do not leave thayer st and find cvs
Name entity the fedex office not found in input string: go to fedex office and then go to chipotle
Name entity the chipotle not found in input string: go to fedex office and then go to chipotle
Name entity the kabob and curry not found in input string: find bookstore and then find kabob and curry
Name entity the bookstore not found in input string: find bookstore and then find kabob and curry
Name entity the kabob and curry not found in input string: go to chipotle and then go to kabob and curry
Name entity the chipotle not found in input string: go to chipotle and then go to kabob and curry
Name entity the fedex office not found in input string: find fedex office and then find marston hall
Name entity the marston hall not found in input string: find fedex office and then find marston hall
Name entity the science library not found in input string: do not leave thayer st and find science library
Name entity the thayer st not found in input string: do not leave thayer st and find science library
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1845 request_id=80fd4ae3a904546b1d9267168423f5f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A and then find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=8c05e57f0e145c6f480c135fa5846f11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=9b484cc886edd364a31b7ce33f394a9c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=5769733bfe7bb172183aa1dc45c69e0e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=511113a61eeb3fa55f080de7ab4c799b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=4d155179aab8d34ac62f7ee9e55a8f2e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=ff7f3ced5747fe95262a86035446d5f7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A and then find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=4c9518a2ba00248f9d67b7ef7b942033 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=4499045837a10100bb382a01ee70821a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nstay away from A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=5aeb6fe6fa930278a101eeb6716ac3d5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=d9d2ca28b6b5b72c1ecea9f713f8a5ab response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=756 request_id=2f6f55beff12027e1d98e0746b957a10 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=412 request_id=a9ec28af7d553625ba3dcc2236127d93 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=386 request_id=cc413c48c319e2ae1ab6095983664ae9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=454 request_id=c510e4085eb45221b76d0e454e532c3b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=461 request_id=15995a71eb79809f0439f66d116ee8d3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A and then find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=30139f41b9dd8b5f325563b6983d19fd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=0333df8a42acf5ff4f2090e945d3bfa6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=591 request_id=3403628a77e70340abdf34e4b2395282 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=42e7eeae056b5213dfd847ac16db193c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=442 request_id=8a9d5c222ee22d0ad9406e33b1bf13a2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=365 request_id=05d98a7b456eea171b833c8da98664f5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nstay away from B and find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=605 request_id=378c19078ea9a29c73b7e24f2d259fa0 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=421 request_id=74b603d17e308c060eb4c9797acc2339 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=334 request_id=c8a53255a72070aaf854c3679ab234a3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nstay away from B and find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=335 request_id=920380185af8552ccb857ea4dd743b75 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=333 request_id=5c260b04f1ff030b89865253af936ab6 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not enter A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=3515606ee2b7dccdb8a849477a83497f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=824 request_id=563c73c75da03df4cf48644619110818 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A and then find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=4034f31a0f0a2df565041e884ef8997d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=fbb45630487b5b5fe5d3c10aec50d9f4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=357 request_id=92ed03dc7bc40d4a5d1ca36b7ee9553a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A and then find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=379 request_id=92ff690c83f2bb237345295741e4e6fa response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=460 request_id=2149ce8c54ecd348ff39d9bde9311370 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nstay on A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=341 request_id=ad97d82a902cdd3edc1746f301c4c733 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not enter A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=363 request_id=fdc583e1bc23fa9c6fba0d37eae43b2c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=b038f50b547eb01a85703b9d3b8b3d47 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=400 request_id=5117bac4a98d19a7793aa47ca2642a9d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=493 request_id=48b6ab48d203ff8c2ee733c794ccaf78 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A\\nLTL:", "temperature": 0.6}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=409 request_id=0c930964b2d0596dcb8fc0d168cf2f84 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=320 request_id=1c5ff698aba645406ac373f48484017d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=625 request_id=b703006a839b36bf0c01701eca1a296e response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nstay away from A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=2ee07d658c677f8b46a6942942345933 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nstay on A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=625 request_id=fe28fc46eb4738b9b507783c25c50772 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not leave B and find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=433 request_id=4eaac7fd506fd65d2c848065bd3eae11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to A and then go to B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=482 request_id=ef478b604c88f1b0e6fbcf9d44d75b6b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind B and then find A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=592 request_id=fb5e5df28d5fbe4e23335211ec59db52 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ngo to B and then go to A\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=0e8cbdcffccc36e3be23913dc68e11a1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\nfind A and then find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=92f347887e41a38de96fa43a9ca8c0d7 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to translate English utterances into linear temporal logic (LTL) formulas.\\n\\nUtterance: move to A\\nLTL: F A\\n\\nUtterance: go into A\\nLTL: F A\\n\\nUtterance: go to A then B\\nLTL: F & A F B\\n\\nUtterance: enter A before enter B\\nLTL: F & A F B\\n\\nUtterance: go into A after enter B\\nLTL: F & B F A\\n\\nUtterance: move to B go to A\\nLTL: F & B F A\\n\\nUtterance: go to A but avoid going through B\\nLTL: & F A G ! B\\n\\nUtterance: take a path to reach A but avoid B\\nLTL: & F A G ! B\\n\\nUtterance: get to A but do not go through B\\nLTL: & F A G ! B\\n\\nUtterance: avoid A go to B\\nLTL: & F B G ! A\\n\\nUtterance: only go through rooms that are not A to get to B\\nLTL: & F B G ! A\\n\\nUtterance: go to A or B then C\\nLTL: F & | A B F C\\n\\nUtterance: move the robot through A or B and then to C\\nLTL: F & | A B F C\\n\\nUtterance: move through A or B to C\\nLTL: F & | A B F C\\n\\nUtterance: go to A via B or C\\nLTL: F & | B C F A\\n\\nUtterance: go through A or B into C\\nLTL: F & | A B F C\\n\\nUtterance: \\ndo not leave A and find B\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=397 request_id=ab8586873536fe6d968335cc55cdbcff response_code=200
Syntax error in output LTL: G ! angell_st F barus_building
Syntax error in output LTL: F starbucks F watson_center
Syntax error in output LTL: F citizens_bank F marston_hall
Syntax error in output LTL: F science_library F chipotle
Syntax error in output LTL: F cvs F science_library
Syntax error in output LTL: F marston_hall F bookstore
0
Input utterance: go to fedex office and then go to cvs
True LTL: F ( fedex_office & F ( cvs ) )
Output LTL: F & fedex_office F cvs
True

1
Input utterance: find science library and then find bookstore
True LTL: F ( science_library & F ( bookstore ) )
Output LTL: F & science_library F bookstore
True

2
Input utterance: go to marston hall and then go to citizens bank
True LTL: F ( marston_hall & F ( citizens_bank ) )
Output LTL: F & marston_hall F citizens_bank
True

3
Input utterance: go to barus building
True LTL: F ( barus_building )
Output LTL: F barus_building
True

4
Input utterance: go to nelson fitness center and then go to starbucks
True LTL: F ( nelson_fitness_center & F ( starbucks ) )
Output LTL: F & nelson_fitness_center F starbucks
True

5
Input utterance: find bookstore and then find fedex office
True LTL: F ( bookstore & F ( fedex_office ) )
Output LTL: & F bookstore G F fedex_office
False

6
Input utterance: find chipotle and then find starbucks
True LTL: F ( chipotle & F ( starbucks ) )
Output LTL: F & chipotle F starbucks
True

7
Input utterance: find kabob and curry and then find science library
True LTL: F ( kabob_and_curry & F ( science_library ) )
Output LTL: F & kabob_and_curry F science_library
True

8
Input utterance: go to cvs and then go to citizens bank
True LTL: F ( cvs & F ( citizens_bank ) )
Output LTL: F & cvs F citizens_bank
True

9
Input utterance: stay away from angell st and find barus building
True LTL: G ( ! angell_st ) & F ( barus_building )
Output LTL: G ! angell_st F barus_building
False

10
Input utterance: find kabob and curry
True LTL: F ( kabob_and_curry )
Output LTL: F kabob_and_curry
True

11
Input utterance: find bookstore and then find science library
True LTL: F ( bookstore & F ( science_library ) )
Output LTL: F & bookstore F science_library
True

12
Input utterance: go to starbucks and then go to bookstore
True LTL: F ( starbucks & F ( bookstore ) )
Output LTL: F & starbucks F bookstore
True

13
Input utterance: find barus building and then find kabob and curry
True LTL: F ( barus_building & F ( kabob_and_curry ) )
Output LTL: F & barus_building F kabob_and_curry
True

14
Input utterance: find citizens bank and then find cvs
True LTL: F ( citizens_bank & F ( cvs ) )
Output LTL: F & citizens_bank F cvs
True

15
Input utterance: go to watson center and then go to starbucks
True LTL: F ( watson_center & F ( starbucks ) )
Output LTL: F & watson_center F starbucks
True

16
Input utterance: find starbucks and then find watson center
True LTL: F ( starbucks & F ( watson_center ) )
Output LTL: F starbucks F watson_center
False

17
Input utterance: find nelson fitness center and then find barus building
True LTL: F ( nelson_fitness_center & F ( barus_building ) )
Output LTL: & F nelson_fitness_center G F barus_building
False

18
Input utterance: go to watson center and then go to barus building
True LTL: F ( watson_center & F ( barus_building ) )
Output LTL: F & watson_center F barus_building
True

19
Input utterance: find marston hall and then find cvs
True LTL: F ( marston_hall & F ( cvs ) )
Output LTL: F & marston_hall F cvs
True

20
Input utterance: find chipotle and then find marston hall
True LTL: F ( chipotle & F ( marston_hall ) )
Output LTL: F & chipotle F marston_hall
True

21
Input utterance: go to kabob and curry and then go to watson center
True LTL: F ( kabob_and_curry & F ( watson_center ) )
Output LTL: F & kabob_and_curry F watson_center
True

22
Input utterance: stay away from brook st and find kabob and curry
True LTL: G ( ! brook_st ) & F ( kabob_and_curry )
Output LTL: & F kabob_and_curry G ! brook_st
True

23
Input utterance: go to citizens bank and then go to marston hall
True LTL: F ( citizens_bank & F ( marston_hall ) )
Output LTL: F citizens_bank F marston_hall
False

24
Input utterance: go to nelson fitness center and then go to citizens bank
True LTL: F ( nelson_fitness_center & F ( citizens_bank ) )
Output LTL: F & nelson_fitness_center F citizens_bank
True

25
Input utterance: stay away from brook st and find chipotle
True LTL: G ( ! brook_st ) & F ( chipotle )
Output LTL: & G ! brook_st F chipotle
True

26
Input utterance: go to fedex office and then go to citizens bank
True LTL: F ( fedex_office & F ( citizens_bank ) )
Output LTL: F & fedex_office F citizens_bank
True

27
Input utterance: do not enter brook st and find bookstore
True LTL: G ( ! brook_st ) & F ( bookstore )
Output LTL: & G ! brook_st F bookstore
True

28
Input utterance: find watson center and then find science library
True LTL: F ( watson_center & F ( science_library ) )
Output LTL: & F watson_center G F science_library
False

29
Input utterance: find science library and then find chipotle
True LTL: F ( science_library & F ( chipotle ) )
Output LTL: F science_library F chipotle
False

30
Input utterance: find barus building
True LTL: F ( barus_building )
Output LTL: G barus_building
False

31
Input utterance: go to cvs and then go to science library
True LTL: F ( cvs & F ( science_library ) )
Output LTL: F cvs F science_library
False

32
Input utterance: find science library and then find citizens bank
True LTL: F ( science_library & F ( citizens_bank ) )
Output LTL: & F science_library F citizens_bank
False

33
Input utterance: go to citizens bank and then go to nelson fitness center
True LTL: F ( citizens_bank & F ( nelson_fitness_center ) )
Output LTL: F & citizens_bank F nelson_fitness_center
True

34
Input utterance: stay on angell st and find bookstore
True LTL: G ( angell_st  ) & F ( bookstore )
Output LTL: G angell_st & F bookstore
True

35
Input utterance: do not enter angell st and find starbucks
True LTL: G ( ! angell_st ) & F ( starbucks )
Output LTL: G ! angell_st & F starbucks
True

36
Input utterance: go to marston hall and then go to kabob and curry
True LTL: F ( marston_hall & F ( kabob_and_curry ) )
Output LTL: F & marston_hall F kabob_and_curry
True

37
Input utterance: go to science library
True LTL: F ( science_library )
Output LTL: F science_library
True

38
Input utterance: go to marston hall and then go to bookstore
True LTL: F ( marston_hall & F ( bookstore ) )
Output LTL: F marston_hall F bookstore
False

39
Input utterance: find science library
True LTL: F ( science_library )
Output LTL: F science_library
True

40
Input utterance: find marston hall and then find fedex office
True LTL: F ( marston_hall & F ( fedex_office ) )
Output LTL: F & marston_hall F fedex_office
True

41
Input utterance: go to nelson fitness center and then go to kabob and curry
True LTL: F ( nelson_fitness_center & F ( kabob_and_curry ) )
Output LTL: F & nelson_fitness_center F kabob_and_curry
True

42
Input utterance: stay away from thayer st and find chipotle
True LTL: G ( ! thayer_st ) & F ( chipotle )
Output LTL: & G ! thayer_st F chipotle
True

43
Input utterance: stay on thayer st and find bookstore
True LTL: G ( thayer_st ) & F ( bookstore )
Output LTL: & G thayer_st F bookstore
True

44
Input utterance: do not leave thayer st and find cvs
True LTL: G ( thayer_st ) & F ( cvs )
Output LTL: G ! thayer_st & F cvs
False

45
Input utterance: go to fedex office and then go to chipotle
True LTL: F ( fedex_office & F ( chipotle ) )
Output LTL: F & fedex_office F chipotle
True

46
Input utterance: find bookstore and then find kabob and curry
True LTL: F ( bookstore & F ( kabob_and_curry ) )
Output LTL: F & bookstore F kabob_and_curry
True

47
Input utterance: go to chipotle and then go to kabob and curry
True LTL: F ( chipotle & F ( kabob_and_curry ) )
Output LTL: F & chipotle F kabob_and_curry
True

48
Input utterance: find fedex office and then find marston hall
True LTL: F ( fedex_office & F ( marston_hall ) )
Output LTL: & F fedex_office G F marston_hall
False

49
Input utterance: do not leave thayer st and find science library
True LTL: G ( thayer_st ) & F ( science_library )
Output LTL: G ! thayer_st & F science_library
False

Language to LTL translation accuracy: 0.72
