message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to fedex office and then go to cvs\\nLTL:", "temperature": 0.6}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=e8a77734898963cf933c79e8cceb6630 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind science library and then find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=342 request_id=7d627a86913d2825643736e205691db2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to marston hall and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=616 request_id=a40530fd2a45e633819ff6b7b8b354d3 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=328 request_id=99940b13817352ff989d09a95eb35335 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to nelson fitness center and then go to starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2204 request_id=53551eb3b223bd7e542a7653dec1707f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind bookstore and then find fedex office\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=5ce1ea21cbb115145191b66c8ba338bd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind chipotle and then find starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=824 request_id=b388331724b4ec2ba60d723054d5b80c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind kabob and curry and then find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=863 request_id=90e2138f73b31a85c58b7607eb4605c5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to cvs and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=373 request_id=e13f8e6c8f07958a982e8130ef27dd11 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nstay away from angell st and find barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=561 request_id=8b3dd50d829d1d44a2b25ef041b76125 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=cc39168ffe987f1f683cb35423e7cb71 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind bookstore and then find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=609 request_id=5428640249d216a0c6f4bbec62a43293 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to starbucks and then go to bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=385 request_id=9848d3528bc2eb41b944249fa37e4bf1 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind barus building and then find kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1273 request_id=9b5a89e69f07f8e298924ebb8636dd5d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind citizens bank and then find cvs\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1240 request_id=227f4e1358b306ea729da3585b2bb86b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to watson center and then go to starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=953 request_id=26eef95f12406da8c74c46c5319829d2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind starbucks and then find watson center\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=f99954c4971caaec52328e5a72131815 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind nelson fitness center and then find barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=a9835e3efc5393990edd64b17de01a17 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to watson center and then go to barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1797 request_id=6dff7ebd5a34fce7012f928ec1590bed response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind marston hall and then find cvs\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=566baa75eda9ab70a965e5fd18f60873 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind chipotle and then find marston hall\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1869 request_id=f297c86737db99f27a833fdbbec76e8a response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to kabob and curry and then go to watson center\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=610 request_id=318ac7bbc174113b6e6cb401c3da92a8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nstay away from brook st and find kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=6d9e58cf8364023a0696b38c7fd86022 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to citizens bank and then go to marston hall\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=809 request_id=7540175a032dfa9ba108ab026ee02d8b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to nelson fitness center and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1151 request_id=8fd0372b0c1ff57458cebfa91332313c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nstay away from brook st and find chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=792 request_id=9f9bf50f791b8e86920cfd7f154840c2 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to fedex office and then go to citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 297
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=690 request_id=12b1daf45e44da9c2d777929ee40c1c8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not enter brook st and find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=823 request_id=d7c7a1dc6908a34b71af927a20ef99ef response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind watson center and then find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=654 request_id=4a39ff82ac0d29c8b72795d1c9d1aad9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind science library and then find chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=951 request_id=a4268ea3e6915791478d87b5ca537d25 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind barus building\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=618 request_id=a4e4a07be0c5826496ff1aa923fce5a9 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to cvs and then go to science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=632 request_id=c798b92eee769353d60ec5394f9aa8eb response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind science library and then find citizens bank\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=727 request_id=6a6bd4b4d2bfc307168866ee7d7fe792 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to citizens bank and then go to nelson fitness center\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1270 request_id=224a60902ce89f9d485d8d0f79a661ed response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nstay on angell st and find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1651 request_id=44f15796a66dc32d21f87d2cb153da03 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not enter angell st and find starbucks\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1413 request_id=8c258b782950f83df436d4fb5bba9e5b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to marston hall and then go to kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=588 request_id=23b1894dc78e53edf0793019a8cffa56 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=d31f2b1dda916337b320a74fa28b3acd response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to marston hall and then go to bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=83f59c7196ea20b1244242165e82d070 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=324 request_id=56577578ae616a2e3a553a0d1e0aaa2f response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind marston hall and then find fedex office\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1006 request_id=46b90327d60654d3205d10dccdc54db4 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to nelson fitness center and then go to kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=668 request_id=2b4bb6f8a21193c8d5141d33aca2ef9d response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nstay away from thayer st and find chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=916 request_id=ef385804387b24d8b4c53a465f8883b8 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nstay on thayer st and find bookstore\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=356 request_id=7854ab00bc30c197fda78caf2f84f8a5 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not leave thayer st and find cvs\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=b0fb6dac44f0145312fcefcb3bf8120b response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to fedex office and then go to chipotle\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=664 request_id=c2fb25335130cd6202bbeb28abdab589 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind bookstore and then find kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=484 request_id=e45e9380f1b67fce0365b2b1559b0766 response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ngo to chipotle and then go to kabob and curry\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=562 request_id=5c0f995544e60a92646c709de6d1f89c response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\nfind fedex office and then find marston hall\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=9ee4216e11a1f1f0ec8b1d25a926f7bc response_code=200
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-002", "prompt": "Your task is to first find referred landmarks from a given list then use them as propositions to translate English utterances to linear temporal logic (LTL) formulas.\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move to the red room\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the red one\\nLTL: F red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into yellow room and then go into the large green room\\nLTL: F & yellow_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: enter the red then enter the green rectangular room\\nLTL: F & red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go into the blue room and enter the green room\\nLTL: F & blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green area but avoid going through the yellow area\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: take a path to reach the blue box but avoid the red path\\nLTL: & F blue_room G ! red_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: get to the green rectangle but do not go through the yellow square\\nLTL: & F green_room G ! yellow_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: avoid green go to blue\\nLTL: & F blue_room G ! green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: only go through rooms that are not blue to get to the green room\\nLTL: & F green_room G ! blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to red or blue then green\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move the robot through the yellow or small red room and then to the large green room\\nLTL: F & | yellow_room red_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: move through the yellow or green room to the blue room\\nLTL: F & | yellow_room green_room F blue_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go to the green room via the red or blue room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: go through the red or blue room into the green room\\nLTL: F & | red_room blue_room F green_room\\n\\nLandmark List: [blue_room, green_room, yellow_room, red_room]\\nUtterance: \\ndo not leave thayer st and find science library\\nLTL:", "temperature": 0.6}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=8bdba1afa3b65d116104130e8604d83a response_code=200
Syntax error in output LTL: F nelson_fitness_center F starbucks
Syntax error in output LTL: F & kabob curry F science_library
Syntax error in output LTL: F cvs F citizens_bank
Syntax error in output LTL: G ! angell_st F barus_building
Syntax error in output LTL: F bookstore F science_library
Syntax error in output LTL: F nelson_fitness_center F citizens_bank
Syntax error in output LTL: & F science_library G find chipotle
Syntax error in output LTL: G ! thayer_st F cvs
Syntax error in output LTL: FedEx F Marston
0
Input utterance: go to fedex office and then go to cvs
True LTL: F ( fedex_office & F ( cvs ) )
Output LTL: F & fedex_office F cvs
True

1
Input utterance: find science library and then find bookstore
True LTL: F ( science_library & F ( bookstore ) )
Output LTL: F & science_library F bookstore
True

2
Input utterance: go to marston hall and then go to citizens bank
True LTL: F ( marston_hall & F ( citizens_bank ) )
Output LTL: F & marston_hall F citizens_bank
True

3
Input utterance: go to barus building
True LTL: F ( barus_building )
Output LTL: F barus_building
True

4
Input utterance: go to nelson fitness center and then go to starbucks
True LTL: F ( nelson_fitness_center & F ( starbucks ) )
Output LTL: F nelson_fitness_center F starbucks
False

5
Input utterance: find bookstore and then find fedex office
True LTL: F ( bookstore & F ( fedex_office ) )
Output LTL: F & bookstore F fedex_office
True

6
Input utterance: find chipotle and then find starbucks
True LTL: F ( chipotle & F ( starbucks ) )
Output LTL: & F chipotle F starbucks
False

7
Input utterance: find kabob and curry and then find science library
True LTL: F ( kabob_and_curry & F ( science_library ) )
Output LTL: F & kabob curry F science_library
False

8
Input utterance: go to cvs and then go to citizens bank
True LTL: F ( cvs & F ( citizens_bank ) )
Output LTL: F cvs F citizens_bank
False

9
Input utterance: stay away from angell st and find barus building
True LTL: G ( ! angell_st ) & F ( barus_building )
Output LTL: G ! angell_st F barus_building
False

10
Input utterance: find kabob and curry
True LTL: F ( kabob_and_curry )
Output LTL: F & kabob curry
False

11
Input utterance: find bookstore and then find science library
True LTL: F ( bookstore & F ( science_library ) )
Output LTL: F bookstore F science_library
False

12
Input utterance: go to starbucks and then go to bookstore
True LTL: F ( starbucks & F ( bookstore ) )
Output LTL: & F Starbucks F bookstore
False

13
Input utterance: find barus building and then find kabob and curry
True LTL: F ( barus_building & F ( kabob_and_curry ) )
Output LTL: F & barus_building F kabob_and_curry
True

14
Input utterance: find citizens bank and then find cvs
True LTL: F ( citizens_bank & F ( cvs ) )
Output LTL: F & citizens_bank F cvs
True

15
Input utterance: go to watson center and then go to starbucks
True LTL: F ( watson_center & F ( starbucks ) )
Output LTL: F & watson_center F starbucks
True

16
Input utterance: find starbucks and then find watson center
True LTL: F ( starbucks & F ( watson_center ) )
Output LTL: & F starbucks F watson_center
False

17
Input utterance: find nelson fitness center and then find barus building
True LTL: F ( nelson_fitness_center & F ( barus_building ) )
Output LTL: F & nelson_fitness_center F barus_building
True

18
Input utterance: go to watson center and then go to barus building
True LTL: F ( watson_center & F ( barus_building ) )
Output LTL: F & watson_center F barus_building
True

19
Input utterance: find marston hall and then find cvs
True LTL: F ( marston_hall & F ( cvs ) )
Output LTL: F & marston_hall F cvs
True

20
Input utterance: find chipotle and then find marston hall
True LTL: F ( chipotle & F ( marston_hall ) )
Output LTL: F & chipotle F marston_hall
True

21
Input utterance: go to kabob and curry and then go to watson center
True LTL: F ( kabob_and_curry & F ( watson_center ) )
Output LTL: F & kabob_curry F watson_center
False

22
Input utterance: stay away from brook st and find kabob and curry
True LTL: G ( ! brook_st ) & F ( kabob_and_curry )
Output LTL: G ! brook_st & F kabob_curry
False

23
Input utterance: go to citizens bank and then go to marston hall
True LTL: F ( citizens_bank & F ( marston_hall ) )
Output LTL: F & citizens_bank F marston_hall
True

24
Input utterance: go to nelson fitness center and then go to citizens bank
True LTL: F ( nelson_fitness_center & F ( citizens_bank ) )
Output LTL: F nelson_fitness_center F citizens_bank
False

25
Input utterance: stay away from brook st and find chipotle
True LTL: G ( ! brook_st ) & F ( chipotle )
Output LTL: G !brook_st & chipotle
False

26
Input utterance: go to fedex office and then go to citizens bank
True LTL: F ( fedex_office & F ( citizens_bank ) )
Output LTL: F & fedex_office F citizens_bank
True

27
Input utterance: do not enter brook st and find bookstore
True LTL: G ( ! brook_st ) & F ( bookstore )
Output LTL: & ! brook_st F bookstore
False

28
Input utterance: find watson center and then find science library
True LTL: F ( watson_center & F ( science_library ) )
Output LTL: & F watson_center F science_library
False

29
Input utterance: find science library and then find chipotle
True LTL: F ( science_library & F ( chipotle ) )
Output LTL: & F science_library G find chipotle
False

30
Input utterance: find barus building
True LTL: F ( barus_building )
Output LTL: F barus_building
True

31
Input utterance: go to cvs and then go to science library
True LTL: F ( cvs & F ( science_library ) )
Output LTL: F & cvs F science_library
True

32
Input utterance: find science library and then find citizens bank
True LTL: F ( science_library & F ( citizens_bank ) )
Output LTL: F & science_library F citizens_bank
True

33
Input utterance: go to citizens bank and then go to nelson fitness center
True LTL: F ( citizens_bank & F ( nelson_fitness_center ) )
Output LTL: & F citizens_bank F nelson_fitness_center
False

34
Input utterance: stay on angell st and find bookstore
True LTL: G ( angell_st  ) & F ( bookstore )
Output LTL: & F bookstore G angell_st
True

35
Input utterance: do not enter angell st and find starbucks
True LTL: G ( ! angell_st ) & F ( starbucks )
Output LTL: G ! angell_st & F starbucks
True

36
Input utterance: go to marston hall and then go to kabob and curry
True LTL: F ( marston_hall & F ( kabob_and_curry ) )
Output LTL: F & marston_hall F kabob_curry
False

37
Input utterance: go to science library
True LTL: F ( science_library )
Output LTL: F science_library
True

38
Input utterance: go to marston hall and then go to bookstore
True LTL: F ( marston_hall & F ( bookstore ) )
Output LTL: F & marston_hall F bookstore
True

39
Input utterance: find science library
True LTL: F ( science_library )
Output LTL: F science_library
True

40
Input utterance: find marston hall and then find fedex office
True LTL: F ( marston_hall & F ( fedex_office ) )
Output LTL: F & marston_hall F fedex_office
True

41
Input utterance: go to nelson fitness center and then go to kabob and curry
True LTL: F ( nelson_fitness_center & F ( kabob_and_curry ) )
Output LTL: F & nelson_fitness_center F kabob_and_
False

42
Input utterance: stay away from thayer st and find chipotle
True LTL: G ( ! thayer_st ) & F ( chipotle )
Output LTL: G ! thayer_st & chipotle
False

43
Input utterance: stay on thayer st and find bookstore
True LTL: G ( thayer_st ) & F ( bookstore )
Output LTL: F bookstore & thayer_st
False

44
Input utterance: do not leave thayer st and find cvs
True LTL: G ( thayer_st ) & F ( cvs )
Output LTL: G ! thayer_st F cvs
False

45
Input utterance: go to fedex office and then go to chipotle
True LTL: F ( fedex_office & F ( chipotle ) )
Output LTL: F & fedex_office F chipotle
True

46
Input utterance: find bookstore and then find kabob and curry
True LTL: F ( bookstore & F ( kabob_and_curry ) )
Output LTL: & F bookstore F kabob_curry
False

47
Input utterance: go to chipotle and then go to kabob and curry
True LTL: F ( chipotle & F ( kabob_and_curry ) )
Output LTL: F & chipotle F kabob
False

48
Input utterance: find fedex office and then find marston hall
True LTL: F ( fedex_office & F ( marston_hall ) )
Output LTL: FedEx F Marston
False

49
Input utterance: do not leave thayer st and find science library
True LTL: G ( thayer_st ) & F ( science_library )
Output LTL: G ! thayer_st & F science_library
False

Language to LTL translation accuracy: 0.48
