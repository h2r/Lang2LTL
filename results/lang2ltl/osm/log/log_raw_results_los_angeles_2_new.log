data/osm/lang2ltl/los_angeles_2/symbolic_batch12_perm_ltl_formula_9_42_fold0.pkl
RER engine: text-davinci-003
Embedding engine: text-embedding-ada-002
Symbolic translation engine: davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30
known lmk embed: data/osm/lmk_sem_embeds/obj2embed_los_angeles_2_text-embedding-ada-002.pkl
cached lmk embed: data/osm/lmk_name_embeds/name2embed_los_angeles_2_text-embedding-ada-002.pkl



RUN: 0
Extracting referring expressions from utterance: 0/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Ice Cream, Home Cafe, Gwang Yang BBQ, Big 5 Sporting Goods, and Central Plaza 1\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Converted retries value: 2 -> Retry(total=2, connect=None, read=None, redirect=None, status=None)
Starting new HTTPS connection (1): api.openai.com:443
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=667 request_id=e5cdfdd4a84ee7f023485f220eb0cd40 response_code=200
Extracting referring expressions from utterance: 1/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Big 5 Sporting Goods, Coffee Bean & Tea Leaf, Koko Pizza, Togo\'s, and Home Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1037 request_id=3f2ac650a5b5d52b71ece1ae07c6e8bd response_code=200
Extracting referring expressions from utterance: 2/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: sometime visit Central Plaza 3, Central Plaza 1, Bayou Smokehouse, Metro, and The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=770 request_id=a16d8e428688e4fc424bd5751e8245b1 response_code=200
Extracting referring expressions from utterance: 3/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: sometime visit Korean Bbq, The Line, Happy Noodle, Hair News, and Gwang Yang BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1349 request_id=cc465cae72b661c4533502c3ea9d6a52 response_code=200
Extracting referring expressions from utterance: 4/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: eventually go visit Togo\'s, Seaweed, Ice Cream, Wilshire-Kenmore Building, and Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1484 request_id=91062bd5919030d699cfa85d43794328 response_code=200
Extracting referring expressions from utterance: 5/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: eventually go visit Carl\'s Jr., Happy Noodle, The Gaylord Apartments, Crystal Spa, and POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=e15e51ead4688a1043fc9ee73749beb0 response_code=200
Extracting referring expressions from utterance: 6/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Wako, Togo\'s, Foothill Transit, Wilshire-Kenmore Building, and California Design College\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=625 request_id=6f9cbdf77f930e999318116a51a2e10d response_code=200
Extracting referring expressions from utterance: 7/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Wilshire-Kenmore Building, Wako, Happy Noodle, Wilshire/Normandie, and Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1091 request_id=f709d398c8eb511d0a839954915f6bb8 response_code=200
Extracting referring expressions from utterance: 8/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Crystal Spa, go to Foothill Transit, go to Ice Cream, go to Carl\'s Jr., go to Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=b46f95f0eaab25702bff4fa230bd7f7d response_code=200
Extracting referring expressions from utterance: 9/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Metro, go to Neris Filipino Dining, go to The Boiling Crab, go to Etude Lounge, go to Ice Cream\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1439 request_id=e68758a0cf92a168cbce84b0a2e0b659 response_code=200
Extracting referring expressions from utterance: 10/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Gwang Yang BBQ, The Line, Big 5 Sporting Goods, Metro, Bongchu, in any order required\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=590 request_id=93e9ebf91c0cd62d9b2fab03c0ef780f response_code=200
Extracting referring expressions from utterance: 11/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Wilshire/Normandie, The Boiling Crab, Neris Filipino Dining, Koko Pizza, Big 5 Sporting Goods, in any order required\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1154 request_id=20a6fd054dbb0523c769090060f24578 response_code=200
Extracting referring expressions from utterance: 12/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit all locations Hair News, POT, Big 5 Sporting Goods, Central Plaza 1, Robeks Juice\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=796 request_id=600d1f2928e0b95fe98cd8d1c6c3a5b7 response_code=200
Extracting referring expressions from utterance: 13/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit all locations Crystal Spa, Wako, Home Cafe, The Line, Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=916 request_id=62dfadd953c41ff785e3a3612e736920 response_code=200
Extracting referring expressions from utterance: 14/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach the following five locations Hair News, The Line, Wako, POT, Togo\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=838 request_id=be7cd0b30acdff01e91571553b7b7230 response_code=200
Extracting referring expressions from utterance: 15/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach the following five locations Hair News, Consulat General of the Republic of Indonesia, Central Plaza 1, Crystal Spa, POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1015 request_id=7036ef4273cc43a44aa8d956880ecae2 response_code=200
Extracting referring expressions from utterance: 16/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: find the following The Boiling Crab, The Gaylord Apartments, Ice Cream, Coffee Bean & Tea Leaf, The Line\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1068 request_id=7ae3bba4c9e031cd98a269c337db5334 response_code=200
Extracting referring expressions from utterance: 17/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: find the following California Design College, The Line, Foothill Transit, Wako, Korean Bbq\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1334 request_id=1ef3b4e51b6b778341aa7421a1ba72f7 response_code=200
Extracting referring expressions from utterance: 18/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Zan ResPub, The Line, Home Cafe, Togo\'s, and California Design College, in arbitrary order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=610 request_id=69a1eccd288d13d5765df5648fe33309 response_code=200
Extracting referring expressions from utterance: 19/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to California Design College, Etude Lounge, Wako, Big 5 Sporting Goods, and Wilshire/Normandie, in arbitrary order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=803 request_id=f47cdd790c21ad0c415a1466006d5b30 response_code=200
Extracting referring expressions from utterance: 20/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Neris Filipino Dining, Robeks Juice, Mali Taste of Thailand, The Gaylord Apartments, and Bayou Smokehouse, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 370
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1038 request_id=6183de2a71cc8d1b41eadc7474e06a62 response_code=200
Extracting referring expressions from utterance: 21/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Crystal Spa, Korean BBQ, Zan ResPub, Carl\'s Jr., and Sun Nong Dan, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=838 request_id=dd7da1bff4facd12b5b04a202556b315 response_code=200
Extracting referring expressions from utterance: 22/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop until Consulat General of the Republic of Indonesia, Sun Nong Dan, Happy Noodle, Bayou Smokehouse, and Seaweed, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 369
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1083 request_id=74b63e90dc5acf3bcba22f61619a8922 response_code=200
Extracting referring expressions from utterance: 23/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop until Etude Lounge, Sun Nong Dan, Crystal Spa, Wilshire/Normandie, and Togo\'s, are all visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1177 request_id=3cff9b181d4358c36ffed813ffb3d6f8 response_code=200
Extracting referring expressions from utterance: 24/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Wako, Details, Equitable Life Building, Coffee Bean & Tea Leaf, and Central Plaza 3\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=941 request_id=74ca258e223688cdf49a05c2160f2d51 response_code=200
Extracting referring expressions from utterance: 25/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Central Plaza 1, BBQ Premium Chicken, POT, Details, and Bongchu\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1004 request_id=664d4d46c9261fb1853c321ee40e7774 response_code=200
Extracting referring expressions from utterance: 26/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Etude Lounge, Consulat General of the Republic of Indonesia, Sun Nong Dan, Foothill Transit, and Korean BBQ, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 372
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=984 request_id=c11769e70a30be15d59ca2071142987b response_code=200
Extracting referring expressions from utterance: 27/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Boiling Crab, Togo\'s, Home Cafe, Zan ResPub, and Foothill Transit, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1254 request_id=509f0f0116e70cfd07babba4538470d0 response_code=200
Extracting referring expressions from utterance: 28/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Details, Korean Bbq, Equitable Life Building, Mali Taste of Thailand, and Bongchu, in no particular order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=802 request_id=00f5092e0d867909372e40a7b4f2e876 response_code=200
Extracting referring expressions from utterance: 29/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Boiling Crab, Tarboosh middle East kitchen, California Design College, Bayou Smokehouse, and POT, in no particular order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 365
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=886 request_id=0536a272660e1e4f72e472be15928074 response_code=200
Extracting referring expressions from utterance: 30/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Details, Home Cafe, Crystal Spa, Seaweed, and The Gaylord Apartments, at least once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=917 request_id=f613deb524a49fe355dcc119b15bd5aa response_code=200
Extracting referring expressions from utterance: 31/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Wilshire/Normandie, Metro, Ice Cream, Big 5 Sporting Goods, and Mali Taste of Thailand, at least once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1375 request_id=c57341c9109a51fb4d1ee7edbb869f89 response_code=200
Extracting referring expressions from utterance: 32/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Happy Noodle, Togo\'s, The Line, Mermaid Cafe, and Coffee Bean & Tea Leaf\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=2933e33cda6c5e72ff1e78859a7fcde4 response_code=200
Extracting referring expressions from utterance: 33/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Consulat General of the Republic of Indonesia, Korean BBQ, Mali Taste of Thailand, Wako, and Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1021 request_id=c187513ab6076ef313c7f1729c69acab response_code=200
Extracting referring expressions from utterance: 34/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Central Plaza 1, Seaweed, Equitable Life Building, Wako, and Robeks Juice, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=980 request_id=5237b5d13d24a8b9a2a284c814260ec4 response_code=200
Extracting referring expressions from utterance: 35/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Home Cafe, Big 5 Sporting Goods, Coffee Bean & Tea Leaf, Equitable Life Building, and Mali Taste of Thailand, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 373
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=878 request_id=811cf4b0dcec10e5de022a6728d49b44 response_code=200
Extracting referring expressions from utterance: 36/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Foothill Transit, Home Cafe, Togo\'s, Gwang Yang BBQ, and Neris Filipino Dining, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 343
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=924 request_id=2729bef9606e8cf25273cd0e197e0d5a response_code=200
Extracting referring expressions from utterance: 37/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Gaylord Apartments, Wilshire/Normandie, Coffee Bean & Tea Leaf, Neris Filipino Dining, and Hair News, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 369
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1301 request_id=30caf82ca627d926e61341d064cc8539 response_code=200
Extracting referring expressions from utterance: 38/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Details, Etude Lounge, Togo\'s, The Boiling Crab, and Korean Bbq, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=afce5a0e08eb8e7bc0a651f6c82ef686 response_code=200
Extracting referring expressions from utterance: 39/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach POT, Seaweed, Etude Lounge, Neris Filipino Dining, and Big 5 Sporting Goods, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=752 request_id=2cad5f0863591b88e6b1a486cc7fbd89 response_code=200
Extracting referring expressions from utterance: 40/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you go to Robeks Juice, Bayou Smokehouse, Happy Noodle, Wako, Etude Lounge, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1025 request_id=64f55f2ae52444760b8384f9ea57bbf6 response_code=200
Extracting referring expressions from utterance: 41/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you go to Home Cafe, Coffee Bean & Tea Leaf, Happy Noodle, Foothill Transit, Korean BBQ, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=537 request_id=ade94c4729d13785bc389619656ac43e response_code=200
Extracting referring expressions from utterance: 42/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Bayou Smokehouse, Robeks Juice, Happy Noodle, The Line, Korean Bbq, but it can be done in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=f328540b0cdb9b9be87c4455ac0f7ea6 response_code=200
Extracting referring expressions from utterance: 43/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Central Plaza 3, Hair News, Neris Filipino Dining, Korean BBQ, Bongchu, but it can be done in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=870 request_id=f7e27e04335dd323e8f7daef805d362a response_code=200
Extracting referring expressions from utterance: 44/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: in no particular order visit Home Cafe, The Boiling Crab, The Gaylord Apartments, Crystal Spa, Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1078 request_id=c10b4873086a80ecdeedeb448412b76c response_code=200
Extracting referring expressions from utterance: 45/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: in no particular order visit Robeks Juice, Wilshire/Normandie, Korean Bbq, Coffee Bean & Tea Leaf, Central Plaza 3\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=999 request_id=880528ea044ba168de07d011067cbc9e response_code=200
Extracting referring expressions from utterance: 46/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Mermaid Cafe, until you visit Bayou Smokehouse, visit Bayou Smokehouse, only once do not visit Bayou Smokehouse, until you visit POT, visit POT, only once do no visit POT, until you visit Hair News, visit Hair News, only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=944ee65e8ef33b2b613c709b55eca19f response_code=200
Extracting referring expressions from utterance: 47/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit The Gaylord Apartments, until you visit Ice Cream, visit Ice Cream, only once do not visit Ice Cream, until you visit Wako, visit Wako, only once do no visit Wako, until you visit Consulat General of the Republic of Indonesia, visit Consulat General of the Republic of Indonesia, only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 354
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=969 request_id=9caec3e4b634a0f45d3b351cbc142961 response_code=200
Extracting referring expressions from utterance: 48/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Sun Nong Dan, then Wako, then Etude Lounge, and then Central Plaza 3, you can only visit each landmark once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=772 request_id=c1ea9c80ed4b68c3b74e2d56db7cdcf1 response_code=200
Extracting referring expressions from utterance: 49/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Robeks Juice, then The Gaylord Apartments, then Carl\'s Jr., and then Korean BBQ, you can only visit each landmark once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=4ca5c74286f472b1a24489af74a3e5d6 response_code=200
Extracting referring expressions from utterance: 50/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to The Line, but not through Crystal Spa, The Boiling Crab, or Zan ResPub, and then go to Crystal Spa, but not through The Boiling Crab, or Zan ResPub, and then go to The Boiling Crab, but not through Zan ResPub, and finally go to Zan ResPub, no revisiting is allowed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=844 request_id=03d632da5b8d1f626c4568fa2a4f2473 response_code=200
Extracting referring expressions from utterance: 51/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Crystal Spa, but not through Robeks Juice, Hair News, or The Line, and then go to Robeks Juice, but not through Hair News, or The Line, and then go to Hair News, but not through The Line, and finally go to The Line, no revisiting is allowed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=852 request_id=8913648832dab2b0e6cc871eac03509b response_code=200
Extracting referring expressions from utterance: 52/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Bayou Smokehouse, until Tarboosh middle East kitchen, is visited and do not go to Tarboosh middle East kitchen, until Wilshire-Kenmore Building, is visited and do not go to Wilshire-Kenmore Building, until Metro, is visited along the path never return to previous location you have been to\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 348
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=958 request_id=e1da49a6cc3c91ce6884dcdcdf9d1866 response_code=200
Extracting referring expressions from utterance: 53/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Koko Pizza, until Coffee Bean & Tea Leaf, is visited and do not go to Coffee Bean & Tea Leaf, until Happy Noodle, is visited and do not go to Happy Noodle, until Tarboosh middle East kitchen, is visited along the path never return to previous location you have been to\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=995 request_id=c8fdbc04f71fac15433db2f37ad8062f response_code=200
Extracting referring expressions from utterance: 54/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Tarboosh middle East kitchen, only after going to Mermaid Cafe, before that make your way to Mermaid Cafe, only after going to Details, before that make your way to Details, only after going to Central Plaza 1, do not go back to the previous location you have visited while heading to the next\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=631 request_id=3a22d5119858dcaaf62397b5710237ea response_code=200
Extracting referring expressions from utterance: 55/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Consulat General of the Republic of Indonesia, only after going to Crystal Spa, before that make your way to Crystal Spa, only after going to Zan ResPub, before that make your way to Zan ResPub, only after going to Togo\'s, do not go back to the previous location you have visited while heading to the next\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1896 request_id=758c5c901aa28ee350e9a2d6f78df0b5 response_code=200
Extracting referring expressions from utterance: 56/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to California Design College, but do not visit Happy Noodle, Big 5 Sporting Goods, or Wilshire/Normandie, and then go to Happy Noodle, but do not visit Big 5 Sporting Goods, or Wilshire/Normandie, or revisit California Design College, and then go to Big 5 Sporting Goods, but do not visit Wilshire/Normandie, or revisit California Design College, or Happy Noodle, and then go to Wilshire/Normandie, but do not revisit California Design College, Happy Noodle, or Big 5 Sporting Goods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=795 request_id=4e75307bcbad9a852feb338c428f7483 response_code=200
Extracting referring expressions from utterance: 57/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Wilshire-Kenmore Building, but do not visit Metro, POT, or Sun Nong Dan, and then go to Metro, but do not visit POT, or Sun Nong Dan, or revisit Wilshire-Kenmore Building, and then go to POT, but do not visit Sun Nong Dan, or revisit Wilshire-Kenmore Building, or Metro, and then go to Sun Nong Dan, but do not revisit Wilshire-Kenmore Building, Metro, or POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=894 request_id=5025f59b747c06e26aab1cae77313385 response_code=200
Extracting referring expressions from utterance: 58/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Carl\'s Jr., Foothill Transit, California Design College, and Mali Taste of Thailand, in this order without skipping any one of them do not revisit any one of them once after you have been there\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=721 request_id=13bcd464f9270872c12e5b8c0373d177 response_code=200
Extracting referring expressions from utterance: 59/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Mali Taste of Thailand, Foothill Transit, POT, and Ice Cream, in this order without skipping any one of them do not revisit any one of them once after you have been there\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=487 request_id=145225f7befaafcefe6fa05aeac02971 response_code=200
Extracting referring expressions from utterance: 60/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to California Design College, only once but keep away from Korean Bbq, BBQ Premium Chicken, and Mali Taste of Thailand, and then go to Korean Bbq, only once but keep away from California Design College, BBQ Premium Chicken, and Mali Taste of Thailand, and then go to BBQ Premium Chicken, only once but keep way from California Design College, Korean Bbq, and Mali Taste of Thailand, and finally go to Mali Taste of Thailand, once but keep away from California Design College, Korean Bbq, and BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=737 request_id=75fcd5eab89c33036007d6445aa79885 response_code=200
Extracting referring expressions from utterance: 61/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Tarboosh middle East kitchen, only once but keep away from The Line, California Design College, and Bongchu, and then go to The Line, only once but keep away from Tarboosh middle East kitchen, California Design College, and Bongchu, and then go to California Design College, only once but keep way from Tarboosh middle East kitchen, The Line, and Bongchu, and finally go to Bongchu, once but keep away from Tarboosh middle East kitchen, The Line, and California Design College\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1006 request_id=ebb33fc859c97e0afb4e7e4049b09bac response_code=200
Extracting referring expressions from utterance: 62/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Wilshire/Normandie, one time but not through Metro, Korean BBQ, or Wako, and then visit Metro, once but not through Wilshire/Normandie, Korean BBQ, or Wako, and then visit Korean BBQ, once but not through Wilshire/Normandie, Metro, or Wako, and then visit Wako, once but not through Wilshire/Normandie, Metro, or Korean BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=583 request_id=8f10bb0a3053ded26bb8cbf22ea99b3e response_code=200
Extracting referring expressions from utterance: 63/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Consulat General of the Republic of Indonesia, one time but not through Ice Cream, The Line, or BBQ Premium Chicken, and then visit Ice Cream, once but not through Consulat General of the Republic of Indonesia, The Line, or BBQ Premium Chicken, and then visit The Line, once but not through Consulat General of the Republic of Indonesia, Ice Cream, or BBQ Premium Chicken, and then visit BBQ Premium Chicken, once but not through Consulat General of the Republic of Indonesia, Ice Cream, or The Line\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=670 request_id=7251cb359ad695adf899441ec84daf37 response_code=200
Extracting referring expressions from utterance: 64/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Foothill Transit, BBQ Premium Chicken, and Korean Bbq, until you make Sun Nong Dan, single visit to Sun Nong Dan, and then make your way to Foothill Transit, while staying away from Sun Nong Dan, BBQ Premium Chicken, and Korean Bbq, and then make your way to BBQ Premium Chicken, while staying away from Sun Nong Dan, Foothill Transit, or Korean Bbq, and finally make your way to Korean Bbq, while staying away from Sun Nong Dan, Foothill Transit, and BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=806 request_id=07b56b06558afeacca0e2614c4a5bebe response_code=200
Extracting referring expressions from utterance: 65/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Ice Cream, POT, and Coffee Bean & Tea Leaf, until you make Crystal Spa, single visit to Crystal Spa, and then make your way to Ice Cream, while staying away from Crystal Spa, POT, and Coffee Bean & Tea Leaf, and then make your way to POT, while staying away from Crystal Spa, Ice Cream, or Coffee Bean & Tea Leaf, and finally make your way to Coffee Bean & Tea Leaf, while staying away from Crystal Spa, Ice Cream, and POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=484 request_id=2b88b1325a29bc12516ace821ccfb784 response_code=200
Extracting referring expressions from utterance: 66/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: head to BBQ Premium Chicken, Zan ResPub, Korean BBQ, and Crystal Spa, in this order without skipping or revisiting any one of them\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=501 request_id=6ac042cfbab87241b9581100a593d084 response_code=200
Extracting referring expressions from utterance: 67/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: head to Consulat General of the Republic of Indonesia, The Boiling Crab, Gwang Yang BBQ, and Korean Bbq, in this order without skipping or revisiting any one of them\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1239 request_id=7b22fc26d31be1c9f52b6afa3daf6fdf response_code=200
Extracting referring expressions from utterance: 68/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit each of Details, Robeks Juice, Seaweed, and Metro, exactly once in this order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=431 request_id=736823ff629eeff4da9ff4071f717a08 response_code=200
Extracting referring expressions from utterance: 69/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit each of Crystal Spa, Sun Nong Dan, Korean BBQ, and Details, exactly once in this order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=675 request_id=a3a7504c6df70a210770df3138f5329f response_code=200
Extracting referring expressions from utterance: 70/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Bayou Smokehouse, but before visiting Bayou Smokehouse, you must visit Home Cafe, only after that visit Metro, after visiting Metro, visit Crystal Spa, visit each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=932448b64d894ca8e1554cb2eff86ad9 response_code=200
Extracting referring expressions from utterance: 71/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Etude Lounge, but before visiting Etude Lounge, you must visit Big 5 Sporting Goods, only after that visit Bayou Smokehouse, after visiting Bayou Smokehouse, visit Korean Bbq, visit each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2314 request_id=b989f9b6e668169ef611d0db20b77d92 response_code=200
Extracting referring expressions from utterance: 72/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Koko Pizza, only once while avoiding Neris Filipino Dining, then visit Neris Filipino Dining, once while avoiding California Design College, only after visiting California Design College, once visit Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=0d78616bd5df04146ad93c23703ad06f response_code=200
Extracting referring expressions from utterance: 73/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Sun Nong Dan, only once while avoiding Foothill Transit, then visit Foothill Transit, once while avoiding Bayou Smokehouse, only after visiting Bayou Smokehouse, once visit Korean BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=782 request_id=9d0fa7c6161b0c6be78563207f93e892 response_code=200
Extracting referring expressions from utterance: 74/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Details, Korean Bbq, Metro, Zan ResPub, once do not visit Korean Bbq, without visiting Details, and do not visit Korean Bbq, without visiting Metro, do not visit Zan ResPub, without visiting Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=d896f131cbe12830dbaaca25566fb972 response_code=200
Extracting referring expressions from utterance: 75/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Wako, Big 5 Sporting Goods, Home Cafe, Hair News, once do not visit Big 5 Sporting Goods, without visiting Wako, and do not visit Big 5 Sporting Goods, without visiting Home Cafe, do not visit Hair News, without visiting Home Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=645 request_id=b5c04b1e1359f8447795a34bca3a13f5 response_code=200
Extracting referring expressions from utterance: 76/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit BBQ Premium Chicken, then Gwang Yang BBQ, then Wilshire-Kenmore Building, then Carl\'s Jr., follow this strict order and visit each location only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2356 request_id=e5768136a522ebaf55d24ea978559380 response_code=200
Extracting referring expressions from utterance: 77/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Tarboosh middle East kitchen, then Bayou Smokehouse, then Seaweed, then Foothill Transit, follow this strict order and visit each location only once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=777 request_id=2b36a7c5a69984f52e37acc32091139f response_code=200
Extracting referring expressions from utterance: 78/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please go to Bongchu, then Neris Filipino Dining, then Foothill Transit, then Carl\'s Jr., in that specific order without revisiting previously visited location\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=877 request_id=bee5901eb1d27d18ccfd2daae7d91a3a response_code=200
Extracting referring expressions from utterance: 79/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please go to Carl\'s Jr., then Wako, then The Line, then Koko Pizza, in that specific order without revisiting previously visited location\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=963 request_id=ded6ef9112f5c1182294fc6b953dfabb response_code=200
Extracting referring expressions from utterance: 80/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Tarboosh middle East kitchen, once without visiting Bongchu, then go to Bongchu, once without visiting Mermaid Cafe, then go to Mermaid Cafe, once without visiting Seaweed, finally go to Seaweed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1268 request_id=babbd18716dd321561e4643abaf9f803 response_code=200
Extracting referring expressions from utterance: 81/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Wako, once without visiting The Gaylord Apartments, then go to The Gaylord Apartments, once without visiting The Boiling Crab, then go to The Boiling Crab, once without visiting Coffee Bean & Tea Leaf, finally go to Coffee Bean & Tea Leaf\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1007 request_id=179450d6f98e5b96b3511de09514419d response_code=200
Extracting referring expressions from utterance: 82/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Robeks Juice, once then go to Crystal Spa, once while avoiding Zan ResPub, then go to Zan ResPub, once while avoiding Mali Taste of Thailand, finally go to Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=538 request_id=6b886e1870db1967c76635e2705950dc response_code=200
Extracting referring expressions from utterance: 83/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: first go to Mermaid Cafe, once then go to Robeks Juice, once while avoiding The Gaylord Apartments, then go to The Gaylord Apartments, once while avoiding Bayou Smokehouse, finally go to Bayou Smokehouse\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=597 request_id=25b2863931967e89496e622d62ae3a8b response_code=200
Extracting referring expressions from utterance: 84/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Crystal Spa, without visiting BBQ Premium Chicken, then go to BBQ Premium Chicken, without visiting The Gaylord Apartments, then go to The Gaylord Apartments, without visiting Togo\'s, finally go to Togo\'s, while only visiting each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1279 request_id=813423abe6eee3dd4fc75a15d71181e4 response_code=200
Extracting referring expressions from utterance: 85/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Zan ResPub, without visiting Consulat General of the Republic of Indonesia, then go to Consulat General of the Republic of Indonesia, without visiting Bayou Smokehouse, then go to Bayou Smokehouse, without visiting Central Plaza 1, finally go to Central Plaza 1, while only visiting each location once\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=764 request_id=45932ca7d3a95db89041b89ac622bfb5 response_code=200
Extracting referring expressions from utterance: 86/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Line, then Ice Cream, then BBQ Premium Chicken, and then Etude Lounge, in that strict order without returning to previously visited locations\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1443 request_id=2375105b0c720afd922fa8b21efdc73f response_code=200
Extracting referring expressions from utterance: 87/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Carl\'s Jr., then The Line, then Korean BBQ, and then Equitable Life Building, in that strict order without returning to previously visited locations\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=570 request_id=2eb197031c35e93e394511ca30814b57 response_code=200
Extracting referring expressions from utterance: 88/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never stop visiting Wako, The Line, The Boiling Crab, and Wilshire-Kenmore Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=b4be14bc905441a83561f629cb0f0a12 response_code=200
Extracting referring expressions from utterance: 89/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never stop visiting Korean BBQ, Gwang Yang BBQ, Togo\'s, and Bongchu\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=572 request_id=7a96d1a61dab3e08b85d0156756ea4b8 response_code=200
Extracting referring expressions from utterance: 90/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: frequent Wilshire/Normandie, Central Plaza 3, Hair News, and Tarboosh middle East kitchen, infinitely in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1027 request_id=d51c8a75a193638a22ec535737721632 response_code=200
Extracting referring expressions from utterance: 91/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: frequent Crystal Spa, Wilshire-Kenmore Building, Equitable Life Building, and Mermaid Cafe, infinitely in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 345
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=857 request_id=7c1284de6969b57e8e4b8beb38584c3a response_code=200
Extracting referring expressions from utterance: 92/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please keep visiting Etude Lounge, Tarboosh middle East kitchen, Korean Bbq, and Wilshire-Kenmore Building, without stopping\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 349
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=877 request_id=93271453a0a888755575fe782634b8bf response_code=200
Extracting referring expressions from utterance: 93/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: please keep visiting POT, Carl\'s Jr., Neris Filipino Dining, and Robeks Juice, without stopping\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1115 request_id=600a0f107765de13d39823ba7fe07fa4 response_code=200
Extracting referring expressions from utterance: 94/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure California Design College, Sun Nong Dan, Mermaid Cafe, and The Boiling Crab, are visited infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1088 request_id=33edc046e9fac4f962024e7fc61c70e5 response_code=200
Extracting referring expressions from utterance: 95/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure Crystal Spa, Central Plaza 1, Korean BBQ, and Carl\'s Jr., are visited infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=829 request_id=efbf1f94eac61b9f6a1c7f284f3f518c response_code=200
Extracting referring expressions from utterance: 96/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Gwang Yang BBQ, Robeks Juice, Ice Cream, and Central Plaza 3, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=647 request_id=975fcfe0440fa54a234a222719af1985 response_code=200
Extracting referring expressions from utterance: 97/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Wako, Ice Cream, POT, and Foothill Transit, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=649 request_id=d30c9cb2e8dc909b00925d9a32721a0d response_code=200
Extracting referring expressions from utterance: 98/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit locations The Line, California Design College, Sun Nong Dan, and Central Plaza 1, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=741 request_id=f66621896099120772d82e04b2b458a0 response_code=200
Extracting referring expressions from utterance: 99/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit locations Wilshire-Kenmore Building, BBQ Premium Chicken, Korean Bbq, and Wilshire/Normandie, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=888 request_id=4e846f4ec29fae69f6bdc313a6b9b084 response_code=200
Extracting referring expressions from utterance: 100/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting The Line, Korean Bbq, Wilshire-Kenmore Building, and Togo\'s\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1004 request_id=6e49ed19df2f0e3ee6586d1a35a35c92 response_code=200
Extracting referring expressions from utterance: 101/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Carl\'s Jr., Etude Lounge, Coffee Bean & Tea Leaf, and Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1336 request_id=09caa38a4a82494aa9e4e85d7bb8b172 response_code=200
Extracting referring expressions from utterance: 102/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Big 5 Sporting Goods, Etude Lounge, POT, and Central Plaza 1\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=839 request_id=40ec661bd9c7f56b3aacd272f7e62020 response_code=200
Extracting referring expressions from utterance: 103/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Home Cafe, Big 5 Sporting Goods, Mermaid Cafe, and Carl\'s Jr.\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=dc38b25edd2d0abb0b11758bcf642424 response_code=200
Extracting referring expressions from utterance: 104/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Details, California Design College, Robeks Juice, and Zan ResPub, over and over again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=545 request_id=ae7116f6fa2aed4fd0840e78b42758e6 response_code=200
Extracting referring expressions from utterance: 105/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to California Design College, Wako, Robeks Juice, and Korean BBQ, over and over again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=632 request_id=6a7765304bd32a9a7e7f8d928b4f29bd response_code=200
Extracting referring expressions from utterance: 106/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue to stop at Big 5 Sporting Goods, Wako, Neris Filipino Dining, and Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 331
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=798 request_id=b7dc8593da238e6dcdda431b753e9b17 response_code=200
Extracting referring expressions from utterance: 107/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue to stop at Koko Pizza, Etude Lounge, Equitable Life Building, and Ice Cream\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=879 request_id=6e9e57856b76f4e4e562d466fe302fd7 response_code=200
Extracting referring expressions from utterance: 108/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continuously visit Wilshire-Kenmore Building, Sun Nong Dan, Neris Filipino Dining, and Tarboosh middle East kitchen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1105 request_id=9b442ac628765f41248bfe7dc0d6c855 response_code=200
Extracting referring expressions from utterance: 109/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continuously visit Home Cafe, Robeks Juice, Coffee Bean & Tea Leaf, and BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=967 request_id=38c52b01096b353f5e4a9c615d7805c4 response_code=200
Extracting referring expressions from utterance: 110/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Equitable Life Building, Etude Lounge, Central Plaza 3, and Tarboosh middle East kitchen, Etude Lounge, finite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=744 request_id=c71eaf7c6f3fcdc755564c1b3cfcbda6 response_code=200
Extracting referring expressions from utterance: 111/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Details, Central Plaza 3, Bayou Smokehouse, and Sun Nong Dan, Central Plaza 3, finite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=805 request_id=bc303d71dba019a65736832296b1805f response_code=200
Extracting referring expressions from utterance: 112/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: perpetually travel to Bongchu, Wako, and Seaweed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=743 request_id=6fa5260bda2366cec2ba28c1e0c23402 response_code=200
Extracting referring expressions from utterance: 113/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: perpetually travel to Tarboosh middle East kitchen, Big 5 Sporting Goods, and Home Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=458 request_id=efe8a1a8135361f1365bab4f00b5bc3e response_code=200
Extracting referring expressions from utterance: 114/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: explore Korean Bbq, Hair News, and Details, endlessy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=553 request_id=19683399ea1fbdfe4601fa42c9ab8492 response_code=200
Extracting referring expressions from utterance: 115/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: explore Hair News, The Line, and Ice Cream, endlessy\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=737 request_id=5239908ab97b2f7aee0a69142da94f49 response_code=200
Extracting referring expressions from utterance: 116/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are prohibited from not infinitely going to Korean Bbq, Tarboosh middle East kitchen, Bongchu, and Home Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=907 request_id=0e6c5f4759fc12a5d8279ebc354b3920 response_code=200
Extracting referring expressions from utterance: 117/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are prohibited from not infinitely going to Zan ResPub, Consulat General of the Republic of Indonesia, Ice Cream, and Wilshire/Normandie\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=808 request_id=2887cd7217cba308d7e8edc958dc2339 response_code=200
Extracting referring expressions from utterance: 118/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Wilshire-Kenmore Building, Coffee Bean & Tea Leaf, Crystal Spa, and Happy Noodle, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=844 request_id=55ab89640d33eb14c05aed2d83b91664 response_code=200
Extracting referring expressions from utterance: 119/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Tarboosh middle East kitchen, Foothill Transit, Robeks Juice, and Happy Noodle, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=902 request_id=0d5144772eb41a13375c894f91b39e3a response_code=200
Extracting referring expressions from utterance: 120/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to The Line, Consulat General of the Republic of Indonesia, Tarboosh middle East kitchen, and Seaweed, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=947 request_id=fbcbfe2d749d2242571599c7236c7ba5 response_code=200
Extracting referring expressions from utterance: 121/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Metro, Mali Taste of Thailand, Foothill Transit, and Wilshire/Normandie, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=826 request_id=964f8ef11c50e03148858797015deffc response_code=200
Extracting referring expressions from utterance: 122/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Ice Cream, Korean Bbq, Carl\'s Jr., and Mali Taste of Thailand, in any order infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=666 request_id=efd1ec39fc2f546af198332289001fcc response_code=200
Extracting referring expressions from utterance: 123/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting The Boiling Crab, POT, Central Plaza 3, and Korean Bbq, in any order infinitely\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=774 request_id=d1627677da710c4cf42020e9c0347580 response_code=200
Extracting referring expressions from utterance: 124/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Korean BBQ, POT, Gwang Yang BBQ, and Robeks Juice, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=776 request_id=92ff6d42695d5bae67e7bd0c9f04cf3b response_code=200
Extracting referring expressions from utterance: 125/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Zan ResPub, Sun Nong Dan, Foothill Transit, and POT, in no specific order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 315
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=867 request_id=d80e2bc790fa79c24404330f46d96368 response_code=200
Extracting referring expressions from utterance: 126/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop going to Happy Noodle, Carl\'s Jr., Zan ResPub, and Wilshire/Normandie, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=979 request_id=21f349fcb8b9db0c7514eb1fd2cf3201 response_code=200
Extracting referring expressions from utterance: 127/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop going to Happy Noodle, Wilshire-Kenmore Building, Ice Cream, and Details, in any order\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1131 request_id=a2e837e266f77305c09d3b3502a2b77e response_code=200
Extracting referring expressions from utterance: 128/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Togo\'s, Bongchu, Equitable Life Building, and Crystal Spa, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=960 request_id=381a83c27762ad44ca7d131960bf9b9b response_code=200
Extracting referring expressions from utterance: 129/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep going to Mermaid Cafe, Details, POT, and Koko Pizza, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=872 request_id=32f4c0b9c6ab8300abda0fa432beaf52 response_code=200
Extracting referring expressions from utterance: 130/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Big 5 Sporting Goods, BBQ Premium Chicken, Hair News, and Crystal Spa, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=747 request_id=7a13cd5ca2a027857d80792fe283a220 response_code=200
Extracting referring expressions from utterance: 131/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: keep visiting Details, POT, Bayou Smokehouse, and Happy Noodle, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=587 request_id=c8d719583d7a216e9d25f420063756b9 response_code=200
Extracting referring expressions from utterance: 132/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue visiting Tarboosh middle East kitchen, Koko Pizza, Coffee Bean & Tea Leaf, and Zan ResPub, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1151 request_id=b9fe28ca29da274acd6aa86d941a08b8 response_code=200
Extracting referring expressions from utterance: 133/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: continue visiting Consulat General of the Republic of Indonesia, Crystal Spa, Neris Filipino Dining, and Sun Nong Dan, an infinite number of times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1021 request_id=6362e3b124df3f6f4554b5c34095ff72 response_code=200
Extracting referring expressions from utterance: 134/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting BBQ Premium Chicken, Ice Cream, Details, and Koko Pizza\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=528 request_id=f5319dcf44c08bf952bdf49f82baea72 response_code=200
Extracting referring expressions from utterance: 135/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not stop visiting Big 5 Sporting Goods, Metro, Crystal Spa, and Consulat General of the Republic of Indonesia\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1293 request_id=4b28e27ba8e2ccea5ef7338d7d9bbcd2 response_code=200
Extracting referring expressions from utterance: 136/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Tarboosh middle East kitchen, Ice Cream, or BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=798 request_id=c8a20e814b31e39057a37f4e703d311a response_code=200
Extracting referring expressions from utterance: 137/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Zan ResPub, Korean Bbq, or Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=802 request_id=24ffff0e2c6047e02ab45e0cf79cd34a response_code=200
Extracting referring expressions from utterance: 138/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never visit Mali Taste of Thailand, Ice Cream, or Coffee Bean & Tea Leaf\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=607 request_id=49d29e67f09a86459a54d785fe08660e response_code=200
Extracting referring expressions from utterance: 139/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never visit Foothill Transit, The Gaylord Apartments, or Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=671 request_id=e939b84c7a3f2339016f9bc6336dc5cb response_code=200
Extracting referring expressions from utterance: 140/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to California Design College, BBQ Premium Chicken, and Koko Pizza\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=bb066754cdb0134afaea7276ed01f69c response_code=200
Extracting referring expressions from utterance: 141/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to POT, Consulat General of the Republic of Indonesia, and Bayou Smokehouse\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=947 request_id=6be5559fb7ce690e9613c14287cc905b response_code=200
Extracting referring expressions from utterance: 142/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Wilshire-Kenmore Building, Equitable Life Building, and POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=854 request_id=034342d349321ad6f226d17f22ae9bd9 response_code=200
Extracting referring expressions from utterance: 143/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Mermaid Cafe, Robeks Juice, and Seaweed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=3fa1b7055d58ff6c641af912a55bef27 response_code=200
Extracting referring expressions from utterance: 144/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Tarboosh middle East kitchen, Hair News, and Korean BBQ, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=628 request_id=945c4140cd3d7c8f59a7d58df4a4cb1a response_code=200
Extracting referring expressions from utterance: 145/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Central Plaza 1, Coffee Bean & Tea Leaf, and Zan ResPub, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=47057a7f2e03b21b9b00efe103e44d5e response_code=200
Extracting referring expressions from utterance: 146/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Happy Noodle, Mali Taste of Thailand, or Hair News, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=569 request_id=f27b5ca7bcfe3e947f18c63713d3a84d response_code=200
Extracting referring expressions from utterance: 147/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit BBQ Premium Chicken, Hair News, or Korean Bbq, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=506 request_id=52a8dbfcff87890b55b1ca7fbc27df8e response_code=200
Extracting referring expressions from utterance: 148/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Bayou Smokehouse, Mermaid Cafe, or Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=552 request_id=069a05c3d254b4eaa3da28adf574c8e5 response_code=200
Extracting referring expressions from utterance: 149/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Crystal Spa, Bongchu, or Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=681 request_id=11772d42fec15043ad9c09f4e5d91390 response_code=200
Extracting referring expressions from utterance: 150/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Wilshire-Kenmore Building, Ice Cream, and The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=924 request_id=40413e73888341bc2da1cb4867812170 response_code=200
Extracting referring expressions from utterance: 151/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to Central Plaza 3, Mermaid Cafe, and BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=991 request_id=6561ad17e4ac3acfa4044ebe1343196c response_code=200
Extracting referring expressions from utterance: 152/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit either one among Hair News, Mermaid Cafe, and POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=06427ffd79aef1221a854c5b9808a6bf response_code=200
Extracting referring expressions from utterance: 153/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit either one among Etude Lounge, Carl\'s Jr., and Robeks Juice\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=459 request_id=b43879bf5da81362614841f7d9f30ae8 response_code=200
Extracting referring expressions from utterance: 154/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach the locations Bayou Smokehouse, Korean BBQ, and California Design College\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=6aebdb563ef4849f3c933d1f650a9a12 response_code=200
Extracting referring expressions from utterance: 155/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach the locations Tarboosh middle East kitchen, Korean BBQ, and Mermaid Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=648 request_id=a94743f9d7690151d6d090206c159e5a response_code=200
Extracting referring expressions from utterance: 156/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach Mali Taste of Thailand, ensure that you never reach California Design College, and ensure that you never reach The Boiling Crab\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=592 request_id=7c373c94f083d7fd2ac4698bb69754f9 response_code=200
Extracting referring expressions from utterance: 157/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you never reach Details, ensure that you never reach Korean Bbq, and ensure that you never reach Central Plaza 3\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=38e50a0a78348cf4943db3ec14b69a12 response_code=200
Extracting referring expressions from utterance: 158/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Koko Pizza, The Boiling Crab, and BBQ Premium Chicken, should never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=399 request_id=c6d2188d34e595ccb714ace2ebbc668f response_code=200
Extracting referring expressions from utterance: 159/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: The Boiling Crab, Foothill Transit, and Details, should never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=644 request_id=eb76e68cc51c11ac1d83b59f7c079a30 response_code=200
Extracting referring expressions from utterance: 160/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Bongchu, Mermaid Cafe, or Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 313
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=461 request_id=acb23dc7713698e948619b5c13ab6544 response_code=200
Extracting referring expressions from utterance: 161/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Big 5 Sporting Goods, Wilshire-Kenmore Building, or Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=829 request_id=423fa87bbed4bd23c639a0a384f3a699 response_code=200
Extracting referring expressions from utterance: 162/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Happy Noodle, Seaweed, and Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=778 request_id=06f44d614602035bc517851113d2efa9 response_code=200
Extracting referring expressions from utterance: 163/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Korean Bbq, Coffee Bean & Tea Leaf, and Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=877 request_id=dd84162cbd00d31b76b33633c2380091 response_code=200
Extracting referring expressions from utterance: 164/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Neris Filipino Dining, Zan ResPub, and Big 5 Sporting Goods, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=500 request_id=17e3b5f6a945079bb0e65420e152a245 response_code=200
Extracting referring expressions from utterance: 165/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Bongchu, Etude Lounge, and Big 5 Sporting Goods, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=680 request_id=36479b302b894349825d028a9946a615 response_code=200
Extracting referring expressions from utterance: 166/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Korean BBQ, Etude Lounge, and POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=9df38fc1c5af32e3ce8b924366eb8582 response_code=200
Extracting referring expressions from utterance: 167/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Neris Filipino Dining, Happy Noodle, and The Boiling Crab\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=568 request_id=0366f4418f6c640044a3f99e43e985ee response_code=200
Extracting referring expressions from utterance: 168/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Bongchu, Seaweed, and Zan ResPub, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=921 request_id=a68d485bee450c47c91f1b02289e5592 response_code=200
Extracting referring expressions from utterance: 169/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Big 5 Sporting Goods, Bayou Smokehouse, and Mali Taste of Thailand, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=cdf806b8b6b504044f8b11ceb731427b response_code=200
Extracting referring expressions from utterance: 170/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to BBQ Premium Chicken, Koko Pizza, or Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=714 request_id=1d07f076b87a2a7c644ae9373a862bdc response_code=200
Extracting referring expressions from utterance: 171/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Bayou Smokehouse, POT, or Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=570b5e199ec9a362001607f304363f61 response_code=200
Extracting referring expressions from utterance: 172/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Metro, Togo\'s, and Big 5 Sporting Goods, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=403 request_id=3bd6e4694907a0c97c0fe91093d0f432 response_code=200
Extracting referring expressions from utterance: 173/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Foothill Transit, Koko Pizza, and Mermaid Cafe, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=427 request_id=8f8c7943cd3eab928d85753e3a868c0f response_code=200
Extracting referring expressions from utterance: 174/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Coffee Bean & Tea Leaf, Zan ResPub, or Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=509 request_id=5c95a7fbf3ff2796cf8ae92f8e4f1cf8 response_code=200
Extracting referring expressions from utterance: 175/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Home Cafe, Carl\'s Jr., or Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=428 request_id=4787d24c0cb6cc21482d43b25652ff7b response_code=200
Extracting referring expressions from utterance: 176/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Details, Koko Pizza, or Bongchu, can never become true at any instant\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=410 request_id=5d3e9dc27c167f6c742be76dcd0df8c8 response_code=200
Extracting referring expressions from utterance: 177/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Neris Filipino Dining, Robeks Juice, or Wilshire/Normandie, can never become true at any instant\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 322
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=853 request_id=c22945ba051864e9ae456f0cd45bc0b3 response_code=200
Extracting referring expressions from utterance: 178/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Foothill Transit, Tarboosh middle East kitchen, and The Gaylord Apartments, never hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=686 request_id=ef3f7af74d11902bdb4713841e46ff5c response_code=200
Extracting referring expressions from utterance: 179/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Sun Nong Dan, Robeks Juice, and Consulat General of the Republic of Indonesia, never hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=e56ab68fe97ef05e33c85585577122ab response_code=200
Extracting referring expressions from utterance: 180/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit Metro, Mali Taste of Thailand, Seaweed, or Consulat General of the Republic of Indonesia\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=998d28ff6a9dfaf701b8db90abd0ed20 response_code=200
Extracting referring expressions from utterance: 181/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit Tarboosh middle East kitchen, Mermaid Cafe, Wilshire/Normandie, or Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=944 request_id=9c10147224c7f2a90641c2808e922202 response_code=200
Extracting referring expressions from utterance: 182/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Central Plaza 3, Consulat General of the Republic of Indonesia, Seaweed, or Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=856 request_id=ac3dbca9ad74ae39a1ef3995ee9a4190 response_code=200
Extracting referring expressions from utterance: 183/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Koko Pizza, Home Cafe, Consulat General of the Republic of Indonesia, or Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=783 request_id=19cdaac600b2e4a386e230f643c853a9 response_code=200
Extracting referring expressions from utterance: 184/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Tarboosh middle East kitchen, Central Plaza 1, Metro, or Big 5 Sporting Goods, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1114 request_id=61991119fbc072ddac83665a7ff231a1 response_code=200
Extracting referring expressions from utterance: 185/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Wilshire/Normandie, Togo\'s, The Gaylord Apartments, or Coffee Bean & Tea Leaf, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=916 request_id=660c2e39f6d5cdf0fee67dba6d86cb27 response_code=200
Extracting referring expressions from utterance: 186/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Seaweed, Consulat General of the Republic of Indonesia, Ice Cream, or Robeks Juice\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=647 request_id=a0d1536fc78a2088b6b3f7bc512f8be1 response_code=200
Extracting referring expressions from utterance: 187/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Mali Taste of Thailand, Big 5 Sporting Goods, Bongchu, or BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 342
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=927 request_id=35b2a116bacde12e89fcdb249bf782d7 response_code=200
Extracting referring expressions from utterance: 188/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Korean BBQ, Equitable Life Building, Consulat General of the Republic of Indonesia, or The Boiling Crab\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 368
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1864 request_id=e9d040ab0918e6347f3d0cb6a5ba8153 response_code=200
Extracting referring expressions from utterance: 189/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Equitable Life Building, Koko Pizza, Crystal Spa, or Robeks Juice\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=676 request_id=a561ad47e804502558da3379e6a4aa07 response_code=200
Extracting referring expressions from utterance: 190/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from The Gaylord Apartments, Togo\'s, Happy Noodle, and Carl\'s Jr.\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=622 request_id=3345041af1912cf8e631c454d7d6abc1 response_code=200
Extracting referring expressions from utterance: 191/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Mermaid Cafe, Zan ResPub, Home Cafe, and Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=691 request_id=ff44c3972ab2a5b5620dfee367d5a087 response_code=200
Extracting referring expressions from utterance: 192/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Mermaid Cafe, Wilshire-Kenmore Building, The Line, and Details, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=af44f5c3f0886921db7a03390460a346 response_code=200
Extracting referring expressions from utterance: 193/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Foothill Transit, Happy Noodle, Neris Filipino Dining, and Crystal Spa, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=698 request_id=74fa5b9ae2dffb088eea26179573be6c response_code=200
Extracting referring expressions from utterance: 194/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit any locations among Metro, Robeks Juice, Ice Cream, Carl\'s Jr.\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 310
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=774b26ddbd5ac8164397d8b0e4d11427 response_code=200
Extracting referring expressions from utterance: 195/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit any locations among Hair News, Bongchu, Koko Pizza, Details\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=895 request_id=1263ecafda3b31d0b0b7552964440f21 response_code=200
Extracting referring expressions from utterance: 196/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure to not reach any of Zan ResPub, Foothill Transit, Home Cafe, and POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=ac544520f2d1eae0555c35f2cf696c8c response_code=200
Extracting referring expressions from utterance: 197/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure to not reach any of Carl\'s Jr., Mermaid Cafe, Consulat General of the Republic of Indonesia, and Korean Bbq\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=901 request_id=05e01dadf0d8a939e8f275eff22017ed response_code=200
Extracting referring expressions from utterance: 198/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to POT, Big 5 Sporting Goods, Robeks Juice, and Wilshire-Kenmore Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=919 request_id=55703b8988e2fd5aaf5f70043e954c85 response_code=200
Extracting referring expressions from utterance: 199/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid going to The Gaylord Apartments, Korean Bbq, Hair News, and Wilshire-Kenmore Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=602 request_id=017386ffb3167c83d78ce27fa6672563 response_code=200
Extracting referring expressions from utterance: 200/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Carl\'s Jr., Robeks Juice, Wilshire/Normandie, and Happy Noodle, must never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 326
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=885 request_id=70b07073154bcfcf6959860c3f92a09f response_code=200
Extracting referring expressions from utterance: 201/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Zan ResPub, Koko Pizza, Mali Taste of Thailand, and Wilshire/Normandie, must never be visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=624 request_id=1793d8a7930e3b3cd77253880b0d7b9a response_code=200
Extracting referring expressions from utterance: 202/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Sun Nong Dan, never go to Etude Lounge, never go to Gwang Yang BBQ, and never go to The Boiling Crab\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=941 request_id=1dfc952a66b979fdab6a75bce49cbcd6 response_code=200
Extracting referring expressions from utterance: 203/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Korean Bbq, never go to Etude Lounge, never go to The Boiling Crab, and never go to Wako\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=94860a06ddc8d6c4eaa2245956d4f9fd response_code=200
Extracting referring expressions from utterance: 204/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Central Plaza 1, BBQ Premium Chicken, Details, or POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1106 request_id=e0eb484319849ac9824e847a27e0825f response_code=200
Extracting referring expressions from utterance: 205/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Carl\'s Jr., Togo\'s, Foothill Transit, or Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=791 request_id=3fb1f748b3722231e24512f5f82da669 response_code=200
Extracting referring expressions from utterance: 206/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Tarboosh middle East kitchen, Happy Noodle, California Design College, or Gwang Yang BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=662 request_id=bf3fae3e4831b011af988f086e9fc4d1 response_code=200
Extracting referring expressions from utterance: 207/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Big 5 Sporting Goods, Wilshire-Kenmore Building, Bayou Smokehouse, or Wilshire/Normandie\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=682 request_id=b31eda1fc48990f4c91b83e3d892123b response_code=200
Extracting referring expressions from utterance: 208/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but California Design College, Gwang Yang BBQ, Bayou Smokehouse, and Robeks Juice\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1752 request_id=6497a996f462786a0b947aa05a23db6a response_code=200
Extracting referring expressions from utterance: 209/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Neris Filipino Dining, Central Plaza 1, Carl\'s Jr., and The Line\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1006 request_id=55b3a8c477698ca545056ca95b060a14 response_code=200
Extracting referring expressions from utterance: 210/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Ice Cream, Central Plaza 3, Equitable Life Building, and California Design College, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=752 request_id=078e6322aae6fc326bb030b52ff7954f response_code=200
Extracting referring expressions from utterance: 211/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Korean BBQ, Foothill Transit, Togo\'s, and Korean Bbq, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=900 request_id=30a902a5d44f26e8e9e405ee5a0b3763 response_code=200
Extracting referring expressions from utterance: 212/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Zan ResPub, Home Cafe, Tarboosh middle East kitchen, and Foothill Transit\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=735 request_id=46e1a67a96c44482e496ae8655f7676b response_code=200
Extracting referring expressions from utterance: 213/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Bayou Smokehouse, Etude Lounge, Korean Bbq, and Bongchu\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 319
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=84e45561f70e06407a0bd07229ea64ed response_code=200
Extracting referring expressions from utterance: 214/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Equitable Life Building, Sun Nong Dan, Bayou Smokehouse, and Wako, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=624 request_id=c1d4e97b1021a831bedce798a7218ece response_code=200
Extracting referring expressions from utterance: 215/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Bongchu, Mali Taste of Thailand, Koko Pizza, and Sun Nong Dan, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=32b8a4778e62ec08d8fd479dcacb24aa response_code=200
Extracting referring expressions from utterance: 216/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Korean BBQ, Foothill Transit, Mali Taste of Thailand, or Wilshire/Normandie\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 340
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=606 request_id=6aa8b25ded27e65683e4e4ade22151b3 response_code=200
Extracting referring expressions from utterance: 217/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to POT, Crystal Spa, Gwang Yang BBQ, or Wako\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=612 request_id=d076a384c61fc290df60b1105ce3c7e2 response_code=200
Extracting referring expressions from utterance: 218/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid The Boiling Crab, Sun Nong Dan, Wilshire/Normandie, and Korean Bbq, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=847 request_id=e447963ac629a8f488318dd175f4915e response_code=200
Extracting referring expressions from utterance: 219/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid California Design College, Wako, Mermaid Cafe, and Mali Taste of Thailand, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 337
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=632 request_id=1d4bf718cdb43daa95d75f07316d870f response_code=200
Extracting referring expressions from utterance: 220/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Gwang Yang BBQ, Hair News, Home Cafe, or Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 327
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=879 request_id=8cabeba1d21ccc63bd38f41a08fe37f7 response_code=200
Extracting referring expressions from utterance: 221/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Central Plaza 1, Mermaid Cafe, Big 5 Sporting Goods, or Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=938 request_id=8c30d2b895c051ebdbc77030f864da5e response_code=200
Extracting referring expressions from utterance: 222/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Equitable Life Building, Korean Bbq, Details, and Wilshire-Kenmore Building, must never be allowed to be true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=958 request_id=41c3febc12b3513c02a3c468197b99db response_code=200
Extracting referring expressions from utterance: 223/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Mermaid Cafe, Wako, The Line, and Carl\'s Jr., must never be allowed to be true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 308
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=d0cdac1a708e049fd68cd13e8f95180d response_code=200
Extracting referring expressions from utterance: 224/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go through any of Korean Bbq, Tarboosh middle East kitchen, The Gaylord Apartments, or Wako\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=959 request_id=c8c976f9bb1e5be419acd64a508b0b53 response_code=200
Extracting referring expressions from utterance: 225/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go through any of Coffee Bean & Tea Leaf, POT, Robeks Juice, or Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 316
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=899 request_id=1fd00e1a185bc4de74a462b6379accd2 response_code=200
Extracting referring expressions from utterance: 226/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit Foothill Transit, Etude Lounge, Korean BBQ, The Gaylord Apartments, or Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=935 request_id=6d9737410ffe55ab85e6674a94b010c5 response_code=200
Extracting referring expressions from utterance: 227/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never visit POT, Carl\'s Jr., Korean BBQ, The Gaylord Apartments, or Tarboosh middle East kitchen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 350
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=903 request_id=3f40e36d68bfbf3385e784bb80839c53 response_code=200
Extracting referring expressions from utterance: 228/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Bongchu, BBQ Premium Chicken, POT, Togo\'s, or Bayou Smokehouse\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=990 request_id=2c003b6cd34f9f664ab2934267f59820 response_code=200
Extracting referring expressions from utterance: 229/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can never go to Metro, Foothill Transit, Equitable Life Building, Crystal Spa, or Details\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=751 request_id=faa670849d534d534cea39562dcfac80 response_code=200
Extracting referring expressions from utterance: 230/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Neris Filipino Dining, Consulat General of the Republic of Indonesia, Etude Lounge, Seaweed, or The Boiling Crab, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 378
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1498 request_id=f00baac6d2655cf7c01ec5899287fc74 response_code=200
Extracting referring expressions from utterance: 231/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Central Plaza 3, Mali Taste of Thailand, Koko Pizza, Bongchu, or Wilshire-Kenmore Building, at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 356
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=867 request_id=b2be429260d6db09259d3c0562127e79 response_code=200
Extracting referring expressions from utterance: 232/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit The Line, Zan ResPub, Seaweed, Tarboosh middle East kitchen, or Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1166 request_id=6676b4782ecaac75c5e944693fac130d response_code=200
Extracting referring expressions from utterance: 233/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never visit Korean Bbq, Mali Taste of Thailand, Korean BBQ, Carl\'s Jr., or POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=788 request_id=018f28a92884d9a403bf3024facb95aa response_code=200
Extracting referring expressions from utterance: 234/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Home Cafe, Coffee Bean & Tea Leaf, Seaweed, Big 5 Sporting Goods, and Sun Nong Dan\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=849 request_id=5e8dbef6318b5fa455ef8dbb347496df response_code=200
Extracting referring expressions from utterance: 235/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always avoid going to Consulat General of the Republic of Indonesia, POT, Big 5 Sporting Goods, Details, and Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 357
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=939 request_id=d9a25d4fb75809abe56a0e77c586d9bb response_code=200
Extracting referring expressions from utterance: 236/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Hair News, BBQ Premium Chicken, The Boiling Crab, Foothill Transit, and The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=790 request_id=59b8498d948586635218abb52d2a5238 response_code=200
Extracting referring expressions from utterance: 237/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always stay away from Equitable Life Building, The Gaylord Apartments, Sun Nong Dan, Zan ResPub, and Hair News\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=796 request_id=ac22fda38cd5378fb150136463483566 response_code=200
Extracting referring expressions from utterance: 238/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Coffee Bean & Tea Leaf, Zan ResPub, Neris Filipino Dining, Big 5 Sporting Goods, and Bongchu, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 357
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1282 request_id=413b0118675cc2188f1e8f1ad9425da6 response_code=200
Extracting referring expressions from utterance: 239/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid California Design College, Bongchu, The Gaylord Apartments, Korean Bbq, and BBQ Premium Chicken, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 360
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=562 request_id=eca6db93665a5c6405f2a9b5605560b4 response_code=200
Extracting referring expressions from utterance: 240/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Robeks Juice, never go to The Line, never go to Sun Nong Dan, never reach Hair News, and never reach Big 5 Sporting Goods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=938 request_id=e7a3726e6085744fc5582ef7fdc4157e response_code=200
Extracting referring expressions from utterance: 241/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Seaweed, never go to Crystal Spa, never go to Details, never reach Ice Cream, and never reach Wilshire/Normandie\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=850 request_id=cac52a38cfee03614b23e5eeaff7d59f response_code=200
Extracting referring expressions from utterance: 242/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never reach the following locations Mali Taste of Thailand, Sun Nong Dan, Togo\'s, Consulat General of the Republic of Indonesia, and Carl\'s Jr.\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 372
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=873 request_id=3707516721d9cec0d62e93e0170d48a2 response_code=200
Extracting referring expressions from utterance: 243/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you never reach the following locations Consulat General of the Republic of Indonesia, Sun Nong Dan, Ice Cream, Koko Pizza, and Hair News\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 362
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=2017 request_id=fdf5628dbe1ac447eb31c1561115a81c response_code=200
Extracting referring expressions from utterance: 244/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that Ice Cream, The Line, The Gaylord Apartments, Hair News, and Wako, are never visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=926 request_id=3f2f90a4e97c8c69f5fbe92adf32d8a4 response_code=200
Extracting referring expressions from utterance: 245/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that California Design College, Korean Bbq, Happy Noodle, Wilshire-Kenmore Building, and Mali Taste of Thailand, are never visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 371
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1500 request_id=82734c3cbcc1886fe6a66c0d2ba7546f response_code=200
Extracting referring expressions from utterance: 246/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Details, Seaweed, Central Plaza 3, Mermaid Cafe, and Neris Filipino Dining, should never be reached\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 339
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=891 request_id=c698af59b49778e1c0646d0c6f319998 response_code=200
Extracting referring expressions from utterance: 247/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Wilshire/Normandie, Coffee Bean & Tea Leaf, Etude Lounge, The Line, and Korean BBQ, should never be reached\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1178 request_id=4b6919fbe031132bd76b758e2081af75 response_code=200
Extracting referring expressions from utterance: 248/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Foothill Transit, Korean BBQ, Mermaid Cafe, Zan ResPub, or POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 328
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1021 request_id=fc420f7f5d4cc27d0032be0a176172c5 response_code=200
Extracting referring expressions from utterance: 249/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Seaweed, Metro, Robeks Juice, The Line, or Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 321
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=696 request_id=c77506d9c6e61c9b58409c700de68bcc response_code=200
Extracting referring expressions from utterance: 250/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Central Plaza 3, Etude Lounge, Ice Cream, Big 5 Sporting Goods, or Wilshire/Normandie\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=870 request_id=48b09bcf5938cfc4c8bd28b092760d35 response_code=200
Extracting referring expressions from utterance: 251/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Koko Pizza, Bayou Smokehouse, Details, Central Plaza 3, or Consulat General of the Republic of Indonesia\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 370
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=933 request_id=418b0d63bb3bca2ee87460a44adbf9c2 response_code=200
Extracting referring expressions from utterance: 252/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Sun Nong Dan, The Line, Togo\'s, Bongchu, and Koko Pizza\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 320
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=862 request_id=975b1160af92f00d7dfc45fad6b7279b response_code=200
Extracting referring expressions from utterance: 253/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go anywhere but Seaweed, Etude Lounge, Central Plaza 3, Wilshire-Kenmore Building, and Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=875 request_id=614cef6193d8fd9f88d07b53ced6e834 response_code=200
Extracting referring expressions from utterance: 254/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: The Boiling Crab, Details, Ice Cream, Wilshire-Kenmore Building, and Bongchu, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 341
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=1175f8b4ebdb143815c2542b2aecc4b1 response_code=200
Extracting referring expressions from utterance: 255/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Big 5 Sporting Goods, Togo\'s, Central Plaza 3, Home Cafe, and BBQ Premium Chicken, can not be visited at any time\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=873 request_id=bb7da167d4ce83dd20ce3428f6fcccf0 response_code=200
Extracting referring expressions from utterance: 256/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Happy Noodle, Wako, Details, The Gaylord Apartments, and Coffee Bean & Tea Leaf\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 344
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=898 request_id=71f8b1afa46e32bf5142a9556e512405 response_code=200
Extracting referring expressions from utterance: 257/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: always keep away from Mali Taste of Thailand, Big 5 Sporting Goods, The Line, Coffee Bean & Tea Leaf, and The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 371
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1085 request_id=95d7a06d83d63c0bfa37ebb188258fab response_code=200
Extracting referring expressions from utterance: 258/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Crystal Spa, Wako, Metro, Robeks Juice, and Equitable Life Building, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 332
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=862 request_id=0e9ba358434009690ecdc3967866e595 response_code=200
Extracting referring expressions from utterance: 259/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid The Boiling Crab, Carl\'s Jr., Happy Noodle, Togo\'s, and Wilshire-Kenmore Building, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 346
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=930 request_id=9215ff832f07b8df68c56c627d540ca2 response_code=200
Extracting referring expressions from utterance: 260/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Carl\'s Jr., Hair News, Wilshire-Kenmore Building, Tarboosh middle East kitchen, or Consulat General of the Republic of Indonesia\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 394
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1291 request_id=f15d7d20c44c012502d1790dde9c5752 response_code=200
Extracting referring expressions from utterance: 261/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Details, POT, Foothill Transit, Korean Bbq, or Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1382 request_id=913d80f5f4b765f708fa130d6ea7b23e response_code=200
Extracting referring expressions from utterance: 262/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Mermaid Cafe, POT, Crystal Spa, Ice Cream, and Metro, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 317
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=456 request_id=2b12c8c084ed3191313fd7199f30908f response_code=200
Extracting referring expressions from utterance: 263/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Tarboosh middle East kitchen, Ice Cream, Mermaid Cafe, Hair News, and The Boiling Crab, forever\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=878 request_id=38e2e88891a17f6db9f8925f7bd23d6f response_code=200
Extracting referring expressions from utterance: 264/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Etude Lounge, Central Plaza 3, Mermaid Cafe, Home Cafe, or Carl\'s Jr.\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 335
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=63271d97cb79d87f4aad0aeec6c78c54 response_code=200
Extracting referring expressions from utterance: 265/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not make any single visit to Bayou Smokehouse, Coffee Bean & Tea Leaf, Bongchu, Metro, or Hair News\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=830 request_id=8616f846a684b795c9225880724e11bb response_code=200
Extracting referring expressions from utterance: 266/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that none among Neris Filipino Dining, Hair News, Korean BBQ, Tarboosh middle East kitchen, and Seaweed, are ever visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 352
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1145 request_id=7a631af55535787dd9014ecd52209b42 response_code=200
Extracting referring expressions from utterance: 267/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that none among Neris Filipino Dining, Central Plaza 3, Big 5 Sporting Goods, Consulat General of the Republic of Indonesia, and Details, are ever visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 385
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1422 request_id=8a7d9e6703919ce07ae14cb7ea770288 response_code=200
Extracting referring expressions from utterance: 268/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Hair News, Seaweed, Happy Noodle, Korean BBQ, and Carl\'s Jr., must never be allowed to hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=951 request_id=d8790c588233b1ad96b901f39b79b891 response_code=200
Extracting referring expressions from utterance: 269/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Foothill Transit, The Gaylord Apartments, Central Plaza 3, California Design College, and Wilshire-Kenmore Building, must never be allowed to hold true\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 380
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1339 request_id=ab76aaf90748b9d1f15bd799c8510b2f response_code=200
Extracting referring expressions from utterance: 270/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Bayou Smokehouse, until you see Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=467 request_id=2ed8ff5447ceda91f272cbc96bed625a response_code=200
Extracting referring expressions from utterance: 271/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Wako, until you see Korean Bbq\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=9ba552ed7030c7ab48c748f22fadb77c response_code=200
Extracting referring expressions from utterance: 272/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid visiting Gwang Yang BBQ, till you observe Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=437 request_id=3d9ebb4ee7f7b08a7cdbf3d9a7f5d9b4 response_code=200
Extracting referring expressions from utterance: 273/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid visiting Koko Pizza, till you observe Details\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=aab12aa42823ccc594b46eb46a387844 response_code=200
Extracting referring expressions from utterance: 274/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Central Plaza 1, until Zan ResPub, has occured\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=392 request_id=e2a7f0dc12a2100dff1571adecd7e101 response_code=200
Extracting referring expressions from utterance: 275/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to The Gaylord Apartments, until Central Plaza 1, has occured\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=0063619b4a9c5986088e4f41f0f8808f response_code=200
Extracting referring expressions from utterance: 276/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you observe POT, only then are you allowed to go to Wilshire-Kenmore Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=520 request_id=ee1f951a2e74bf89855410494fe101d5 response_code=200
Extracting referring expressions from utterance: 277/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you observe Details, only then are you allowed to go to Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=429 request_id=4af87bebc7b4591080276c015d907d4b response_code=200
Extracting referring expressions from utterance: 278/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Gwang Yang BBQ, only after seeing Central Plaza 1\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=404 request_id=e3b435b2987f3348ab5f4aead7d048c2 response_code=200
Extracting referring expressions from utterance: 279/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Robeks Juice, only after seeing Mermaid Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=400 request_id=f332ae45a7f3242ef943797051187a0f response_code=200
Extracting referring expressions from utterance: 280/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Wilshire/Normandie, until you go to Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=743 request_id=e3d590bc1a26ea35d1e3928c61554339 response_code=200
Extracting referring expressions from utterance: 281/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to The Gaylord Apartments, until you go to Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=835 request_id=b03868acab3bcc94e51d90c588a9b844 response_code=200
Extracting referring expressions from utterance: 282/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid California Design College, until you reach Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1090 request_id=74cc18a162cea8941aee023bdbb2565b response_code=200
Extracting referring expressions from utterance: 283/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Home Cafe, until you reach BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=291 request_id=10a7aad00eb53a9758b30b375f647efe response_code=200
Extracting referring expressions from utterance: 284/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Bongchu, until you move to Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=2cfb1ca3e4f2114f86155063d0ee8a84 response_code=200
Extracting referring expressions from utterance: 285/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: stay away from Happy Noodle, until you move to Wilshire-Kenmore Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 305
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=467 request_id=b541251d26e5f7fe875639ef0a06e168 response_code=200
Extracting referring expressions from utterance: 286/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not move to Togo\'s, until you arrive at Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1167 request_id=861de1a132aa1f418ec58e58a778f0f6 response_code=200
Extracting referring expressions from utterance: 287/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not move to The Line, until you arrive at Tarboosh middle East kitchen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=610 request_id=2ccf1113cab9ac7dcf2179a22eabad3b response_code=200
Extracting referring expressions from utterance: 288/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Neris Filipino Dining, until you have gone to The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 311
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=786 request_id=134a1da634f952b3388917ed3a2ec8b4 response_code=200
Extracting referring expressions from utterance: 289/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Korean Bbq, until you have gone to Details\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=460 request_id=08b087b7739b7b86790f2779077451fd response_code=200
Extracting referring expressions from utterance: 290/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Gwang Yang BBQ, at all costs until you reach California Design College, first\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 306
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=629 request_id=55b0b29811f654d41a7f60d7bd8d2c4a response_code=200
Extracting referring expressions from utterance: 291/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: avoid Crystal Spa, at all costs until you reach Koko Pizza, first\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=358 request_id=f3214cbe95e838c67e36f9d3938ee1ef response_code=200
Extracting referring expressions from utterance: 292/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: until you have gone to The Line, you can not go to Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=464 request_id=800a5bce5f807b500b56a06e6cec684b response_code=200
Extracting referring expressions from utterance: 293/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: until you have gone to POT, you can not go to BBQ Premium Chicken\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=340 request_id=529c74fac31eaeeb5675ed4f683526d1 response_code=200
Extracting referring expressions from utterance: 294/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Robeks Juice, until you go to The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=581 request_id=b314e931a819500acc453271397d5c4b response_code=200
Extracting referring expressions from utterance: 295/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Sun Nong Dan, until you go to Ice Cream\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=463 request_id=47f0a0486341b40f253fa949b6881d7f response_code=200
Extracting referring expressions from utterance: 296/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Consulat General of the Republic of Indonesia, until you see Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=692 request_id=e7026a63c8b03422f86676948d61fc68 response_code=200
Extracting referring expressions from utterance: 297/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Zan ResPub, until you see POT\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=212 request_id=9eda0cbe56a3a42bd6568b26ed9c0983 response_code=200
Extracting referring expressions from utterance: 298/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Mali Taste of Thailand, before Ice Cream, happens\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=afb51095d0c295b98a9fde636721f59f response_code=200
Extracting referring expressions from utterance: 299/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not go to Korean Bbq, before Bongchu, happens\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=494 request_id=541a4fc70698f24de3a1bddefe0afc5d response_code=200
Extracting referring expressions from utterance: 300/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can only go to Carl\'s Jr., after Wilshire-Kenmore Building, is seen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 303
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=443 request_id=1c242eaa16445af4cbf6bd48fee62526 response_code=200
Extracting referring expressions from utterance: 301/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can only go to Bayou Smokehouse, after Consulat General of the Republic of Indonesia, is seen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=4b35265e5d0cc686dd8b10e34334831a response_code=200
Extracting referring expressions from utterance: 302/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Central Plaza 1, must be observed before visiting The Line\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1027 request_id=14bb7a23d7482f81e8a9a0e126a9484f response_code=200
Extracting referring expressions from utterance: 303/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Hair News, must be observed before visiting Seaweed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=241 request_id=9069277ccbf37b9b5c50d3eabe9b8aba response_code=200
Extracting referring expressions from utterance: 304/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Togo\'s, but only after you see Wilshire-Kenmore Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=415 request_id=f72cb176beec589d189131db1bbd5c76 response_code=200
Extracting referring expressions from utterance: 305/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Consulat General of the Republic of Indonesia, but only after you see Korean Bbq\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 323
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=b4e2065ca9c165ae06e1bd4d48047d22 response_code=200
Extracting referring expressions from utterance: 306/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Wako, has to be observed prior to any visit to The Gaylord Apartments\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=687 request_id=92129c8925cf0a77b76b612d5314c5ed response_code=200
Extracting referring expressions from utterance: 307/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Bayou Smokehouse, has to be observed prior to any visit to Consulat General of the Republic of Indonesia\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=737 request_id=6eb79713a6a8dfc659e4a08074225317 response_code=200
Extracting referring expressions from utterance: 308/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you see Wilshire-Kenmore Building, before going to California Design College\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 318
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=591 request_id=a8c6c877e873d2654b1869cdadfaf1ea response_code=200
Extracting referring expressions from utterance: 309/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you see Seaweed, before going to The Line\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=400 request_id=8fdc2a78864e7d8bd9240ba12110a140 response_code=200
Extracting referring expressions from utterance: 310/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not make any visit to Wilshire-Kenmore Building, when Wako, remains unseen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 296
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=615 request_id=70e0b01207fefc62b95692f94788f793 response_code=200
Extracting referring expressions from utterance: 311/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not make any visit to Big 5 Sporting Goods, when POT, remains unseen\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 290
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=420 request_id=ea534a9af9307aaf80eb592b8cea871f response_code=200
Extracting referring expressions from utterance: 312/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Crystal Spa, till you observe Gwang Yang BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=664 request_id=d8948946af742fd2671daf861db1fe90 response_code=200
Extracting referring expressions from utterance: 313/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Equitable Life Building, till you observe Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 312
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=722 request_id=f08a6581371684f8d7906cae5f58eae0 response_code=200
Extracting referring expressions from utterance: 314/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Details, unlocks Korean BBQ\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=348 request_id=b49c2811c20869bb89b3b2bf12c8dbae response_code=200
Extracting referring expressions from utterance: 315/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Central Plaza 3, unlocks California Design College\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 307
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=3760337b2d3f26dcb7d60f55fda3d651 response_code=200
Extracting referring expressions from utterance: 316/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Zan ResPub, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=610 request_id=6dce9dddba1ec9085673ef398c5d6da6 response_code=200
Extracting referring expressions from utterance: 317/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Line, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=336 request_id=a2cd17bd46373e7ae4a8aa3fd5e8b826 response_code=200
Extracting referring expressions from utterance: 318/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Sun Nong Dan, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=261 request_id=27b326a51be0c4e7a10c1db60fbe90f6 response_code=200
Extracting referring expressions from utterance: 319/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Korean Bbq, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=245 request_id=980d4c1231a53b755e7181b06e12dd28 response_code=200
Extracting referring expressions from utterance: 320/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Mali Taste of Thailand, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=223 request_id=ea4563273410f70808e5e6adf078126b response_code=200
Extracting referring expressions from utterance: 321/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to The Line, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=234 request_id=d5d2247e29b69a2324125fcb1c7ff823 response_code=200
Extracting referring expressions from utterance: 322/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Korean Bbq, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=398 request_id=634e8fd97f5ccdb665cfb4d3ede78b2d response_code=200
Extracting referring expressions from utterance: 323/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Bayou Smokehouse, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=165 request_id=90cfab207b0a69231ae37eb30e071cf6 response_code=200
Extracting referring expressions from utterance: 324/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Bongchu, at least five times or more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=196 request_id=ab251332545b433cbb77d9ff41ec4734 response_code=200
Extracting referring expressions from utterance: 325/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Central Plaza 3, at least five times or more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=211 request_id=d00d6127610ec845e2a7b7e6c4e357ef response_code=200
Extracting referring expressions from utterance: 326/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Big 5 Sporting Goods, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=446 request_id=f95b78a6ffc49e3f70d9a45b5c081bf2 response_code=200
Extracting referring expressions from utterance: 327/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not visit Equitable Life Building, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=280 request_id=e4aa5fcd6be2e35c2a74be2951a49eba response_code=200
Extracting referring expressions from utterance: 328/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Hair News, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=345 request_id=36cecc09d847b02bc0c255bf5e8d5ea0 response_code=200
Extracting referring expressions from utterance: 329/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Wako, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 268
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=f6aabc31e2f0db20ba4f56384f606a15 response_code=200
Extracting referring expressions from utterance: 330/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Carl\'s Jr., five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1142 request_id=2b8788b2f3669264a377e6ca90ecb18b response_code=200
Extracting referring expressions from utterance: 331/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit The Line, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=263 request_id=e58e9b97d3159718c67856c642214a3b response_code=200
Extracting referring expressions from utterance: 332/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: your task is to go to Consulat General of the Republic of Indonesia, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 309
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=f965ad4e5f670f4c32351d84d2ee43fa response_code=200
Extracting referring expressions from utterance: 333/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: your task is to go to Crystal Spa, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 275
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=82f9457ebba9fa34ff54ea2cf87e3784 response_code=200
Extracting referring expressions from utterance: 334/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Tarboosh middle East kitchen, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=601 request_id=5102b135ebcda70709428a5c6c9c3bdc response_code=200
Extracting referring expressions from utterance: 335/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Foothill Transit, less than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=212 request_id=ec5c8882ac41f96f7cd47fc4d3a1d460 response_code=200
Extracting referring expressions from utterance: 336/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you visit Neris Filipino Dining, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=439 request_id=39ccf15032acac325ecadf185a919bf8 response_code=200
Extracting referring expressions from utterance: 337/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure you visit Home Cafe, five or more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=1fd98b2189f9b08b27f8548be28fc2ec response_code=200
Extracting referring expressions from utterance: 338/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to reach Wilshire-Kenmore Building, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=272 request_id=e3ba758dfd3bc950de2dc128d3de3173 response_code=200
Extracting referring expressions from utterance: 339/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to reach Korean BBQ, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=65536c90258379167e66436f6cdb0d51 response_code=200
Extracting referring expressions from utterance: 340/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Tarboosh middle East kitchen, equal or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=260 request_id=b39c87d4afe20cd2380dadb6233d21c5 response_code=200
Extracting referring expressions from utterance: 341/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Bongchu, equal or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=252 request_id=fd62e41295179534e5e0fd4bb1564ae3 response_code=200
Extracting referring expressions from utterance: 342/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Korean BBQ, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=361 request_id=daa6572527aa5f9a3b67c6bc7ab83039 response_code=200
Extracting referring expressions from utterance: 343/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Bongchu, five or more than five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=504 request_id=a2c1d846b3d1fe4df2c2d7d1b7f34896 response_code=200
Extracting referring expressions from utterance: 344/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Korean Bbq, has to be visited at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=f6a845d90184cb09758c759e38a4ac46 response_code=200
Extracting referring expressions from utterance: 345/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Foothill Transit, has to be visited at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=8b29c7a7531df15c609ef5d88ec64ad7 response_code=200
Extracting referring expressions from utterance: 346/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit and then leave Gwang Yang BBQ, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 278
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=233 request_id=90a00e22ba70c4ad550a3a31b27107a7 response_code=200
Extracting referring expressions from utterance: 347/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit and then leave Sun Nong Dan, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=459 request_id=73a6bf917ce0e495952d9037d19ec10d response_code=200
Extracting referring expressions from utterance: 348/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Robeks Juice, then leave Robeks Juice, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=130 request_id=36b9eb8aa6c8f0b42998c76ff3aa5e95 response_code=200
Extracting referring expressions from utterance: 349/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Tarboosh middle East kitchen, then leave Tarboosh middle East kitchen, at least five times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=299 request_id=8d2f6a65929d7b5d93e598afb939e205 response_code=200
Extracting referring expressions from utterance: 350/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must pass through Seaweed, on at least five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=201 request_id=efa5a95b13b546d2d41132187bcf5a66 response_code=200
Extracting referring expressions from utterance: 351/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must pass through Neris Filipino Dining, on at least five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=602 request_id=da701cbadc6bd9db23a16aa920770855 response_code=200
Extracting referring expressions from utterance: 352/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the minimum number of times you must visit Ice Cream, is five\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=212 request_id=89734a0e50337b615b79bb17ae292ac8 response_code=200
Extracting referring expressions from utterance: 353/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the minimum number of times you must visit Sun Nong Dan, is five\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=737 request_id=9b8a5eef56ae971e0c7a0d52e656f986 response_code=200
Extracting referring expressions from utterance: 354/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Togo\'s, then leave Togo\'s, and repeat this at least four more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=200 request_id=92f9d2ee85d4920ad3b94f9ad55b3b6f response_code=200
Extracting referring expressions from utterance: 355/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: reach Ice Cream, then leave Ice Cream, and repeat this at least four more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=760 request_id=0e643781cd5abce0d501974cb1e6fee6 response_code=200
Extracting referring expressions from utterance: 356/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not complete the task without visiting Bongchu, on five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=221 request_id=3b94aacfde9a34b00c1016abc9144b1c response_code=200
Extracting referring expressions from utterance: 357/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not complete the task without visiting Ice Cream, on five separate occasions\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=994accd704b103fc98de17bf7c26bd7c response_code=200
Extracting referring expressions from utterance: 358/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Wilshire/Normandie, any fewer than five separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=414 request_id=2979e7eab3a22dc1a29f2fa1a8c988e3 response_code=200
Extracting referring expressions from utterance: 359/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Tarboosh middle East kitchen, any fewer than five separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=200 request_id=2e4fea6d346bd268a0f9c47c5cda07cc response_code=200
Extracting referring expressions from utterance: 360/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you have at least five separate times where you reach Coffee Bean & Tea Leaf\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=394 request_id=14fa8fe7ab5e43881de2fba6aff474f1 response_code=200
Extracting referring expressions from utterance: 361/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: ensure that you have at least five separate times where you reach Ice Cream\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=463 request_id=b6347c79c22a1a460e9b884d144d9634 response_code=200
Extracting referring expressions from utterance: 362/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Home Cafe, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=465 request_id=b747fc545ce2f1eecf61ff67b7406b9d response_code=200
Extracting referring expressions from utterance: 363/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Wilshire-Kenmore Building, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=264 request_id=1325e44f98d10e601aa28109f1d706d6 response_code=200
Extracting referring expressions from utterance: 364/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Hair News, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=253 request_id=1c0a1defe7ac894e4f3d2051eac376f9 response_code=200
Extracting referring expressions from utterance: 365/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to POT, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=232 request_id=96d63fc86d239b327701f01126f03e28 response_code=200
Extracting referring expressions from utterance: 366/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to Big 5 Sporting Goods, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=189 request_id=878f80abd99a038444f460e9b400a599 response_code=200
Extracting referring expressions from utterance: 367/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make your way to BBQ Premium Chicken, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 283
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=330 request_id=4a5ce25ad415040c35c948634954741d response_code=200
Extracting referring expressions from utterance: 368/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit Foothill Transit, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=244 request_id=cc2094b15af78d9e637e2b5c2e48282d response_code=200
Extracting referring expressions from utterance: 369/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to visit The Line, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=201 request_id=88045d76187f7b4c67cbf0aa8b911cd1 response_code=200
Extracting referring expressions from utterance: 370/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must reach Zan ResPub, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=0e461bd4b86076bcdd57e6b2f06c77e5 response_code=200
Extracting referring expressions from utterance: 371/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must reach Wilshire-Kenmore Building, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=83c551ef1807d63579050dfd8745b8ee response_code=200
Extracting referring expressions from utterance: 372/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: navigate to Metro, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 269
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=651 request_id=110f996186c7b75a8155ec180e6b9e98 response_code=200
Extracting referring expressions from utterance: 373/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: navigate to POT, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 267
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=260 request_id=a1c9161f6ea63f999bd42cd8ec2f236d response_code=200
Extracting referring expressions from utterance: 374/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Togo\'s, exactly three times no more no less\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 270
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=851220800e15881c2320fdce4eb8cbbd response_code=200
Extracting referring expressions from utterance: 375/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Neris Filipino Dining, exactly three times no more no less\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=a7254df046c7cc1e7c505472cd2b18ab response_code=200
Extracting referring expressions from utterance: 376/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Coffee Bean & Tea Leaf, and you can not go there more or less than three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=385 request_id=d8185d68602006c97fc0e411b800c588 response_code=200
Extracting referring expressions from utterance: 377/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to go to Foothill Transit, and you can not go there more or less than three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=177 request_id=e06eee93e13ea26f699acb58c7f4a823 response_code=200
Extracting referring expressions from utterance: 378/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Korean Bbq, more or less than three times is prohibited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=344 request_id=8ec556e26466b0b39cdff6b3dc20e554 response_code=200
Extracting referring expressions from utterance: 379/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Koko Pizza, more or less than three times is prohibited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=173 request_id=1a23d8543d1ec88e773f55ae3e2ff721 response_code=200
Extracting referring expressions from utterance: 380/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Korean BBQ, three times and do not visit it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=604 request_id=fff14608791b8b5d991ed864db6402a5 response_code=200
Extracting referring expressions from utterance: 381/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Metro, three times and do not visit it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 269
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=326 request_id=25d9ca79644cf2708134e5ea8b60589a response_code=200
Extracting referring expressions from utterance: 382/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Home Cafe, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 273
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=244 request_id=927229e905eca9af57d100c368b6ecdf response_code=200
Extracting referring expressions from utterance: 383/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must visit Equitable Life Building, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 287
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=452 request_id=64fb6be8683022c9ee8d1139ca96426e response_code=200
Extracting referring expressions from utterance: 384/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit The Line, three times and never revisit it again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 272
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=242 request_id=82d58a229405cc04598ab6338497e19d response_code=200
Extracting referring expressions from utterance: 385/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Coffee Bean & Tea Leaf, three times and never revisit it again\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=408 request_id=2c5ee301f1a9cc3f3ad0d8ea56604ec6 response_code=200
Extracting referring expressions from utterance: 386/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must go to Big 5 Sporting Goods, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=236 request_id=651614b082a4479cec722b990076e160 response_code=200
Extracting referring expressions from utterance: 387/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must go to Tarboosh middle East kitchen, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=568 request_id=eb48ea05ca33befa7c2d3e1037d337ee response_code=200
Extracting referring expressions from utterance: 388/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Wilshire-Kenmore Building, three times and then stop visiting it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=423 request_id=40bcf2c56108db027f743601b2bdefdd response_code=200
Extracting referring expressions from utterance: 389/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Metro, three times and then stop visiting it anymore\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 269
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=216 request_id=e2ba4f63a8973c35d7f853891ea3299e response_code=200
Extracting referring expressions from utterance: 390/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are required to visit Seaweed, on exactly three separate instances\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 271
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=593 request_id=f812b80b18a481457d071e9bd4c1b793 response_code=200
Extracting referring expressions from utterance: 391/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you are required to visit Central Plaza 1, on exactly three separate instances\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=242 request_id=8fc94af1a0432406ec6ad7e6641ea292 response_code=200
Extracting referring expressions from utterance: 392/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the required number of separate visits to Happy Noodle, is exactly three\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=259 request_id=bc5462e1acbe3dce03d50e19eededb21 response_code=200
Extracting referring expressions from utterance: 393/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: the required number of separate visits to Carl\'s Jr., is exactly three\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=2362e5ff7e14f4815d5d5a7bdac7757a response_code=200
Extracting referring expressions from utterance: 394/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Mermaid Cafe, exactly three separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=349 request_id=9f45f6bbaa7e41e9010c131ecf915e3c response_code=200
Extracting referring expressions from utterance: 395/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: visit Zan ResPub, exactly three separate times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=375 request_id=116fc85db6db4adc57348cfb533a583e response_code=200
Extracting referring expressions from utterance: 396/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: pass through Zan ResPub, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=408017f6a8109006f115a71d61a7400d response_code=200
Extracting referring expressions from utterance: 397/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: pass through Korean Bbq, exactly three times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=425 request_id=a905c65e23d0c34779ca7e06508ba785 response_code=200
Extracting referring expressions from utterance: 398/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Tarboosh middle East kitchen, then leave Tarboosh middle East kitchen, and then repeat this exactly two more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=376 request_id=65525c258d7d44dcdb7d8c9ac8875a33 response_code=200
Extracting referring expressions from utterance: 399/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: go to Korean BBQ, then leave Korean BBQ, and then repeat this exactly two more times\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 274
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=49128c025a8a0d5fb7b93455e8d4bc0c response_code=200
Extracting referring expressions from utterance: 400/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure that you have exactly three separate visits to Bayou Smokehouse\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 280
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1549 request_id=9282036e2791c45a56b2e3ea1560d01a response_code=200
Extracting referring expressions from utterance: 401/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: make sure that you have exactly three separate visits to Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=679 request_id=cd3c335af53e3e3c113436f636ae586a response_code=200
Extracting referring expressions from utterance: 402/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not exceed or fall short on three separate visits to Central Plaza 1\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 279
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=424 request_id=f87651f05fd58c7c92dccd12b3e991b9 response_code=200
Extracting referring expressions from utterance: 403/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not exceed or fall short on three separate visits to Mermaid Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=435 request_id=02be61c4b3d210d8076fb24297363eaa response_code=200
Extracting referring expressions from utterance: 404/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to BBQ Premium Chicken, once you have visited Sun Nong Dan\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=748 request_id=55b5264247a6629fff3020035f6bfe7a response_code=200
Extracting referring expressions from utterance: 405/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not go to Bayou Smokehouse, once you have visited Happy Noodle\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 295
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=617 request_id=fbf29fe690dfbd9ef6a274f9a9054a06 response_code=200
Extracting referring expressions from utterance: 406/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to Central Plaza 3, once you go to Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=496 request_id=8508125f3266aadd9bdb3710195293b2 response_code=200
Extracting referring expressions from utterance: 407/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: never go to POT, once you go to Seaweed\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=a2510dca95a9d6a633d81e7d5b231cef response_code=200
Extracting referring expressions from utterance: 408/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you visit Bayou Smokehouse, you can not visit Consulat General of the Republic of Indonesia, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 329
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=776 request_id=a5c48e3bd1e5503b97a492e90cb791a4 response_code=200
Extracting referring expressions from utterance: 409/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you visit Koko Pizza, you can not visit Foothill Transit, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=459 request_id=7a24344bad3d7040d47e53b2796f212e response_code=200
Extracting referring expressions from utterance: 410/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once POT, is visited you can not go to Etude Lounge, any more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=eaad4bc712a18caee5471e8c4d73b250 response_code=200
Extracting referring expressions from utterance: 411/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Robeks Juice, is visited you can not go to Koko Pizza, any more\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=497 request_id=fd324b55f2bdf158715845f17f2e4908 response_code=200
Extracting referring expressions from utterance: 412/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Bongchu, before POT, is visited but you can never visit Bongchu, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 277
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=658 request_id=a7d8301fc577842f1e3fd3853e63d2c5 response_code=200
Extracting referring expressions from utterance: 413/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can visit Togo\'s, before Big 5 Sporting Goods, is visited but you can never visit Togo\'s, afterward\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=560 request_id=3028fedd2925eab120978dfb1e8da0f6 response_code=200
Extracting referring expressions from utterance: 414/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you go to Mermaid Cafe, you have to avoid Metro\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=556 request_id=1d401b72420f04d8d46e10217aa13837 response_code=200
Extracting referring expressions from utterance: 415/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you go to Metro, you have to avoid Home Cafe\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=328 request_id=38381be44f4848174b7c94b674f2f5d6 response_code=200
Extracting referring expressions from utterance: 416/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Etude Lounge, only after you go to Etude Lounge\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=237 request_id=3bd2b61947bb45553c04fca23a9debe9 response_code=200
Extracting referring expressions from utterance: 417/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must avoid Sun Nong Dan, only after you go to Sun Nong Dan\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 276
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=456 request_id=ca95daf95058b89c66e8435616067837 response_code=200
Extracting referring expressions from utterance: 418/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you have gone to POT, you must stay away from Wilshire/Normandie\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=4a68055618d7f06e3ca784a80b7db80f response_code=200
Extracting referring expressions from utterance: 419/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you have gone to Korean Bbq, you must stay away from Equitable Life Building\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 300
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=621 request_id=f0836cd9a76b94ce6f123d97c80e60b1 response_code=200
Extracting referring expressions from utterance: 420/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must stay away from Foothill Transit, once you have gone to Koko Pizza\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 293
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=623 request_id=d8e3ff3da51b4bf966ce3c3ad5ea2893 response_code=200
Extracting referring expressions from utterance: 421/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you must stay away from Consulat General of the Republic of Indonesia, once you have gone to Big 5 Sporting Goods\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 333
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=c8468982301a95e0bd2620508b1e5d37 response_code=200
Extracting referring expressions from utterance: 422/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not move to Foothill Transit, after you reach Crystal Spa\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=770 request_id=5963f7902b90ec92b1db9ebc8fe0ea77 response_code=200
Extracting referring expressions from utterance: 423/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can not move to Metro, after you reach Foothill Transit\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=664 request_id=4ddb391398cf50b5c680b5542fe7a144 response_code=200
Extracting referring expressions from utterance: 424/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you reach Mermaid Cafe, you can not move to Consulat General of the Republic of Indonesia\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 325
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=871 request_id=479d1886ce7e21dc1274a5523b857960 response_code=200
Extracting referring expressions from utterance: 425/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you reach Foothill Transit, you can not move to Ice Cream\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 292
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=489 request_id=307a3f65331f0c996603acabc2a42138 response_code=200
Extracting referring expressions from utterance: 426/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you go to Carl\'s Jr., you have to avoid The Line, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=378 request_id=66fba04763f7fa25052d95c7a360b284 response_code=200
Extracting referring expressions from utterance: 427/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once you go to Bongchu, you have to avoid California Design College, at all costs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=439 request_id=08468cc58b392fba2fdf9d3fd341045f response_code=200
Extracting referring expressions from utterance: 428/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Crystal Spa, once you go to The Boiling Crab\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 294
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=217 request_id=5ecb61289284b97177a6c4700437a321 response_code=200
Extracting referring expressions from utterance: 429/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you have to avoid Metro, once you go to Sun Nong Dan\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 284
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=538 request_id=212511dc4a4079c71e639af81d297ab5 response_code=200
Extracting referring expressions from utterance: 430/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit POT, after Foothill Transit, is visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 286
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=632 request_id=0ab9b6fa68e4d289234b2f09b85d6ca6 response_code=200
Extracting referring expressions from utterance: 431/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: do not visit Consulat General of the Republic of Indonesia, after Crystal Spa, is visited\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 324
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=d5bd86c1668fa49d102a96924d56bf90 response_code=200
Extracting referring expressions from utterance: 432/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go to Bongchu, but you must not go to California Design College, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 299
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=586 request_id=900fdd01d3ec71d8744fe82510d7324d response_code=200
Extracting referring expressions from utterance: 433/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: you can go to Details, but you must not go to Bongchu, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 281
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=462 request_id=80b41a9c4d06262777fa9b6710ff18c4 response_code=200
Extracting referring expressions from utterance: 434/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: any visit to Togo\'s, is not allowed after you visit Bayou Smokehouse\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=575 request_id=2e305e4645ba9d7aa74d65b104b664e3 response_code=200
Extracting referring expressions from utterance: 435/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: any visit to Korean BBQ, is not allowed after you visit The Line\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=203 request_id=9706d7214864d7da509c5fa40d76ce1f response_code=200
Extracting referring expressions from utterance: 436/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once The Line, is reached after that you can never visit Foothill Transit\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=515 request_id=49268af96830445f3ffbe712a99cf4db response_code=200
Extracting referring expressions from utterance: 437/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: once Zan ResPub, is reached after that you can never visit Neris Filipino Dining\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=503 request_id=d956ddff8a80439da290b2a32572bc16 response_code=200
Extracting referring expressions from utterance: 438/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: Etude Lounge, can never be visited once Mermaid Cafe, occurs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 291
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=166 request_id=08f9c53bf436783d4279d42f02be1731 response_code=200
Extracting referring expressions from utterance: 439/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: The Line, can never be visited once Details, occurs\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 282
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=242 request_id=60c2aa7fee3ee7df8680d81117fc479e response_code=200
Extracting referring expressions from utterance: 440/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you go to BBQ Premium Chicken, you can never go to Foothill Transit, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=fe8bd8a5944c9f7de82104a570937f23 response_code=200
Extracting referring expressions from utterance: 441/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you go to Hair News, you can never go to Mermaid Cafe, after that\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 288
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=426 request_id=6862034c33bcb7bebfbb55557d93d28d response_code=200
Extracting referring expressions from utterance: 442/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if Wilshire/Normandie, happens that prevents Wako, from happening afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=563 request_id=ac572a6d48b0f45981d357eb81f2b703 response_code=200
Extracting referring expressions from utterance: 443/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if Togo\'s, happens that prevents California Design College, from happening afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 298
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=307 request_id=74de71970f8a60e2235fa43e743fc2a2 response_code=200
Extracting referring expressions from utterance: 444/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you visit Details, you are not allowed to reach Crystal Spa, afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 285
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=319 request_id=e775d379b2a8c3a22317747b95d8e535 response_code=200
Extracting referring expressions from utterance: 445/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: if you visit Wilshire-Kenmore Building, you are not allowed to reach Hair News, afterwards\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=35702f04ee2223dda9c40d33d85cc2d9 response_code=200
Extracting referring expressions from utterance: 446/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: whenever you observe Coffee Bean & Tea Leaf, this locks California Design College, from becoming true from the next instance\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 314
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=518 request_id=483ba5f756f6af9166c887e1ad955f13 response_code=200
Extracting referring expressions from utterance: 447/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: whenever you observe Coffee Bean & Tea Leaf, this locks Central Plaza 1, from becoming true from the next instance\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=573 request_id=7b3132f4a6545675f46e67aa326aca7a response_code=200
Extracting referring expressions from utterance: 448/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Coffee Bean & Tea Leaf, locks Happy Noodle, from being true for all time instances starting from the next one\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 301
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=624 request_id=f41b6b770cb8252d0ae545bf15f49260 response_code=200
Extracting referring expressions from utterance: 449/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: seeing Details, locks Coffee Bean & Tea Leaf, from being true for all time instances starting from the next one\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 302
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=662 request_id=f1a5188704ac59efe18ea8845c448655 response_code=200
Extracting referring expressions from utterance: 450/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you get to Happy Noodle, you must avoid Carl\'s Jr.\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 289
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=7585a3f5ee1b9219d0ef0dd777b07d18 response_code=200
Extracting referring expressions from utterance: 451/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "text-davinci-003", "prompt": "Your task is to repeat exact strings from the given utterance which possibly refer to certain propositions.\\n\\nUtterance: move to red room\\nPropositions: red room\\n\\nUtterance: visit Cutler Majestic Theater\\nPropositions: Cutler Majestic Theater\\n\\nUtterance: robot c move to big red room and then move to green area\\nPropositions: big red room | green area\\n\\nUtterance: you have to visit Panera Bread, four or more than four times\\nPropositions: Panera Bread\\n\\nUtterance: i want you to go into yellow region\\nPropositions: yellow region\\n\\nUtterance: Visit The Kensington, HI Boston, and Dunkin\' Donuts in that specific order. make sure not to visit waypoints out of turn\\nPropositions: The Kensington | HI Boston | Dunkin\' Donuts\'\\n\\nUtterance: go to Cutler Majestic Theater - Emerson College, exactly three times\\nPropositions: Cutler Majestic Theater - Emerson College\\n\\nUtterance: visit Cutler Majestic Theater \\u2013 Emerson College, 62 on the Park, and Citibank, one after another\\nPropositions: Cutler Majestic Theater \\u2013 Emerson College | 62 on the Park | Citibank\\n\\nUtterance: go to green area then to blue room\\nPropositions: green area | blue room\\n\\nUtterance: go to Chinatown, without visiting New Saigon Sandwich, then go to New Saigon Sandwich, without visiting Dumpling Cafe, then go to Dumpling Cafe, without visiting Emerson College - Little Building, finally go to Emerson College - Little Building, while only visiting each location once\\nPropositions: Chinatown | New Saigon Sandwich | Dumpling Cafe | Emerson College - Little Building\\n\\nUtterance: take a path to reach blue box but avoid red path\\nPropositions: blue box | red path\\n\\nUtterance: reach Emerson College, without going to Stuart St @ Tremont St, then go to Stuart St @ Tremont St, without passing AVA Theater District, then go to AVA Theater District, without passing my thai vegan cafe, finally go to my thai vegan cafe\\nPropositions: Emerson College | Stuart St @ Tremont St | AVA Theater District | my thai vegan cafe\\n\\nUtterance: go through red room or yellow room to green room\\nPropositions: red room | yellow room | green room\\n\\nUtterance: make sure you never visit Wilbur Theatre, Dunkin\' Donuts, Montien, New Saigon Sandwich, or Stuart St @ Tremont St\\nPropositions: Wilbur Theatre | Dunkin\' Donuts | Montien | New Saigon Sandwich | Stuart St @ Tremont St\\n\\nUtterance: move the robot through yellow region or small red room and then to large green room\\nPropositions: yellow region | small red room | large green room\\n\\nUtterance: make your way to Wirth Building, only after going to Tremont and Stuart Streets, before that make your way to Tremont and Stuart Streets, only after going to Seybolt Park, before that make your way to Seybolt Park, only after going to Tufts University School of Medicine, before that make your way to Tufts University School of Medicine, only after going to Wang Theater\\nPropositions: Wirth Building | Tremont and Stuart Streets | Seybolt Park | Tufts University School of Medicine | Wang Theater\\n\\nUtterance: after you get to Central Plaza 3, you must avoid Mali Taste of Thailand\\nPropositions:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 304
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=858 request_id=c453647a55ea1e0f86c416847bf6ec31 response_code=200
grounding landmark: Consulat General of the Republic of Indonesia
use cached embedding: Consulat General of the Republic of Indonesia
grounding landmark: Central Plaza 1
use cached embedding: Central Plaza 1
grounding landmark: Hair News
use cached embedding: Hair News
grounding landmark: Togo's
use cached embedding: Togo's
grounding landmark: Neris Filipino Dining
use cached embedding: Neris Filipino Dining
grounding landmark: Wilshire/Normandie
use cached embedding: Wilshire/Normandie
grounding landmark: Ice Cream
use cached embedding: Ice Cream
grounding landmark: Crystal Spa
use cached embedding: Crystal Spa
grounding landmark: Gwang Yang BBQ
use cached embedding: Gwang Yang BBQ
grounding landmark: Zan ResPub
use cached embedding: Zan ResPub
grounding landmark: Metro
use cached embedding: Metro
grounding landmark: Sun Nong Dan
use cached embedding: Sun Nong Dan
grounding landmark: Mermaid Cafe
use cached embedding: Mermaid Cafe
grounding landmark: Koko Pizza
use cached embedding: Koko Pizza
grounding landmark: Korean Bbq
use cached embedding: Korean Bbq
grounding landmark: Mali Taste of Thailand
use cached embedding: Mali Taste of Thailand
grounding landmark: The Boiling Crab
use cached embedding: The Boiling Crab
grounding landmark: BBQ Premium Chicken
use cached embedding: BBQ Premium Chicken
grounding landmark: Happy Noodle
use cached embedding: Happy Noodle
grounding landmark: Details
use cached embedding: Details
grounding landmark: Korean BBQ
use cached embedding: Korean BBQ
grounding landmark: Wako
use cached embedding: Wako
grounding landmark: Bayou Smokehouse
use cached embedding: Bayou Smokehouse
grounding landmark: Home Cafe
use cached embedding: Home Cafe
grounding landmark: Foothill Transit
use cached embedding: Foothill Transit
grounding landmark: POT
use cached embedding: POT
grounding landmark: Robeks Juice
use cached embedding: Robeks Juice
grounding landmark: California Design College
use cached embedding: California Design College
grounding landmark: locks Coffee Bean & Tea Leaf
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/embeddings
api_version=None data='{"input": ["locks Coffee Bean & Tea Leaf"], "model": "text-embedding-ada-002", "encoding_format": "base64"}' message='Post details'
https://api.openai.com:443 "POST /v1/embeddings HTTP/1.1" 200 8417
message='OpenAI API response' path=https://api.openai.com/v1/embeddings processing_ms=153 request_id=dc4e9b280ce294fa79a2c14803cb9e3d response_code=200
grounding landmark: Equitable Life Building
use cached embedding: Equitable Life Building
grounding landmark: Etude Lounge
use cached embedding: Etude Lounge
grounding landmark: Coffee Bean & Tea Leaf
use cached embedding: Coffee Bean & Tea Leaf
grounding landmark: The Gaylord Apartments
use cached embedding: The Gaylord Apartments
grounding landmark: Bongchu
use cached embedding: Bongchu
grounding landmark: Seaweed
use cached embedding: Seaweed
grounding landmark: Tarboosh middle East kitchen
use cached embedding: Tarboosh middle East kitchen
grounding landmark: Carl's Jr.
use cached embedding: Carl's Jr.
grounding landmark: The Line
use cached embedding: The Line
grounding landmark: Wilshire-Kenmore Building
use cached embedding: Wilshire-Kenmore Building
grounding landmark: Central Plaza 3
use cached embedding: Central Plaza 3
grounding landmark: Big 5 Sporting Goods
use cached embedding: Big 5 Sporting Goods
Symbolic Translation: 0/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b d c h and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=524 request_id=40634087b9f5e3580965e4940b2619cb response_code=200
Symbolic Translation: 1/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit h c a b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=533 request_id=bafd66a8ef191d3c307be81ac4ae694e response_code=200
Symbolic Translation: 2/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: sometime visit h a c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=522 request_id=c708c303165d718cd8104043786e9f0e response_code=200
Symbolic Translation: 3/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: sometime visit c d a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=598 request_id=e8d0b7eda3b668a58d8cb092a91a67fb response_code=200
Symbolic Translation: 4/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: eventually go visit c a d h and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=b0d490ed5d916cd3eca41210f2affa6c response_code=200
Symbolic Translation: 5/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: eventually go visit b a c d and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=bafd8ba5a706275f2df699bfd57af9e2 response_code=200
Symbolic Translation: 6/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b a h d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=9f5d903c62ec9c8014c10d36db96ea34 response_code=200
Symbolic Translation: 7/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d c a b and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=6c6d2064283d4d14a87f2a23abce2ce7 response_code=200
Symbolic Translation: 8/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d go to h go to c go to b go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=534 request_id=4a4fccbca55119164e541dc3032e1c1a response_code=200
Symbolic Translation: 9/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to h go to c go to a go to b go to d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=638cd3734caf9e61aa797180a3b921d5 response_code=200
Symbolic Translation: 10/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b c a d h in any order required\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=689665815e5f6e4ded9d472d4442638b response_code=200
Symbolic Translation: 11/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d b c a h in any order required\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=507 request_id=5c25daa273e033d44c51672e083d1f14 response_code=200
Symbolic Translation: 12/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit all locations b d c a h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=526 request_id=9e5b46a11d4c9a71b913ba8bba51e5fe response_code=200
Symbolic Translation: 13/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit all locations h c d a b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=3e30c2389f86d5f791697954f5004263 response_code=200
Symbolic Translation: 14/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach the following five locations a d c h b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=499 request_id=9a4d97ca27832227f15483e40716148f response_code=200
Symbolic Translation: 15/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach the following five locations c a b d h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=518 request_id=3cb5ebbddfa276d70fb03536b0580e80 response_code=200
Symbolic Translation: 16/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: find the following a c d b h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=527 request_id=ea5e3f2c21d93a2d43bd2514874c9e02 response_code=200
Symbolic Translation: 17/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: find the following h c d a b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=528 request_id=ad61ae86ccb984154f9f2eeac9c69ae3 response_code=200
Symbolic Translation: 18/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to c a d b and h in arbitrary order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=2299d769acedaab49eb1a0a0eeb52c14 response_code=200
Symbolic Translation: 19/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d a c h and b in arbitrary order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=528 request_id=fa71b5b57ee64393a979319890e51441 response_code=200
Symbolic Translation: 20/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure b h a c and d are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=bf0aee777ea7cc29676eeac8b7a6e38a response_code=200
Symbolic Translation: 21/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure c d b a and h are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=531 request_id=446d5bd207365bb17048be847302dd73 response_code=200
Symbolic Translation: 22/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop until b h c d and a are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=30e2fcc55a966b7fcb1f311de3e2a0e3 response_code=200
Symbolic Translation: 23/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop until b h d c and a are all visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=520 request_id=4e75a791e2cbd934849b17d3fb5ce2cb response_code=200
Symbolic Translation: 24/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to d b a c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=534 request_id=0d36a463bbf342f39bf54948e72763de response_code=200
Symbolic Translation: 25/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a b d c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=539 request_id=3a943f110384d32fe91f9ab0af9e8a32 response_code=200
Symbolic Translation: 26/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b a d h and c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=e79e551029c401263af50f69586eddb9 response_code=200
Symbolic Translation: 27/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a b d c and h in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=513 request_id=60967159f7fa930b733f5bfe2a620eac response_code=200
Symbolic Translation: 28/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c d b a and h in no particular order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=538 request_id=f2086f988383f829faf0428082e65068 response_code=200
Symbolic Translation: 29/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b a d c and h in no particular order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=536 request_id=7b43bce217c741a0f0d6caece1963814 response_code=200
Symbolic Translation: 30/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b d h a and c at least once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=77560bbd39abc0ec1cbf52295587f4e2 response_code=200
Symbolic Translation: 31/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b d c h and a at least once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=538 request_id=2165ff48881610f3c6482498a470c86b response_code=200
Symbolic Translation: 32/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b a h d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=532 request_id=bb7ab8d558ee1d79fdc39262b427385e response_code=200
Symbolic Translation: 33/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a d b c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=531 request_id=bb8633e218f9042382c367a2c1055b4a response_code=200
Symbolic Translation: 34/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to b a c d and h in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=7009b150b13b4bc5809d66fb80630f94 response_code=200
Symbolic Translation: 35/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d h c b and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=498 request_id=31d9ce25a4a01b8bad7e35fdf76d5f23 response_code=200
Symbolic Translation: 36/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit h d a c and b in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=d2f41d264bd561369f9e35707c9f2bae response_code=200
Symbolic Translation: 37/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit h d c b and a in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=7b2b54a10188e9900c0d57279c25b53a response_code=200
Symbolic Translation: 38/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach d c b a and h in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=524 request_id=ecc8d67c32e7da1d6e070d4c37dd0af8 response_code=200
Symbolic Translation: 39/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach d a b c and h in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=537 request_id=f43d30db77906487c09018e1d6343aba response_code=200
Symbolic Translation: 40/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you go to h d b c a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=ad0f8a77efc733b0dd3eaa4960d13377 response_code=200
Symbolic Translation: 41/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you go to d b a h c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=06f954cfb18947387eee892e3bd1874f response_code=200
Symbolic Translation: 42/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit b h a c d but it can be done in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=547 request_id=c1e03b8dfbb1f51a13aa81c93936a8d3 response_code=200
Symbolic Translation: 43/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit d a b c h but it can be done in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=bce5b0cfee0746c63cd3c5ed9ab9d2c0 response_code=200
Symbolic Translation: 44/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: in no particular order visit d a c h b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=da28ff9d7a18ba829df6551aabacc84e response_code=200
Symbolic Translation: 45/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: in no particular order visit h b c a d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 353
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=543 request_id=5b67f81047fd2bc310e83b4df58d9fa3 response_code=200
Symbolic Translation: 46/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a until you visit c visit c only once do not visit c until you visit d visit d only once do no visit d until you visit b visit b only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1730 request_id=0f849457a58ed41e2b5625987fca0838 response_code=200
Symbolic Translation: 47/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b until you visit a visit a only once do not visit a until you visit d visit d only once do no visit d until you visit c visit c only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1731 request_id=d80b86d18ea987fd845ba634a1b74df0 response_code=200
Symbolic Translation: 48/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c then b then d and then a you can only visit each landmark once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1703 request_id=59c1cdb4ce44e7ea8362961a4c2b8659 response_code=200
Symbolic Translation: 49/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c then b then a and then d you can only visit each landmark once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1709 request_id=852f620a4adfa563a973cb5ce652c875 response_code=200
Symbolic Translation: 50/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d but not through a b or c and then go to a but not through b or c and then go to b but not through c and finally go to c no revisiting is allowed\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1734 request_id=7e8b1e3cb170c7c9b9813c6123bffcaf response_code=200
Symbolic Translation: 51/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a but not through c b or d and then go to c but not through b or d and then go to b but not through d and finally go to d no revisiting is allowed\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1722 request_id=b6825aa7cf381f2ef7ec5e5a69d651dc response_code=200
Symbolic Translation: 52/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d until c is visited and do not go to c until a is visited and do not go to a until b is visited along the path never return to previous location you have been to\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1735 request_id=edaf5c46f4a6fa91f25ff392cd932af1 response_code=200
Symbolic Translation: 53/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d until b is visited and do not go to b until a is visited and do not go to a until c is visited along the path never return to previous location you have been to\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1738 request_id=cc0ad3962aa6032547c0ea9484d6d00a response_code=200
Symbolic Translation: 54/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to b only after going to c before that make your way to c only after going to a before that make your way to a only after going to d do not go back to the previous location you have visited while heading to the next\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1747 request_id=54c8d254f42374139bc8d70c2674093e response_code=200
Symbolic Translation: 55/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to c only after going to a before that make your way to a only after going to d before that make your way to d only after going to b do not go back to the previous location you have visited while heading to the next\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1735 request_id=2f1c8ce9cd262c00b940b031832bc0d7 response_code=200
Symbolic Translation: 56/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d but do not visit a c or b and then go to a but do not visit c or b or revisit d and then go to c but do not visit b or revisit d or a and then go to b but do not revisit d a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1747 request_id=37ade51d3d8cc6c5ae49fed520e3e616 response_code=200
Symbolic Translation: 57/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a but do not visit c d or b and then go to c but do not visit d or b or revisit a and then go to d but do not visit b or revisit a or c and then go to b but do not revisit a c or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1742 request_id=28758534f087287c152c30eb2ae3d20c response_code=200
Symbolic Translation: 58/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a b d and c in this order without skipping any one of them do not revisit any one of them once after you have been there\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1762 request_id=d0777d515c393297602fb610f69c0c4e response_code=200
Symbolic Translation: 59/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c a d and b in this order without skipping any one of them do not revisit any one of them once after you have been there\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1737 request_id=5801f4faf755e27d6ef5d23f061c3a62 response_code=200
Symbolic Translation: 60/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d only once but keep away from a c and b and then go to a only once but keep away from d c and b and then go to c only once but keep way from d a and b and finally go to b once but keep away from d a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1740 request_id=d21e363cefa28b550f337511d2e22f62 response_code=200
Symbolic Translation: 61/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a only once but keep away from c d and b and then go to c only once but keep away from a d and b and then go to d only once but keep way from a c and b and finally go to b once but keep away from a c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1744 request_id=2e1afeea3ca65200ffa33c025b9f3f3a response_code=200
Symbolic Translation: 62/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b one time but not through a d or c and then visit a once but not through b d or c and then visit d once but not through b a or c and then visit c once but not through b a or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1725 request_id=230660b483ad5b4c78a0be8c6d28e7fe response_code=200
Symbolic Translation: 63/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit b one time but not through a d or c and then visit a once but not through b d or c and then visit d once but not through b a or c and then visit c once but not through b a or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 422
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1722 request_id=ddbb47e3c3307b3dafedf840bf159815 response_code=200
Symbolic Translation: 64/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from b c and d until you make a single visit to a and then make your way to b while staying away from a c and d and then make your way to c while staying away from a b or d and finally make your way to d while staying away from a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=800 request_id=6ebed7c093d37d439abdcf5aa77f34b7 response_code=200
Symbolic Translation: 65/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from b d and a until you make c single visit to c and then make your way to b while staying away from c d and a and then make your way to d while staying away from c b or a and finally make your way to a while staying away from c b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 359
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=779 request_id=e3ef4259fd6b2945cbcaabf1835fe288 response_code=200
Symbolic Translation: 66/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: head to c b d and a in this order without skipping or revisiting any one of them\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1719 request_id=24f1d416ebb9cbfcbfb4324eba32a941 response_code=200
Symbolic Translation: 67/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: head to b a c and c in this order without skipping or revisiting any one of them\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 449
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1973 request_id=5d5688eddf579a506273d7380e0e331f response_code=200
Symbolic Translation: 68/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit each of a d b and c exactly once in this order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1719 request_id=ad4462e1f638326d2f2dd28e2db43663 response_code=200
Symbolic Translation: 69/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit each of c b d and a exactly once in this order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1715 request_id=8d3fbb80ee9c830d2d3520d182c34633 response_code=200
Symbolic Translation: 70/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c but before visiting c you must visit d only after that visit a after visiting a visit b visit each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1722 request_id=a7d3abd279c71f36d2456d2181ab0e07 response_code=200
Symbolic Translation: 71/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit d but before visiting d you must visit b only after that visit c after visiting c visit a visit each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1725 request_id=08b0417e116b43af38c86c4d2cbcf770 response_code=200
Symbolic Translation: 72/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c only once while avoiding b then visit b once while avoiding d only after visiting d once visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1734 request_id=ed340acd27cc4a8ad8a0c1c801a6fe20 response_code=200
Symbolic Translation: 73/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a only once while avoiding b then visit b once while avoiding c only after visiting c once visit d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1723 request_id=c0ffcbb28a8541ca51f351481f403e0e response_code=200
Symbolic Translation: 74/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a d b c once do not visit d without visiting a and do not visit d without visiting b do not visit c without visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1738 request_id=b7ab65a135b4adf8826fe364d58ea6a5 response_code=200
Symbolic Translation: 75/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a c d b once do not visit c without visiting a and do not visit c without visiting d do not visit b without visiting d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1749 request_id=da96e1b21b251cfdbcec84561ed80f3c response_code=200
Symbolic Translation: 76/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c then d then a then b follow this strict order and visit each location only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1685 request_id=4fb29a7c79f517918d2d933d875dd878 response_code=200
Symbolic Translation: 77/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit c then d then a then b follow this strict order and visit each location only once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1723 request_id=d744fe027ae72bbbba9851ecc4936628 response_code=200
Symbolic Translation: 78/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please go to c then d then b then a in that specific order without revisiting previously visited location\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1718 request_id=5d7fe154dc199479da16864a8f371214 response_code=200
Symbolic Translation: 79/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please go to a then b then d then c in that specific order without revisiting previously visited location\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1739 request_id=623a9d3f8359ea2549fe89d32accbf99 response_code=200
Symbolic Translation: 80/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to b once without visiting d then go to d once without visiting c then go to c once without visiting a finally go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1723 request_id=e27c6186597e0187d0ba407b2cac6c42 response_code=200
Symbolic Translation: 81/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to d once without visiting c then go to c once without visiting b then go to b once without visiting a finally go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1739 request_id=d7aa9d4456a6292c490e1f277cbf2b6c response_code=200
Symbolic Translation: 82/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to c once then go to a once while avoiding b then go to b once while avoiding d finally go to d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 419
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1734 request_id=c50e60e1467072dca0f80ee55efaeee4 response_code=200
Symbolic Translation: 83/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: first go to b once then go to c once while avoiding a then go to a once while avoiding d finally go to d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1727 request_id=e981e7ddb8d19652ac1a52938e8627d2 response_code=200
Symbolic Translation: 84/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a without visiting d then go to d without visiting b then go to b without visiting c finally go to c while only visiting each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1730 request_id=faa5f5f86afc3e7ef6b623747aca63b6 response_code=200
Symbolic Translation: 85/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a without visiting b then go to b without visiting d then go to d without visiting c finally go to c while only visiting each location once\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1726 request_id=1e21e7a91088c88428b73dbbd6ac76b4 response_code=200
Symbolic Translation: 86/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then b then c and then d in that strict order without returning to previously visited locations\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1736 request_id=91dd34530a05824d7ca491e1dad9bd43 response_code=200
Symbolic Translation: 87/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a then d then c and then b in that strict order without returning to previously visited locations\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1770 request_id=5aca844c88b3393288d32f18b60a2071 response_code=200
Symbolic Translation: 88/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never stop visiting c d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=731 request_id=0c82cc6e2ba14ce5e66c5a0d10ccae8c response_code=200
Symbolic Translation: 89/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never stop visiting c c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=541 request_id=0a9db162ae497b5379b3c8831b731ead response_code=200
Symbolic Translation: 90/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: frequent a b d and c infinitely in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=784 request_id=f1b81be84ff17253318c36b2ee18399b response_code=200
Symbolic Translation: 91/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: frequent b a d and c infinitely in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=8cec0f58a23bc5b49aacc2406a259101 response_code=200
Symbolic Translation: 92/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please keep visiting d b c and a without stopping\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=769 request_id=f0b477dd1b4c5f86d1828dd1630d6cd2 response_code=200
Symbolic Translation: 93/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: please keep visiting b a d and c without stopping\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=772 request_id=84f97bd2ba939f227746194a875cf24d response_code=200
Symbolic Translation: 94/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure d a c and b are visited infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=776 request_id=af6d57dcbc0badd7f8e0beaa8fe91283 response_code=200
Symbolic Translation: 95/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure b c d and a are visited infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=764 request_id=a61e4af3e0c7d8de09a681f2e7a7ecda response_code=200
Symbolic Translation: 96/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting d c b and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=b73c319b2795d0fe22f50b6f8b11dfdc response_code=200
Symbolic Translation: 97/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting c b d and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=814cb3dca8db3a1fc1e2b6897713e659 response_code=200
Symbolic Translation: 98/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit locations b d a and c an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=792 request_id=09627c8c8d59a31268a37ec27fb23863 response_code=200
Symbolic Translation: 99/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit locations a c d and b an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=777 request_id=60e1c77d6ad6beec8fcc8c2cf9762084 response_code=200
Symbolic Translation: 100/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=787 request_id=2a6343c950f67a7c36a64e3fd81b9f86 response_code=200
Symbolic Translation: 101/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a d b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=782 request_id=40a24baded7928f666ffb8aaf1686f2b response_code=200
Symbolic Translation: 102/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to b d a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=782 request_id=d521cd7073d3c1db211b18267c24c523 response_code=200
Symbolic Translation: 103/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d c b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=2ca8a70b14e520ab7945e38cd899cb20 response_code=200
Symbolic Translation: 104/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a d c and b over and over again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=783 request_id=c60fd2605ec4cb09ca6073a257fbe143 response_code=200
Symbolic Translation: 105/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to d a b and c over and over again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=785 request_id=8f89d493dbc412ca15d33e9b42694721 response_code=200
Symbolic Translation: 106/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue to stop at c a d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=851 request_id=e51f7f8917e037ab8f1c952d22b984b7 response_code=200
Symbolic Translation: 107/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue to stop at c d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=777 request_id=ee4bc5d828176a7a158b58cd49ef8445 response_code=200
Symbolic Translation: 108/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continuously visit a b d and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=765 request_id=01d474638c52797a2a2569639ba7b0c1 response_code=200
Symbolic Translation: 109/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continuously visit d b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=716 request_id=27bfaf09c2348cd1c3cc72953aeba1fe response_code=200
Symbolic Translation: 110/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c d a and b d finite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1633 request_id=172ae4713bfe33f95c10ba4a23955c79 response_code=200
Symbolic Translation: 111/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a b d and c b finite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 421
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1624 request_id=f8a327673e4ab0d9c8da85526c03498b response_code=200
Symbolic Translation: 112/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: perpetually travel to b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=dbdefb6f6df754fb39246fd3216ae882 response_code=200
Symbolic Translation: 113/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: perpetually travel to a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=915877ae7abdfa8813fe4e43f3eace0b response_code=200
Symbolic Translation: 114/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: explore c b and a endlessy\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=658134ab61007fccce51fead36e92dd9 response_code=200
Symbolic Translation: 115/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: explore a c and b endlessy\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=2272570ea086de1c4b2e48d2e32d1e9f response_code=200
Symbolic Translation: 116/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are prohibited from not infinitely going to c a b and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=48a8125f28c902fd48d8e8c5b72e1871 response_code=200
Symbolic Translation: 117/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are prohibited from not infinitely going to d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=776 request_id=7af24987c83e6412388b9611f06b2058 response_code=200
Symbolic Translation: 118/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting a b c and d in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=5601a877cc74bf32d97110939f21fbb1 response_code=200
Symbolic Translation: 119/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting c b d and a in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=b2cfe726137ec44468dd4c64506a8dc7 response_code=200
Symbolic Translation: 120/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to d c b and a in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=9f7c2d3144eccf652081a718170b9772 response_code=200
Symbolic Translation: 121/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to a d b and c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=702 request_id=e6931b15167f2d8128dd00c4cf7c51cc response_code=200
Symbolic Translation: 122/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b d a and c in any order infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=73f501041fc0c9f651b7841bb6deb78c response_code=200
Symbolic Translation: 123/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b c a and d in any order infinitely\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=5dc30df9cc079f6c7262301f359a81e6 response_code=200
Symbolic Translation: 124/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting c a c and b in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=50eb0b1be69bf9e84a9a1bfca2f1a4da response_code=200
Symbolic Translation: 125/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting d a b and c in no specific order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=e873635857953c67cb8f4994fa804374 response_code=200
Symbolic Translation: 126/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop going to a b d and c in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=16405f5593ebc7509ddbbcdb08704613 response_code=200
Symbolic Translation: 127/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop going to d a c and b in any order\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=2cbb39bb4b94b200bc62ee2c1956f46d response_code=200
Symbolic Translation: 128/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to b d c and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=01d590c874f5fc12f4d185ae6c544a7b response_code=200
Symbolic Translation: 129/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep going to b a c and d an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=e75457379fdd84d2e8741d50c319868d response_code=200
Symbolic Translation: 130/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting c d b and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=7ff392064fbbe58e39b7811fa517954a response_code=200
Symbolic Translation: 131/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: keep visiting b c d and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=fde2e272796741a21d85be8fd2c2857c response_code=200
Symbolic Translation: 132/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue visiting b d a and c an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=5eb82090b485b377f570751a8896d78b response_code=200
Symbolic Translation: 133/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: continue visiting b c d and a an infinite number of times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=20214674c81ebb1d15206aafbc459b71 response_code=200
Symbolic Translation: 134/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting d b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=720 request_id=6ec427d5d96e735b8a43f6516309e260 response_code=200
Symbolic Translation: 135/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not stop visiting d a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=2561f103406989f1ff9e274be606f41a response_code=200
Symbolic Translation: 136/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=57c6c0ec64eefbfa878a79682704f616 response_code=200
Symbolic Translation: 137/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=19b42c7b60b4f3eda8a0aa8a233ab819 response_code=200
Symbolic Translation: 138/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never visit c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=3184880b3a706203185af206cc8339d5 response_code=200
Symbolic Translation: 139/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never visit b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=701b5e0124591d75830f60e11f4d17b0 response_code=200
Symbolic Translation: 140/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to c b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=e7521d35e95f46924553a986626f92bc response_code=200
Symbolic Translation: 141/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=b5d8283489dda8398c5ea2972d83d4c2 response_code=200
Symbolic Translation: 142/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=80ed671f7222b711302e3c6891f84017 response_code=200
Symbolic Translation: 143/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=489 request_id=b316e1e11df8e233ce09401e60714c01 response_code=200
Symbolic Translation: 144/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid a b and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=b80ece0721d369b8cff1bfb23fe8cc65 response_code=200
Symbolic Translation: 145/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c a and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=548 request_id=011a58291c86bbf2d2fc468ad3c2457c response_code=200
Symbolic Translation: 146/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a c or b at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=228b23a6f862009bbfab0bf613f6429a response_code=200
Symbolic Translation: 147/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit b a or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=481 request_id=882fd64a41fe50c4f170a81ab3e653d7 response_code=200
Symbolic Translation: 148/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=9e950b3e0a0347fcd3b088c67d163b6a response_code=200
Symbolic Translation: 149/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=45b8cab520c2f2cc5a5000a482387b48 response_code=200
Symbolic Translation: 150/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=467dfdd23b119d0d11bdc5a1130303de response_code=200
Symbolic Translation: 151/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=12934ee83283064dc118f382d082a0ee response_code=200
Symbolic Translation: 152/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit either one among b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=480 request_id=ffaffaf62a3b64207bea8d98bdf91055 response_code=200
Symbolic Translation: 153/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit either one among c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=2ec09a10c20fbd7962b0acf262bb7b75 response_code=200
Symbolic Translation: 154/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach the locations b a and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=e769a91770c5dd25cec3fa8c113a1550 response_code=200
Symbolic Translation: 155/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach the locations a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=56afc6c914e1dbc6874ea31e04fcdfb3 response_code=200
Symbolic Translation: 156/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach b ensure that you never reach c and ensure that you never reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=479 request_id=dc0773cad17689152126daffc33487f8 response_code=200
Symbolic Translation: 157/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you never reach a ensure that you never reach c and ensure that you never reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=edc87c75e209dd1b8cd8c58c3063a644 response_code=200
Symbolic Translation: 158/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b a and c should never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=2b1c8a88380568f023aac36beddb602c response_code=200
Symbolic Translation: 159/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b c and a should never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=1bf24d8c5f694607d35d2512d160b959 response_code=200
Symbolic Translation: 160/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=473 request_id=f050266fcffb4979c94ad8aebe517ea8 response_code=200
Symbolic Translation: 161/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=e1972c8fe25f0e000f458f158f25fbed response_code=200
Symbolic Translation: 162/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=254f363aab7ddfa1ed68ca2548ff898a response_code=200
Symbolic Translation: 163/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=474 request_id=450f8c23e68f1006f39c893f143092f3 response_code=200
Symbolic Translation: 164/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a and b can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=ce19600b45f5b668b9fbc6a539d37f17 response_code=200
Symbolic Translation: 165/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a c and b can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=ab24352d5d26b8fcacaef96ea27c1571 response_code=200
Symbolic Translation: 166/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from b c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=053d488c6cc31ee52b13d93f7dc41d17 response_code=200
Symbolic Translation: 167/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=483 request_id=f280e681ec0ea244f28932bd268ab7f5 response_code=200
Symbolic Translation: 168/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid b a and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=138e651cd556c8394e13de21beac8858 response_code=200
Symbolic Translation: 169/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a c and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=3cfa8ef2f950be8bcc9a42c70b9faa2a response_code=200
Symbolic Translation: 170/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=489 request_id=3a86f9aeac1d3fc8115e6e8451749ddf response_code=200
Symbolic Translation: 171/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to c a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=f9ab9de96e9591178761f00668688190 response_code=200
Symbolic Translation: 172/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a b and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=300a5f064431320b6b2be403cb815af5 response_code=200
Symbolic Translation: 173/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a c and b forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=475 request_id=e99b953486b45843ac62b9185274ea9a response_code=200
Symbolic Translation: 174/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a b or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=486 request_id=0c535d8fb79d1c6256064fb212853d9b response_code=200
Symbolic Translation: 175/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=e916d7e68f0dfacd0994db56a383051f response_code=200
Symbolic Translation: 176/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a c or b can never become true at any instant\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=478 request_id=8227d43ddd5b8f8b4f452c9acb0ceda2 response_code=200
Symbolic Translation: 177/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b or a can never become true at any instant\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=6fbd83c7dfef513fabdba50e14bdcdd1 response_code=200
Symbolic Translation: 178/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that a c and b never hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=8c2e5a43db89dba0c9cd40071a331f12 response_code=200
Symbolic Translation: 179/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that a c and b never hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 347
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=476 request_id=46ece7d29fe4e472f613135fc5be4253 response_code=200
Symbolic Translation: 180/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit b d a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=ba78fe36ed21dde9ff057ee491f3a830 response_code=200
Symbolic Translation: 181/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit b d a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=a234953c5fb845d6dd4993e026e68c17 response_code=200
Symbolic Translation: 182/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to b d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1289 request_id=bb346d405ea6f9931843c96df009eb36 response_code=200
Symbolic Translation: 183/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to c d b or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=d29dc7316f12e72727535f18257e7d61 response_code=200
Symbolic Translation: 184/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b d a or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=594fed17db205cf7bf138b8f8f5ea88a response_code=200
Symbolic Translation: 185/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a d c or b at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=2855292abca879a1c7f53b12137f2af9 response_code=200
Symbolic Translation: 186/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit a c b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=8e1c459e185a8c26e840e52795038b5f response_code=200
Symbolic Translation: 187/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit c a b or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=1d81f813690fdaf402e31d6b78331684 response_code=200
Symbolic Translation: 188/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to d b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=7d594d1ccdb4b30f5f150723daeebb15 response_code=200
Symbolic Translation: 189/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to b d a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=d7d195ebab59314bc9a53d56886d974c response_code=200
Symbolic Translation: 190/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from c d a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=0dccf3287e99f973d67fc8286f46751a response_code=200
Symbolic Translation: 191/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from b c d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=5e3d529f2b84874fa88083848044dc39 response_code=200
Symbolic Translation: 192/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c a d and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=ecf7f23e59cc11477d5a65fc507c4ad0 response_code=200
Symbolic Translation: 193/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid c a d and b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=ea8816bc01a9c7df6d2494626fbcfe72 response_code=200
Symbolic Translation: 194/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit any locations among b d c a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=5c7d77acd3b887403f26d155a506e785 response_code=200
Symbolic Translation: 195/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit any locations among b c d a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=ef293206c332e77cb25cd38089d817ac response_code=200
Symbolic Translation: 196/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure to not reach any of c a d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=28a38afdce0d9342bed67ef62b91ba2a response_code=200
Symbolic Translation: 197/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure to not reach any of a b c and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=0a1efbf9f60e5efdb37cb59242a2738a response_code=200
Symbolic Translation: 198/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to d c b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=b40df77e1018e3486b49b9de70c0b6c1 response_code=200
Symbolic Translation: 199/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid going to b d c and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=ce55229194803d667ec138ea58df2780 response_code=200
Symbolic Translation: 200/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b d c and a must never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=809ec48b99a5906f643f9816cf48e7c0 response_code=200
Symbolic Translation: 201/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a d c and b must never be visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=a77d1a7726c5c211537d9e3b50ef383c response_code=200
Symbolic Translation: 202/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a never go to d never go to c and never go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=e4a216c29ffd201be2862e7376c39aef response_code=200
Symbolic Translation: 203/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to c never go to d never go to a and never go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=0aeb21b66b4b3207811b211c55f56570 response_code=200
Symbolic Translation: 204/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to c d a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=b10424905a652da5707657366e99a402 response_code=200
Symbolic Translation: 205/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a d c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=a6d7508152cf123a4332236928de2b98 response_code=200
Symbolic Translation: 206/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=0015c9f1e37e22f41bbc04a106115f50 response_code=200
Symbolic Translation: 207/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to c a d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=734 request_id=f42813a728624916a25dd4cfa3285bae response_code=200
Symbolic Translation: 208/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but d a c and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=02bb2203ce713036d4c8d8b0ea0795e1 response_code=200
Symbolic Translation: 209/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but d c a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=712 request_id=70589f320a4df3f3433ce9d8efc8e569 response_code=200
Symbolic Translation: 210/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a b and d can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=715 request_id=d9e13be95b835f5016c2750015a02f57 response_code=200
Symbolic Translation: 211/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a b and c can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 351
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=477 request_id=4141c24ba8dd59df85e4303c7d298f27 response_code=200
Symbolic Translation: 212/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c d b and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=eeb578cc12508347bdf983d5528de40a response_code=200
Symbolic Translation: 213/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from c d a and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=50a7f35931a93ab4c67d0a57745ba9fb response_code=200
Symbolic Translation: 214/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid b a d and c at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=0c27b147574e093d532f41f3f655b4db response_code=200
Symbolic Translation: 215/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid b c d and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=e1c93cd049c1693497989b7609ea599b response_code=200
Symbolic Translation: 216/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d a c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=e33b4a5dd2602dd8a3fb76e3d5aaea33 response_code=200
Symbolic Translation: 217/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b a d or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=700 request_id=b59ee4f8519dc918bb9155156ee25b83 response_code=200
Symbolic Translation: 218/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b a c and d forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=4f4eb7de1b97ba702f00a248068cd281 response_code=200
Symbolic Translation: 219/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid d a b and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=b991cde8ac16acedd70f2693bb3c25e2 response_code=200
Symbolic Translation: 220/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to c b a or d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=713 request_id=f24d8b08b01d5ab6be992479090faef5 response_code=200
Symbolic Translation: 221/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to d b c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=feed881b6c720c9cca6f6c62a203e551 response_code=200
Symbolic Translation: 222/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c d b and a must never be allowed to be true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=aa10909881a090b51e5b241ef80e3e91 response_code=200
Symbolic Translation: 223/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b c d and a must never be allowed to be true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=33b57c7aef63679ebb875a42517810d7 response_code=200
Symbolic Translation: 224/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go through any of d b a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=5eb301535562e9616dcc6278cbba1ece response_code=200
Symbolic Translation: 225/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go through any of b c d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=75c9d2060a76852d00c604d9d1340f27 response_code=200
Symbolic Translation: 226/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit h b d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=6e5569e96b532dfd3bb629663d5f2505 response_code=200
Symbolic Translation: 227/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never visit h b d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=7d78251be20e2d8cc742d523aed6adba response_code=200
Symbolic Translation: 228/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to h b d a or c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=5f7d9b46383f4f9ea4f65a0d90eb9c8f response_code=200
Symbolic Translation: 229/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can never go to c h a d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=380f9c35d517d108a6e950334141b8ae response_code=200
Symbolic Translation: 230/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to h b d a or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=3a4c7c2841f79fbeba9b2cecba58631d response_code=200
Symbolic Translation: 231/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d a b h or c at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=898a51de6b568555fa55eb2f7be5cd66 response_code=200
Symbolic Translation: 232/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d c a b or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=b8cedad821a6dc50b8ff7866baa4d1ed response_code=200
Symbolic Translation: 233/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never visit d c d a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=718 request_id=c9bb1b370db78ef08a6fcfe0eea360dd response_code=200
Symbolic Translation: 234/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to c b a h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=2c11fa84bedbe06a471a9fe726c6a9b9 response_code=200
Symbolic Translation: 235/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always avoid going to a d h b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=1333ac65587f3f8abea20aa10fa8e5e6 response_code=200
Symbolic Translation: 236/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from b c a h and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=721 request_id=555f044ca385c311fed75674e7d80ee2 response_code=200
Symbolic Translation: 237/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always stay away from b c h d and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=839267d622f292033b9afa3e33ac9e1a response_code=200
Symbolic Translation: 238/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid b c a d and h at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=02fb21feb6efa94604e4bb3b70c6743b response_code=200
Symbolic Translation: 239/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid d h b c and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=cc4a7b8300a00ddd5a7c1e7489e48707 response_code=200
Symbolic Translation: 240/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to h never go to c never go to d never reach a and never reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=730 request_id=2b62f7d2fd67c65eff4a5a45b6e99c16 response_code=200
Symbolic Translation: 241/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a never go to h never go to b never reach d and never reach c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=7f295f088ae3fc92c458b2112dde1f64 response_code=200
Symbolic Translation: 242/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never reach the following locations b h c a and d\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=ea021562cf67b46b0dbcafdd051bf191 response_code=200
Symbolic Translation: 243/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you never reach the following locations a d c h and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=3609c29ab87268b06e3adb92cc6b67ca response_code=200
Symbolic Translation: 244/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that c h b a and d are never visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=a15ab886ac13079ed43bc467fe6c1b73 response_code=200
Symbolic Translation: 245/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that d c b h and a are never visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=710 request_id=f03cb7bbaa64a5aea8659907f0b4833d response_code=200
Symbolic Translation: 246/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c a h d and b should never be reached\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=726 request_id=8ad48f5c6a767b40a38495fbb5936676 response_code=200
Symbolic Translation: 247/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: c b a h and d should never be reached\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=707 request_id=249358483a625329883cbc435311067c response_code=200
Symbolic Translation: 248/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to d c a b or h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=703 request_id=f05333f4824139ebd537ef02d5530c62 response_code=200
Symbolic Translation: 249/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a d h c or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=711 request_id=0e2d4e230b8ac9975221c427bed99747 response_code=200
Symbolic Translation: 250/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to d a c h or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=3ba84bce7b91c15ade1ed6d871fb40c5 response_code=200
Symbolic Translation: 251/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to h c b d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=0846f402fe17be7eb53bc5ec43849dfc response_code=200
Symbolic Translation: 252/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but d c b h and a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=705 request_id=494e1804ea320ceacc87582462266352 response_code=200
Symbolic Translation: 253/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go anywhere but a b d c and h\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=708 request_id=fb74f7c9b53edd0598b20ca9f71c1e5f response_code=200
Symbolic Translation: 254/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a b c d and h can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=704 request_id=6311e890f5f273b2a81715f602f336d4 response_code=200
Symbolic Translation: 255/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: h a d c and b can not be visited at any time\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=63590c989c637a78a49fb52ef2bd978b response_code=200
Symbolic Translation: 256/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from a h c d and b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=706 request_id=e7f37b19430a9638440098b5ee9d42a0 response_code=200
Symbolic Translation: 257/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: always keep away from a h d b and c\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=709 request_id=f92ad8cdcfa179bd606e280d9a593a4e response_code=200
Symbolic Translation: 258/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid d b c h and a at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=730 request_id=248edd146421d59635c59027e272bee8 response_code=200
Symbolic Translation: 259/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a c d b and h at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=737 request_id=f956c28ce73a6700cc09a0e027fe2c93 response_code=200
Symbolic Translation: 260/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to d c h a or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=767 request_id=8eaeca8e7906254b3da3175868c8ad07 response_code=200
Symbolic Translation: 261/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b h d c or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 355
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=765 request_id=031efb475b0a02076a384d24b71ceaf8 response_code=200
Symbolic Translation: 262/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a h d b and c forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=763 request_id=2b274850c31e8bfde42114862554029e response_code=200
Symbolic Translation: 263/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a h d c and b forever\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=725 request_id=febad5f5de65525632c5de2ed40fb6a9 response_code=200
Symbolic Translation: 264/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to a h c d or b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=794 request_id=b4eb44b101db8f7b152546d635cd667a response_code=200
Symbolic Translation: 265/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not make any single visit to c b h d or a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=605be5acce8f4f165ca48ce07cf5d6b2 response_code=200
Symbolic Translation: 266/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that none among d c h b and a are ever visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=763 request_id=fb6cc3acd06edbd4cb89f95b815b5ae3 response_code=200
Symbolic Translation: 267/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that none among b d h a and c are ever visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=780 request_id=8514aaedf5fb357da6695c40857cdc2d response_code=200
Symbolic Translation: 268/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b a c h and d must never be allowed to hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=735 request_id=826eb10e9ad0c067f8482f42976c220b response_code=200
Symbolic Translation: 269/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: h a d b and c must never be allowed to hold true\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 363
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=792 request_id=2c490fb9baa16fea7b2b769c991efcaa response_code=200
Symbolic Translation: 270/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=299 request_id=afcef4d6f279e40d72a0cb63f8ba9e4f response_code=200
Symbolic Translation: 271/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you see b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=257 request_id=7b321e164a554ec927e7528d7e927d47 response_code=200
Symbolic Translation: 272/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid visiting b till you observe a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=7b227f6271a31bcb50c2f3a9565f8cca response_code=200
Symbolic Translation: 273/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid visiting b till you observe a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=987bd648abd2d4a870e5599061c755bd response_code=200
Symbolic Translation: 274/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until a has occured\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=530 request_id=e1fce2265244128b73ab0e9d94cf5183 response_code=200
Symbolic Translation: 275/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until b has occured\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=17daa1f42b318526c5269f2a0ed81c76 response_code=200
Symbolic Translation: 276/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you observe b only then are you allowed to go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=491 request_id=483a97d97f4e687ba428aa15ea78af1e response_code=200
Symbolic Translation: 277/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you observe a only then are you allowed to go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=255 request_id=4ef9df3e2d023b4e9bed92dc85139921 response_code=200
Symbolic Translation: 278/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b only after seeing a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=513 request_id=1accef7763c0db4beb9ab9f7c2dfa4f8 response_code=200
Symbolic Translation: 279/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b only after seeing a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=523 request_id=17176dd65be792e8a98938efd3ac1902 response_code=200
Symbolic Translation: 280/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=3db13384192c5ebe1f8f852b4cf5a5f5 response_code=200
Symbolic Translation: 281/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to a until you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=525 request_id=708b4576123d4d86069d22ecca672373 response_code=200
Symbolic Translation: 282/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b until you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=289 request_id=18c023d96c1c1f2db28984d746177674 response_code=200
Symbolic Translation: 283/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid b until you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=50bdadb2157c27fb252043b102c8e731 response_code=200
Symbolic Translation: 284/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from a until you move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=457d3794a13c5c058180644a38c07e2b response_code=200
Symbolic Translation: 285/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: stay away from b until you move to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=de8a2b2656de960d7318d1871b5d33bd response_code=200
Symbolic Translation: 286/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not move to b until you arrive at a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=542 request_id=478aa1e463f88e86b4f7f8e3734cc312 response_code=200
Symbolic Translation: 287/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not move to b until you arrive at a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=534 request_id=d44d360cf119e79c092ae9ea65b8e5a5 response_code=200
Symbolic Translation: 288/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you have gone to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=492 request_id=906c04303ef2c95102bbebec9ad2eed8 response_code=200
Symbolic Translation: 289/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b until you have gone to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=b5666023740a2f7e2e56a6a70ef07768 response_code=200
Symbolic Translation: 290/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a at all costs until you reach b first\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=6bbe30c51d87b56775434f86b0d7570a response_code=200
Symbolic Translation: 291/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: avoid a at all costs until you reach b first\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=280 request_id=2617b7efc9c58b90c5cc4fd1ede803cb response_code=200
Symbolic Translation: 292/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: until you have gone to b you can not go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=296 request_id=b95ce2378803c8db56ce2c1f0859a53e response_code=200
Symbolic Translation: 293/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: until you have gone to a you can not go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=297 request_id=ff757eb44219815b982f6e50d4d92b22 response_code=200
Symbolic Translation: 294/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b until you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=529 request_id=e5e2e68faa8e1cfa0f8c9cf3e2c8d93f response_code=200
Symbolic Translation: 295/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to a until you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=538 request_id=f458f9adc5044cad7a3a47982d535b45 response_code=200
Symbolic Translation: 296/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a until you see b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=5ed3c824c49ff0487cdb4d4a44a7a0a2 response_code=200
Symbolic Translation: 297/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b until you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=68e624d0f209fa35f85242579b63d989 response_code=200
Symbolic Translation: 298/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b before a happens\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=9de6e2f266efacbf52008fa1a7eb447f response_code=200
Symbolic Translation: 299/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not go to b before a happens\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=264 request_id=d75d4e15ec3d8820254acb9a1a23d293 response_code=200
Symbolic Translation: 300/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can only go to b after a is seen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=40c99687ea8fb8cf7d40a521c049ebcc response_code=200
Symbolic Translation: 301/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can only go to b after a is seen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=308 request_id=4df51cc04b7779e20654a2f5bec7f91e response_code=200
Symbolic Translation: 302/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a must be observed before visiting b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=540 request_id=182ecb625d8589a22c90cce495b8dba6 response_code=200
Symbolic Translation: 303/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b must be observed before visiting a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=535 request_id=0b447c5ce6537c239b0e89179fef1aba response_code=200
Symbolic Translation: 304/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b but only after you see a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=547 request_id=2c72f51e59252451061d1a256fcdefe8 response_code=200
Symbolic Translation: 305/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit a but only after you see b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=544 request_id=043f9902553d5c5364a1d3c3e8e97861 response_code=200
Symbolic Translation: 306/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b has to be observed prior to any visit to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=544 request_id=722c6f1df7aef7729d9009bd44e9f7c9 response_code=200
Symbolic Translation: 307/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b has to be observed prior to any visit to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=549 request_id=ef828bdd5e3d56d392fc2d9d6339d39f response_code=200
Symbolic Translation: 308/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you see a before going to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=532 request_id=1104dbe70483889347879119bf4d86f8 response_code=200
Symbolic Translation: 309/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you see a before going to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 338
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=521 request_id=03e8922d08a0dec2d9bd46e7997e1733 response_code=200
Symbolic Translation: 310/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not make any visit to a when b remains unseen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=282 request_id=9dd2d8f9e423671f52dd1cfce4e50816 response_code=200
Symbolic Translation: 311/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not make any visit to b when a remains unseen\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=db22b05a26e60dfed1b3c712caa266fb response_code=200
Symbolic Translation: 312/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=291 request_id=2fd01a21344d86fecfe09b781ec9d8b5 response_code=200
Symbolic Translation: 313/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a till you observe b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=255 request_id=f2d3892647c97e4cfa036ac7325a214d response_code=200
Symbolic Translation: 314/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a unlocks b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=1c8a58273a0640989e9c5c8fbb2e9d3c response_code=200
Symbolic Translation: 315/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a unlocks b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=315 request_id=14d2bfa97b431708e990d7e26122c38b response_code=200
Symbolic Translation: 316/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1484 request_id=247b6ee30850d1bad32617448f0a74eb response_code=200
Symbolic Translation: 317/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1493 request_id=1fbc2c81b163b07bf529a1743b6102e3 response_code=200
Symbolic Translation: 318/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=9b1ed51e62cd733fb9bdf3d3c3bf3728 response_code=200
Symbolic Translation: 319/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1488 request_id=ada2a9eaddcdd3186ac0fe06b1f92afc response_code=200
Symbolic Translation: 320/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1511 request_id=b20b99241aeadbdd1aac3b3f7bd5b181 response_code=200
Symbolic Translation: 321/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1496 request_id=651cf333afb5c21214b0edb57d853ecd response_code=200
Symbolic Translation: 322/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=46ba7bf2be61dbdaa5ee1128abdd14bd response_code=200
Symbolic Translation: 323/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=a10a9477a3613dd8c5b7e7148a6dee2b response_code=200
Symbolic Translation: 324/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times or more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1469 request_id=7e6bd73f7eddc807430d6c2b8651b28d response_code=200
Symbolic Translation: 325/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a at least five times or more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1490 request_id=e325755bbcbab2a459c66c6d5ad67316 response_code=200
Symbolic Translation: 326/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1466 request_id=c06fd051725ba84c5a52929f01498ba3 response_code=200
Symbolic Translation: 327/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1515 request_id=2e571b5a694afe4d3bef08c25f901468 response_code=200
Symbolic Translation: 328/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1497 request_id=c64d4fbda3914b97be39959d52775b8b response_code=200
Symbolic Translation: 329/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1481 request_id=588f4e734273c47e390da9c3f248310e response_code=200
Symbolic Translation: 330/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1480 request_id=336862f9e285e1b703f668ef645ffc06 response_code=200
Symbolic Translation: 331/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1498 request_id=3f94b037cfc4055d6070838237390e96 response_code=200
Symbolic Translation: 332/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: your task is to go to a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1490 request_id=064091c103d99cc2bbeb2f87ff8e0711 response_code=200
Symbolic Translation: 333/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: your task is to go to a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1510 request_id=11a22b40283969800a15d3d4b6609f9c response_code=200
Symbolic Translation: 334/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=1764a26329331610d55065c7ea92329c response_code=200
Symbolic Translation: 335/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a less than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=22b1eaf9bc7f7efc623346e3daf7dfea response_code=200
Symbolic Translation: 336/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you visit a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1523 request_id=6adfd471289e7ad975c4f9eae043a9bb response_code=200
Symbolic Translation: 337/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure you visit a five or more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1512 request_id=614f7cf5dd4ebb3424281fdebee2c569 response_code=200
Symbolic Translation: 338/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to reach a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=0c8cc53cad4b07415addcc0bd711ff48 response_code=200
Symbolic Translation: 339/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to reach a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=32507a99528a3bd94576550ce10f93fb response_code=200
Symbolic Translation: 340/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a equal or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1495 request_id=74a420d9cc9de726c11d09fe2bc6d8ff response_code=200
Symbolic Translation: 341/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a equal or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1480 request_id=09eab87b65e82ddbfed318e53244226c response_code=200
Symbolic Translation: 342/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1469 request_id=39d0bf96735086e4560b75df9512507e response_code=200
Symbolic Translation: 343/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a five or more than five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1473 request_id=1ede353e3a4fc7d3123f309ec893136b response_code=200
Symbolic Translation: 344/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be visited at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1493 request_id=9b2b6165b1250206aac7851a87000fc1 response_code=200
Symbolic Translation: 345/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: a has to be visited at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1447 request_id=2e5fe66b0c2674731977a6b568412df8 response_code=200
Symbolic Translation: 346/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit and then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1506 request_id=f59eadbc22dfc3119d73235d2dee102d response_code=200
Symbolic Translation: 347/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit and then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1571 request_id=e6172e056514d3a604b23bd4b78c02c8 response_code=200
Symbolic Translation: 348/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1479 request_id=328e88a13cd333bb54d353f8ff6b3a81 response_code=200
Symbolic Translation: 349/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a at least five times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1488 request_id=8124409fd33030555a464cb8f0b8033c response_code=200
Symbolic Translation: 350/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must pass through a on at least five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=b564f1b94a90b29a2bb86386c27218bd response_code=200
Symbolic Translation: 351/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must pass through a on at least five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1501 request_id=664d2c544aa6a158551a9868c2f7a728 response_code=200
Symbolic Translation: 352/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the minimum number of times you must visit a is five\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1479 request_id=58dfdd4987d0e7f1d55931a6864a8b4b response_code=200
Symbolic Translation: 353/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the minimum number of times you must visit a is five\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1509 request_id=120ab822ddc4feaa5e0030e71cd66a3c response_code=200
Symbolic Translation: 354/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach a then leave a and repeat this at least four more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1256 request_id=72d1b945cd31effbaa7360dd8e921ae9 response_code=200
Symbolic Translation: 355/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: reach a then leave a and repeat this at least four more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1254 request_id=437cf4d30e51445b6af26c1128e8f1dc response_code=200
Symbolic Translation: 356/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not complete the task without visiting a on five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1503 request_id=0022b18b055f370087e51dc0d52cf7a2 response_code=200
Symbolic Translation: 357/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not complete the task without visiting a on five separate occasions\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1487 request_id=8a094ec76aae24b3a0bd94cd942fc453 response_code=200
Symbolic Translation: 358/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a any fewer than five separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1483 request_id=8b017cd73022551d318cb4442d7347cd response_code=200
Symbolic Translation: 359/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit a any fewer than five separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1455 request_id=e8239a667b4c2791ce9734f602eabc9c response_code=200
Symbolic Translation: 360/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you have at least five separate times where you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1518 request_id=b1f90a436a4dffbefe0b1266bbd04417 response_code=200
Symbolic Translation: 361/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: ensure that you have at least five separate times where you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 417
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1482 request_id=ef5fd7b59110319042d999cca247fcc7 response_code=200
Symbolic Translation: 362/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1483 request_id=e4179ad1b78c21e8d52fb40ff09a25cb response_code=200
Symbolic Translation: 363/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1480 request_id=e75a8924a586d807ccd92ad42ed8b88f response_code=200
Symbolic Translation: 364/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=c52120a7190f10d60eaaa064a301b014 response_code=200
Symbolic Translation: 365/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1492 request_id=6637da01b754fd60c1a5a5c7eea47b6a response_code=200
Symbolic Translation: 366/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=58933e06fdb27b861c91337694127153 response_code=200
Symbolic Translation: 367/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make your way to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1492 request_id=6641da534379f06f69d348791f8b1d15 response_code=200
Symbolic Translation: 368/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1496 request_id=9d3b8ad309c22098f90dd05b460e7b4e response_code=200
Symbolic Translation: 369/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1483 request_id=b971687a09fe2469175783acb3aa9b53 response_code=200
Symbolic Translation: 370/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must reach a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1479 request_id=128fc5725436e5c4c046742385d5e964 response_code=200
Symbolic Translation: 371/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must reach a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1473 request_id=ab2c4235c900f9b2b3413912552c3cae response_code=200
Symbolic Translation: 372/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: navigate to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1496 request_id=7defd31529fc9c5ae87ce32efcb18cd4 response_code=200
Symbolic Translation: 373/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: navigate to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1508 request_id=f0cf2a5094d99b7544f3d46e310006d2 response_code=200
Symbolic Translation: 374/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times no more no less\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1455 request_id=8d1b62b299d8482640b16eabcad7e9a4 response_code=200
Symbolic Translation: 375/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three times no more no less\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1477 request_id=ee86c6408e0ba4d91de1207613280a7e response_code=200
Symbolic Translation: 376/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a and you can not go there more or less than three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1472 request_id=6677e90651ad5301fc9f2988208daa27 response_code=200
Symbolic Translation: 377/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to go to a and you can not go there more or less than three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1468 request_id=3694d1c54d03487d0ff3c009f9095b01 response_code=200
Symbolic Translation: 378/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a more or less than three times is prohibited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1444 request_id=234f82321bfab7e0523d6316b08d2c71 response_code=200
Symbolic Translation: 379/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a more or less than three times is prohibited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1494 request_id=7fc94c3cd6744472dfb54db612ddbe4b response_code=200
Symbolic Translation: 380/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a three times and do not visit it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1484 request_id=a4947ac8d4916671053fce5f7ff5a21b response_code=200
Symbolic Translation: 381/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a three times and do not visit it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1490 request_id=2ad34342f349686b3392c041b15da947 response_code=200
Symbolic Translation: 382/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1487 request_id=f98daf81e210f2d8599a1276b6ed5c40 response_code=200
Symbolic Translation: 383/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must visit a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1490 request_id=be1739bec62fcf69545cffbf15b4fff2 response_code=200
Symbolic Translation: 384/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and never revisit it again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1487 request_id=2038c5a6749ae39b2168abead228699a response_code=200
Symbolic Translation: 385/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and never revisit it again\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1471 request_id=18620a9acf432d8043d53c3e79603497 response_code=200
Symbolic Translation: 386/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1488 request_id=8024f0c891bd6f26220c36070aff9159 response_code=200
Symbolic Translation: 387/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must go to a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1485 request_id=c860e97e4a5e6e8eadcde840a758e582 response_code=200
Symbolic Translation: 388/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and then stop visiting it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1466 request_id=848c3e405763b1a4970425e08a288f02 response_code=200
Symbolic Translation: 389/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a three times and then stop visiting it anymore\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1489 request_id=3b6c5e836d1e9b33295ef6c895d3f4fd response_code=200
Symbolic Translation: 390/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are required to visit a on exactly three separate instances\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1232 request_id=9561faabfddb53d0835e87f29fc4e663 response_code=200
Symbolic Translation: 391/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you are required to visit a on exactly three separate instances\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 395
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1214 request_id=47ffec60051a2354097c4abf86d789d2 response_code=200
Symbolic Translation: 392/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the required number of separate visits to a is exactly three\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1489 request_id=a27c390333989f7f6a2a96d3ba377bc7 response_code=200
Symbolic Translation: 393/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: the required number of separate visits to a is exactly three\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1468 request_id=4c286749bd4571dcbf4614140cbd2992 response_code=200
Symbolic Translation: 394/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1484 request_id=c6c774ac676460c9e7ae48962e4e5453 response_code=200
Symbolic Translation: 395/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: visit a exactly three separate times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1491 request_id=8cbd7776a3394c35540e76be60eaa139 response_code=200
Symbolic Translation: 396/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: pass through a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1486 request_id=36e29556c5eae73b75cd670be630da99 response_code=200
Symbolic Translation: 397/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: pass through a exactly three times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1475 request_id=c6de6f83c410c174e11cf4728a62b1d1 response_code=200
Symbolic Translation: 398/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a and then repeat this exactly two more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1722 request_id=217ef89d2ffabd83de7d9536969d479b response_code=200
Symbolic Translation: 399/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: go to a then leave a and then repeat this exactly two more times\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 431
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1733 request_id=0bdda73dbb06073976eaa7fac897275d response_code=200
Symbolic Translation: 400/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure that you have exactly three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1498 request_id=f51677a0a308a9e70e158b32622525f7 response_code=200
Symbolic Translation: 401/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: make sure that you have exactly three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 403
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=1496 request_id=ae18ee1a61d7f70fcdd29c6173291031 response_code=200
Symbolic Translation: 402/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not exceed or fall short on three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 367
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=760 request_id=924961e642af95e7e03dffa47b59dffe response_code=200
Symbolic Translation: 403/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not exceed or fall short on three separate visits to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 367
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=768 request_id=6baa851c1fe07aebcd81db798477ea1d response_code=200
Symbolic Translation: 404/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b once you have visited a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=290 request_id=9c2579cba8f52f4b8c99b0057c957dd3 response_code=200
Symbolic Translation: 405/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not go to b once you have visited a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=299 request_id=7fb070f1c264f98ad28298a13870ecea response_code=200
Symbolic Translation: 406/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to a once you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=287 request_id=1c92a261df7b4aae1eb26eb3f36c28ff response_code=200
Symbolic Translation: 407/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: never go to b once you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=289 request_id=49e0282f88eb197bc75ed00a85296184 response_code=200
Symbolic Translation: 408/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you visit b you can not visit a afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=273 request_id=b869b833431946dc9ad62df676bc2725 response_code=200
Symbolic Translation: 409/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you visit b you can not visit a afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=382 request_id=483668e5d1534ebef464be7f60ed6c49 response_code=200
Symbolic Translation: 410/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is visited you can not go to b any more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=318 request_id=d7f7276622bedaf1a02ee9a0aa9ddccd response_code=200
Symbolic Translation: 411/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is visited you can not go to b any more\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=297 request_id=b2d8110bf6f8a098c730e5b19f74e10b response_code=200
Symbolic Translation: 412/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit b before a is visited but you can never visit b afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=6bca3b784aa7f7ff807ccc2934ae47ad response_code=200
Symbolic Translation: 413/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can visit a before b is visited but you can never visit a afterward\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=291 request_id=b34c2c4777da470597930d19383b2d3e response_code=200
Symbolic Translation: 414/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you go to b you have to avoid a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=251 request_id=67535e4852aab27dd6c3385776b81aff response_code=200
Symbolic Translation: 415/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you go to a you have to avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=282 request_id=b9de07374bd8919c57346ae44898f7d0 response_code=200
Symbolic Translation: 416/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a only after you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=ca0a00c9196eeeec3f18dcd0a938893f response_code=200
Symbolic Translation: 417/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must avoid a only after you go to a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=279 request_id=dd35907ae68515461c42bcd64c28c4f5 response_code=200
Symbolic Translation: 418/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you have gone to b you must stay away from a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=312 request_id=56b3b3e9370ea8d91ad6ed65979528ff response_code=200
Symbolic Translation: 419/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you have gone to b you must stay away from a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=300 request_id=56d403e7a5daee7dbac81922fdf81d63 response_code=200
Symbolic Translation: 420/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must stay away from a once you have gone to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=256 request_id=1e58af0e8b5ffd5fdde780744ef63999 response_code=200
Symbolic Translation: 421/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you must stay away from a once you have gone to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=283 request_id=35a5d4a0e03451f9cf015af8c459d783 response_code=200
Symbolic Translation: 422/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not move to b after you reach a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=257 request_id=d7d5b4b37775c71a43f6799955f3d17c response_code=200
Symbolic Translation: 423/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can not move to a after you reach b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=304 request_id=ecd827698f34d6b649c8d87cdbf9719f response_code=200
Symbolic Translation: 424/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you reach a you can not move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=254 request_id=9d3f7a2bf907fca0a6a678e784b0bb17 response_code=200
Symbolic Translation: 425/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you reach a you can not move to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=51da1bf414e13acb5f865c2235070924 response_code=200
Symbolic Translation: 426/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you go to a you have to avoid b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=258 request_id=765fd27b0d5481f96d8776307c4a4e70 response_code=200
Symbolic Translation: 427/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once you go to a you have to avoid b at all costs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=ca3dbe0d8f71cd028ea85cc9173efb9d response_code=200
Symbolic Translation: 428/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid a once you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=293 request_id=1ce2dd2ee661594fcec24cf4a69a28c2 response_code=200
Symbolic Translation: 429/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you have to avoid a once you go to b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=301 request_id=a289661bb830af906f8e17d7244a4190 response_code=200
Symbolic Translation: 430/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b after a is visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=298 request_id=785b66667c259f364ee904d6b98bb865 response_code=200
Symbolic Translation: 431/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: do not visit b after a is visited\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=a0237fc4f14efa6479dc987607c5d6ff response_code=200
Symbolic Translation: 432/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go to a but you must not go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=c2a69758483265eea2b5a752974d2a82 response_code=200
Symbolic Translation: 433/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: you can go to a but you must not go to b after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=271 request_id=77c4cf94c9f7c1c7d1fb7ff90619db86 response_code=200
Symbolic Translation: 434/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: any visit to a is not allowed after you visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=305 request_id=f5bfd959a97799ddf1ea989162e6b3c7 response_code=200
Symbolic Translation: 435/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: any visit to a is not allowed after you visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=246 request_id=915fde6b127a26c0cad4c7aad707cd48 response_code=200
Symbolic Translation: 436/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once b is reached after that you can never visit a\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=292 request_id=3038ef4b8ff280e7df8e26ebd31d45dc response_code=200
Symbolic Translation: 437/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: once a is reached after that you can never visit b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=302 request_id=acdf0d9a5973b5431cf51b20ff210050 response_code=200
Symbolic Translation: 438/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b can never be visited once a occurs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=288 request_id=b0fd2cdabde7a70ee9da85bf23aa19a8 response_code=200
Symbolic Translation: 439/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: b can never be visited once a occurs\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 336
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=e9c916d403ad0753124b54b31f61e717 response_code=200
Symbolic Translation: 440/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you go to b you can never go to a after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=1ca6cb5914c2fb3760c11c8de8ed0f75 response_code=200
Symbolic Translation: 441/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you go to b you can never go to a after that\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=271 request_id=ee05f23189f03895a8112f9380ad9f26 response_code=200
Symbolic Translation: 442/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if a happens that prevents b from happening afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=327 request_id=0898d9bf60090946620d4733e45ed514 response_code=200
Symbolic Translation: 443/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if a happens that prevents b from happening afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=323 request_id=0e9e011a68fe0ccdb66fb2b5d6229dcc response_code=200
Symbolic Translation: 444/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you visit a you are not allowed to reach b afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=310 request_id=5017375f576c841e0f41f6c67d380512 response_code=200
Symbolic Translation: 445/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: if you visit a you are not allowed to reach b afterwards\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=306 request_id=eed953c978529868635443c654e313de response_code=200
Symbolic Translation: 446/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: whenever you observe a this locks b from becoming true from the next instance\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=310 request_id=3324def7169693247e4f7b4d20cbd3b6 response_code=200
Symbolic Translation: 447/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: whenever you observe a this locks b from becoming true from the next instance\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
Resetting dropped connection: api.openai.com
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=284 request_id=f5bbd32b275052f23274a0dc616e09ac response_code=200
Symbolic Translation: 448/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing b locks a from being true for all time instances starting from the next one\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 330
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=295 request_id=112eb836b032ee009292b09aaf5bf7b8 response_code=200
Symbolic Translation: 449/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: seeing a b from being true for all time instances starting from the next one\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=310 request_id=4ab73bc81a16080a7359a78adf8330c2 response_code=200
Symbolic Translation: 450/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you get to a you must avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=303 request_id=d0f92ac026cda044a43d804f60095af5 response_code=200
Symbolic Translation: 451/452
message='Request to OpenAI API' method=post path=https://api.openai.com/v1/completions
api_version=None data='{"model": "davinci:ft-brown-university:formula-davinci-perm-batch12-0-2023-01-25-00-29-30", "prompt": "Utterance: after you get to a you must avoid b\\nLTL:", "temperature": 0, "max_tokens": 128, "stop": ["\\n"], "n": 1}' message='Post details'
https://api.openai.com:443 "POST /v1/completions HTTP/1.1" 200 334
message='OpenAI API response' path=https://api.openai.com/v1/completions processing_ms=257 request_id=68605a217551895941412921f8856ed2 response_code=200
Syntax error OR formula too long:
& F togos & F happy_noodle & F mermaid_cafe & F coffee_bean_&_tea_leaf F the_line
& F happy_noodle & F togos & F the_line & F mermaid_cafe F coffee_bean_&_tea_leaf
shorten LTLs:
& F a & F b & F c & F d F h
& F b & F a & F h & F c F d

Syntax error OR formula too long:
& & U ! pot hair_news & U ! bayou_smokehouse pot & U ! mermaid_cafe bayou_smokehouse F mermaid_cafe & U ! hair_news U hair_news U ! hair_news pot & U ! pot U pot U ! pot bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse mermaid_cafe
& & U ! pot hair_news & U ! bayou_smokehouse pot & U ! mermaid_cafe bayou_smokehouse F mermaid_cafe & U ! hair_news U hair_news U ! hair_news pot & U ! pot U pot U ! pot bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse mermaid_cafe
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! wako consulat_general_of_the_republic_of_indonesia & U ! ice_cream wako & U ! the_gaylord_apartments ice_cream F the_gaylord_apartments & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia wako & U ! wako U wako U ! wako ice_cream U ! ice_cream U ice_cream U ! ice_cream the_gaylord_apartments
& & U ! wako consulat_general_of_the_republic_of_indonesia & U ! ice_cream wako & U ! the_gaylord_apartments ice_cream F the_gaylord_apartments & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia wako & U ! wako U wako U ! wako ice_cream & U ! ice_cream U ice_cream U ! ice_cream the_gaylord_apartments
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! wako sun_nong_dan & U ! etude_lounge wako & U ! central_plaza_3 etude_lounge F central_plaza_3 & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan wako & U ! wako U wako U ! wako etude_lounge U ! etude_lounge U etude_lounge U ! etude_lounge central_plaza_3
& & U ! wako sun_nong_dan & U ! etude_lounge wako & U ! central_plaza_3 etude_lounge F central_plaza_3 & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan wako & U ! wako U wako U ! wako etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge central_plaza_3
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! the_gaylord_apartments robeks_juice & U ! carls_jr the_gaylord_apartments & U ! korean_bbq carls_jr F korean_bbq & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments carls_jr U ! carls_jr U carls_jr U ! carls_jr korean_bbq
& & U ! the_gaylord_apartments robeks_juice & U ! carls_jr the_gaylord_apartments & U ! gwang_yang_bbq carls_jr F gwang_yang_bbq & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments carls_jr & U ! carls_jr U carls_jr U ! carls_jr gwang_yang_bbq
Syntax error OR formula too long:
& & U ! crystal_spa the_line & U ! the_boiling_crab crystal_spa & U ! zan_respub the_boiling_crab F zan_respub & U ! the_line U the_line U ! the_line crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa the_boiling_crab U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab zan_respub
& & U ! crystal_spa the_line & U ! the_boiling_crab crystal_spa & U ! zan_respub the_boiling_crab F zan_respub & U ! the_line U the_line U ! the_line crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa the_boiling_crab & U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab zan_respub
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! robeks_juice crystal_spa & U ! hair_news robeks_juice & U ! the_line hair_news F the_line & U ! crystal_spa U crystal_spa U ! crystal_spa robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice hair_news U ! hair_news U hair_news U ! hair_news the_line
& & U ! robeks_juice crystal_spa & U ! hair_news robeks_juice & U ! the_line hair_news F the_line & U ! crystal_spa U crystal_spa U ! crystal_spa robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice hair_news & U ! hair_news U hair_news U ! hair_news the_line
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! wilshire_kenmore_building metro & U ! tarboosh_middle_east_kitchen wilshire_kenmore_building & U ! bayou_smokehouse tarboosh_middle_east_kitchen F bayou_smokehouse & U ! metro U metro U ! metro wilshire_kenmore_building & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse
& & U ! wilshire_kenmore_building metro & U ! tarboosh_middle_east_kitchen wilshire_kenmore_building & U ! bayou_smokehouse tarboosh_middle_east_kitchen F bayou_smokehouse & U ! metro U metro U ! metro wilshire_kenmore_building & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building tarboosh_middle_east_kitchen & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! happy_noodle tarboosh_middle_east_kitchen & U ! coffee_bean_&_tea_leaf happy_noodle & U ! koko_pizza coffee_bean_&_tea_leaf F koko_pizza & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf koko_pizza
& & U ! happy_noodle tarboosh_middle_east_kitchen & U ! coffee_bean_&_tea_leaf happy_noodle & U ! koko_pizza coffee_bean_&_tea_leaf F koko_pizza & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle coffee_bean_&_tea_leaf & U ! coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf koko_pizza
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! details central_plaza_1 & U ! mermaid_cafe details & U ! tarboosh_middle_east_kitchen mermaid_cafe F tarboosh_middle_east_kitchen & U ! central_plaza_1 U central_plaza_1 U ! central_plaza_1 details & U ! details U details U ! details mermaid_cafe U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe tarboosh_middle_east_kitchen
& & U ! details central_plaza_1 & U ! mermaid_cafe details & U ! tarboosh_middle_east_kitchen mermaid_cafe F tarboosh_middle_east_kitchen & U ! central_plaza_1 U central_plaza_1 U ! central_plaza_1 details & U ! details U details U ! details mermaid_cafe & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe tarboosh_middle_east_kitchen
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! zan_respub togos & U ! crystal_spa zan_respub & U ! consulat_general_of_the_republic_of_indonesia crystal_spa F consulat_general_of_the_republic_of_indonesia & U ! togos U togos U ! togos zan_respub & U ! zan_respub U zan_respub U ! zan_respub crystal_spa U ! crystal_spa U crystal_spa U ! crystal_spa consulat_general_of_the_republic_of_indonesia
& & U ! zan_respub togos & U ! crystal_spa zan_respub & U ! consulat_general_of_the_republic_of_indonesia crystal_spa F consulat_general_of_the_republic_of_indonesia & U ! togos U togos U ! togos zan_respub & U ! zan_respub U zan_respub U ! zan_respub crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa consulat_general_of_the_republic_of_indonesia
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! happy_noodle california_design_college & U ! big_5_sporting_goods happy_noodle & U ! wilshire_normandie big_5_sporting_goods F wilshire_normandie & U ! california_design_college U california_design_college U ! california_design_college happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle big_5_sporting_goods U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods wilshire_normandie
& & U ! happy_noodle california_design_college & U ! big_5_sporting_goods happy_noodle & U ! wilshire_normandie big_5_sporting_goods F wilshire_normandie & U ! california_design_college U california_design_college U ! california_design_college happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle big_5_sporting_goods & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods wilshire_normandie
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! metro wilshire_kenmore_building & U ! pot metro & U ! sun_nong_dan pot F sun_nong_dan & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building metro & U ! metro U metro U ! metro pot U ! pot U pot U ! pot sun_nong_dan
& & U ! metro wilshire_kenmore_building & U ! pot metro & U ! sun_nong_dan pot F sun_nong_dan & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building metro & U ! metro U metro U ! metro pot & U ! pot U pot U ! pot sun_nong_dan
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! foothill_transit carls_jr & U ! california_design_college foothill_transit & U ! mali_taste_of_thailand california_design_college F mali_taste_of_thailand & U ! carls_jr U carls_jr U ! carls_jr foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit california_design_college U ! california_design_college U california_design_college U ! california_design_college mali_taste_of_thailand
& & U ! foothill_transit carls_jr & U ! california_design_college foothill_transit & U ! mali_taste_of_thailand california_design_college F mali_taste_of_thailand & U ! carls_jr U carls_jr U ! carls_jr foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit california_design_college & U ! california_design_college U california_design_college U ! california_design_college mali_taste_of_thailand
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! foothill_transit mali_taste_of_thailand & U ! pot foothill_transit & U ! ice_cream pot F ice_cream & U ! mali_taste_of_thailand U mali_taste_of_thailand U ! mali_taste_of_thailand foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit pot U ! pot U pot U ! pot ice_cream
& & U ! foothill_transit mali_taste_of_thailand & U ! pot foothill_transit & U ! ice_cream pot F ice_cream & U ! mali_taste_of_thailand U mali_taste_of_thailand U ! mali_taste_of_thailand foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit pot & U ! pot U pot U ! pot ice_cream
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! korean_bbq california_design_college & U ! bbq_premium_chicken korean_bbq & U ! mali_taste_of_thailand bbq_premium_chicken F mali_taste_of_thailand & U ! california_design_college U california_design_college U ! california_design_college korean_bbq & U ! korean_bbq U korean_bbq U ! korean_bbq bbq_premium_chicken U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken mali_taste_of_thailand
& & U ! gwang_yang_bbq california_design_college & U ! bbq_premium_chicken gwang_yang_bbq & U ! mali_taste_of_thailand bbq_premium_chicken F mali_taste_of_thailand & U ! california_design_college U california_design_college U ! california_design_college gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken mali_taste_of_thailand
Syntax error OR formula too long:
& & U ! the_line tarboosh_middle_east_kitchen & U ! california_design_college the_line & U ! bongchu california_design_college F bongchu & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen the_line & U ! the_line U the_line U ! the_line california_design_college U ! california_design_college U california_design_college U ! california_design_college bongchu
& & U ! the_line tarboosh_middle_east_kitchen & U ! california_design_college the_line & U ! bongchu california_design_college F bongchu & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen the_line & U ! the_line U the_line U ! the_line california_design_college & U ! california_design_college U california_design_college U ! california_design_college bongchu
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! metro wilshire_normandie & U ! korean_bbq metro & U ! wako korean_bbq F wako & U ! wilshire_normandie U wilshire_normandie U ! wilshire_normandie metro & U ! metro U metro U ! metro korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq wako
& & U ! metro wilshire_normandie & U ! gwang_yang_bbq metro & U ! wako gwang_yang_bbq F wako & U ! wilshire_normandie U wilshire_normandie U ! wilshire_normandie metro & U ! metro U metro U ! metro gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq wako
Syntax error OR formula too long:
& & U ! ice_cream consulat_general_of_the_republic_of_indonesia & U ! the_line ice_cream & U ! bbq_premium_chicken the_line F bbq_premium_chicken & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia ice_cream & U ! ice_cream U ice_cream U ! ice_cream the_line U ! the_line U the_line U ! the_line bbq_premium_chicken
& & U ! ice_cream consulat_general_of_the_republic_of_indonesia & U ! the_line ice_cream & U ! bbq_premium_chicken the_line F bbq_premium_chicken & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia ice_cream & U ! ice_cream U ice_cream U ! ice_cream the_line & U ! the_line U the_line U ! the_line bbq_premium_chicken
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ice_cream crystal_spa & U ! pot ice_cream & U ! coffee_bean_&_tea_leaf pot F coffee_bean_&_tea_leaf & U ! crystal_spa U crystal_spa U ! crystal_spa ice_cream & U ! ice_cream U ice_cream U ! ice_cream pot U ! pot U pot U ! pot coffee_bean_&_tea_leaf
& U ! ice_cream crystal_spa & U ! pot ice_cream & U ! coffee_bean_&_tea_leaf pot F coffee_bean_&_tea_leaf
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& U ! b a & U ! c b & U ! d c F d

Syntax error OR formula too long:
& & U ! zan_respub bbq_premium_chicken & U ! korean_bbq zan_respub & U ! crystal_spa korean_bbq F crystal_spa & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken zan_respub & U ! zan_respub U zan_respub U ! zan_respub korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq crystal_spa
& & U ! zan_respub bbq_premium_chicken & U ! gwang_yang_bbq zan_respub & U ! crystal_spa gwang_yang_bbq F crystal_spa & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken zan_respub & U ! zan_respub U zan_respub U ! zan_respub gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq crystal_spa
Syntax error OR formula too long:
& & U ! robeks_juice details & U ! seaweed robeks_juice & U ! metro seaweed F metro & U ! details U details U ! details robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice seaweed U ! seaweed U seaweed U ! seaweed metro
& & U ! robeks_juice details & U ! seaweed robeks_juice & U ! metro seaweed F metro & U ! details U details U ! details robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice seaweed & U ! seaweed U seaweed U ! seaweed metro
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! sun_nong_dan crystal_spa & U ! korean_bbq sun_nong_dan & U ! details korean_bbq F details & U ! crystal_spa U crystal_spa U ! crystal_spa sun_nong_dan & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq details
& & U ! sun_nong_dan crystal_spa & U ! gwang_yang_bbq sun_nong_dan & U ! details gwang_yang_bbq F details & U ! crystal_spa U crystal_spa U ! crystal_spa sun_nong_dan & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq details
Syntax error OR formula too long:
& & U ! bayou_smokehouse home_cafe & U ! metro bayou_smokehouse & U ! crystal_spa metro F crystal_spa & U ! home_cafe U home_cafe U ! home_cafe bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse metro U ! metro U metro U ! metro crystal_spa
& & U ! bayou_smokehouse home_cafe & U ! metro bayou_smokehouse & U ! crystal_spa metro F crystal_spa & U ! home_cafe U home_cafe U ! home_cafe bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse metro & U ! metro U metro U ! metro crystal_spa
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! etude_lounge big_5_sporting_goods & U ! bayou_smokehouse etude_lounge & U ! korean_bbq bayou_smokehouse F korean_bbq & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse korean_bbq
& & U ! etude_lounge big_5_sporting_goods & U ! bayou_smokehouse etude_lounge & U ! gwang_yang_bbq bayou_smokehouse F gwang_yang_bbq & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse gwang_yang_bbq
Syntax error OR formula too long:
& & U ! foothill_transit sun_nong_dan & U ! bayou_smokehouse foothill_transit & U ! korean_bbq bayou_smokehouse F korean_bbq & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse korean_bbq
& & U ! foothill_transit sun_nong_dan & U ! bayou_smokehouse foothill_transit & U ! gwang_yang_bbq bayou_smokehouse F gwang_yang_bbq & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse gwang_yang_bbq
Syntax error OR formula too long:
& & U ! gwang_yang_bbq bbq_premium_chicken & U ! wilshire_kenmore_building gwang_yang_bbq & U ! carls_jr wilshire_kenmore_building F carls_jr & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq wilshire_kenmore_building U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building carls_jr
& & U ! gwang_yang_bbq bbq_premium_chicken & U ! wilshire_kenmore_building gwang_yang_bbq & U ! carls_jr wilshire_kenmore_building F carls_jr & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq wilshire_kenmore_building & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building carls_jr
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! bayou_smokehouse tarboosh_middle_east_kitchen & U ! seaweed bayou_smokehouse & U ! foothill_transit seaweed F foothill_transit & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse seaweed U ! seaweed U seaweed U ! seaweed foothill_transit
& & U ! bayou_smokehouse tarboosh_middle_east_kitchen & U ! seaweed bayou_smokehouse & U ! foothill_transit seaweed F foothill_transit & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse seaweed & U ! seaweed U seaweed U ! seaweed foothill_transit
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! neris_filipino_dining bongchu & U ! foothill_transit neris_filipino_dining & U ! carls_jr foothill_transit F carls_jr & U ! bongchu U bongchu U ! bongchu neris_filipino_dining & U ! neris_filipino_dining U neris_filipino_dining U ! neris_filipino_dining foothill_transit U ! foothill_transit U foothill_transit U ! foothill_transit carls_jr
& & U ! neris_filipino_dining bongchu & U ! foothill_transit neris_filipino_dining & U ! carls_jr foothill_transit F carls_jr & U ! bongchu U bongchu U ! bongchu neris_filipino_dining & U ! neris_filipino_dining U neris_filipino_dining U ! neris_filipino_dining foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit carls_jr
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! wako carls_jr & U ! the_line wako & U ! koko_pizza the_line F koko_pizza & U ! carls_jr U carls_jr U ! carls_jr wako & U ! wako U wako U ! wako the_line U ! the_line U the_line U ! the_line koko_pizza
& & U ! wako carls_jr & U ! the_line wako & U ! koko_pizza the_line F koko_pizza & U ! carls_jr U carls_jr U ! carls_jr wako & U ! wako U wako U ! wako the_line & U ! the_line U the_line U ! the_line koko_pizza
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! bongchu tarboosh_middle_east_kitchen & U ! mermaid_cafe bongchu & U ! seaweed mermaid_cafe F seaweed & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bongchu & U ! bongchu U bongchu U ! bongchu mermaid_cafe U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe seaweed
& & U ! bongchu tarboosh_middle_east_kitchen & U ! mermaid_cafe bongchu & U ! seaweed mermaid_cafe F seaweed & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bongchu & U ! bongchu U bongchu U ! bongchu mermaid_cafe & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe seaweed
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! the_gaylord_apartments wako & U ! the_boiling_crab the_gaylord_apartments & U ! coffee_bean_&_tea_leaf the_boiling_crab F coffee_bean_&_tea_leaf & U ! wako U wako U ! wako the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments the_boiling_crab U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab coffee_bean_&_tea_leaf
& & U ! the_gaylord_apartments wako & U ! the_boiling_crab the_gaylord_apartments & U ! coffee_bean_&_tea_leaf the_boiling_crab F coffee_bean_&_tea_leaf & U ! wako U wako U ! wako the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments the_boiling_crab & U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab coffee_bean_&_tea_leaf
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! robeks_juice mermaid_cafe & U ! the_gaylord_apartments robeks_juice & U ! bayou_smokehouse the_gaylord_apartments F bayou_smokehouse & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments bayou_smokehouse
& & U ! robeks_juice mermaid_cafe & U ! the_gaylord_apartments robeks_juice & U ! bayou_smokehouse the_gaylord_apartments F bayou_smokehouse & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments bayou_smokehouse
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! bbq_premium_chicken crystal_spa & U ! the_gaylord_apartments bbq_premium_chicken & U ! togos the_gaylord_apartments F togos & U ! crystal_spa U crystal_spa U ! crystal_spa bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken the_gaylord_apartments U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments togos
& & U ! bbq_premium_chicken crystal_spa & U ! the_gaylord_apartments bbq_premium_chicken & U ! togos the_gaylord_apartments F togos & U ! crystal_spa U crystal_spa U ! crystal_spa bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments togos
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! consulat_general_of_the_republic_of_indonesia zan_respub & U ! bayou_smokehouse consulat_general_of_the_republic_of_indonesia & U ! central_plaza_1 bayou_smokehouse F central_plaza_1 & U ! zan_respub U zan_respub U ! zan_respub consulat_general_of_the_republic_of_indonesia & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse central_plaza_1
& & U ! consulat_general_of_the_republic_of_indonesia zan_respub & U ! bayou_smokehouse consulat_general_of_the_republic_of_indonesia & U ! central_plaza_1 bayou_smokehouse F central_plaza_1 & U ! zan_respub U zan_respub U ! zan_respub consulat_general_of_the_republic_of_indonesia & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse central_plaza_1
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! ice_cream the_line & U ! bbq_premium_chicken ice_cream & U ! etude_lounge bbq_premium_chicken F etude_lounge & U ! the_line U the_line U ! the_line ice_cream & U ! ice_cream U ice_cream U ! ice_cream bbq_premium_chicken U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken etude_lounge
& & U ! ice_cream the_line & U ! bbq_premium_chicken ice_cream & U ! etude_lounge bbq_premium_chicken F etude_lounge & U ! the_line U the_line U ! the_line ice_cream & U ! ice_cream U ice_cream U ! ice_cream bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken etude_lounge
shorten LTLs:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error:
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
& & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d

Syntax error OR formula too long:
& & U ! the_line carls_jr & U ! korean_bbq the_line & U ! equitable_life_building korean_bbq F equitable_life_building & U ! carls_jr U carls_jr U ! carls_jr the_line & U ! the_line U the_line U ! the_line korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq equitable_life_building
& & U ! the_line carls_jr & U ! gwang_yang_bbq the_line & U ! equitable_life_building gwang_yang_bbq F equitable_life_building & U ! carls_jr U carls_jr U ! carls_jr the_line & U ! the_line U the_line U ! the_line gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq equitable_life_building
Syntax error OR formula too long:
& G F etude_lounge & G F tarboosh_middle_east_kitchen & G F equitable_life_building G F central_plaza_3
& & U ! etude_lounge equitable_life_building & U ! central_plaza_3 etude_lounge & U ! tarboosh_middle_east_kitchen central_plaza_3 F tarboosh_middle_east_kitchen & U ! equitable_life_building U equitable_life_building U ! equitable_life_building etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge central_plaza_3 & U ! central_plaza_3 U central_plaza_3 U ! central_plaza_3 tarboosh_middle_east_kitchen
shorten LTLs:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error OR formula too long:
& G F central_plaza_3 & G F sun_nong_dan & G F details G F bayou_smokehouse
& & U ! central_plaza_3 details & U ! bayou_smokehouse central_plaza_3 & U ! sun_nong_dan bayou_smokehouse F sun_nong_dan & U ! details U details U ! details central_plaza_3 & U ! central_plaza_3 U central_plaza_3 U ! central_plaza_3 bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse sun_nong_dan
shorten LTLs:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error:
& G F a & G F b & G F c G F d
& & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b

Syntax error OR formula too long:
& G F the_line & G F hair_news & G F ice_cream G F coffee_bean_&_tea_leaf
& G F the_line & G F hair_news G F ice_cream
Syntax error OR formula too long:
& G ! korean_bbq & G ! foothill_transit & G ! togos G ! korean_bbq
& G ! gwang_yang_bbq G ! foothill_transit G ! togos G ! h
Syntax error OR formula too long:
M & central_plaza_1 F & ! central_plaza_1 F & central_plaza_1 F & ! central_plaza_1 F central_plaza_1 | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G ! central_plaza_1
& & U ! central_plaza_1 U central_plaza_1 & U ! central_plaza_1 U central_plaza_1 & U ! central_plaza_1 U central_plaza_1 F central_plaza_1
shorten LTLs:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error OR formula too long:
M & mermaid_cafe F & ! mermaid_cafe F & mermaid_cafe F & ! mermaid_cafe F mermaid_cafe | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G ! mermaid_cafe
& & U ! mermaid_cafe U mermaid_cafe & U ! mermaid_cafe U mermaid_cafe & U ! mermaid_cafe U mermaid_cafe F mermaid_cafe
shorten LTLs:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error:
M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
& & U ! a U a & U ! a U a & U ! a U a F a

Syntax error OR formula too long:
G i sun_nong_dan X G ! bbq_premium_chicken
! F & sun_nong_dan U bbq_premium_chicken
shorten LTLs:
G i a X G ! b
! F & a U b

Syntax error:
G i a X G ! b
! F & a U b

Syntax error OR formula too long:
G i happy_noodle X G ! bayou_smokehouse
! F & happy_noodle U bayou_smokehouse
shorten LTLs:
G i a X G ! b
! F & a U b

Syntax error:
G i a X G ! b
! F & a U b

Syntax error OR formula too long:
G i central_plaza_1 X G ! etude_lounge
& U ! etude_lounge G etude_lounge
Syntax error OR formula too long:
G i consulat_general_of_the_republic_of_indonesia X G ! sun_nong_dan
& U ! sun_nong_dan G sun_nong_dan
Syntax error OR formula too long:
G i the_line X G ! foothill_transit
G ! foothill_transit G the_line
shorten LTLs:
G i a X G ! b
G ! b G a

Syntax error:
G i a X G ! b
G ! b G a

Syntax error OR formula too long:
G i zan_respub X G ! neris_filipino_dining
G ! neris_filipino_dining G zan_respub
shorten LTLs:
G i a X G ! b
G ! b G a

Syntax error:
G i a X G ! b
G ! b G a

Syntax error OR formula too long:
G i mermaid_cafe X G ! etude_lounge
G ! mermaid_cafe G ! etude_lounge
shorten LTLs:
G i a X G ! b
G ! a G ! b

Syntax error:
G i a X G ! b
G ! a G ! b

Syntax error OR formula too long:
G i details X G ! the_line
G ! details G ! the_line
shorten LTLs:
G i a X G ! b
G ! a G ! b

Syntax error:
G i a X G ! b
G ! a G ! b

Syntax error OR formula too long:
G i details X G ! coffee_bean_&_tea_leaf
G i details X coffee_bean_&_tea_leaf
shorten LTLs:
G i a X G ! b
G i a X b

0
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Ice Cream, Home Cafe, Gwang Yang BBQ, Big 5 Sporting Goods, and Central Plaza 1
True Ground LTL: & F ice_cream & F home_cafe & F gwang_yang_bbq & F big_5_sporting_goods F central_plaza_1
Out Ground LTL: & F home_cafe & F ice_cream & F gwang_yang_bbq & F big_5_sporting_goods F central_plaza_1
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F c & F h F a
True Lmks: ('Ice Cream', 'Home Cafe', 'Gwang Yang BBQ', 'Big 5 Sporting Goods', 'Central Plaza 1')
Out Lmks:['Central Plaza 1', 'Ice Cream', 'Gwang Yang BBQ', 'Home Cafe', 'Big 5 Sporting Goods']
Out Grounds: {'Central Plaza 1', 'Ice Cream', 'Gwang Yang BBQ', 'Home Cafe', 'Big 5 Sporting Goods'}
Placeholder Map: {'Central Plaza 1': 'a', 'Ice Cream': 'b', 'Gwang Yang BBQ': 'c', 'Home Cafe': 'd', 'Big 5 Sporting Goods': 'h'}
True

1
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Big 5 Sporting Goods, Coffee Bean & Tea Leaf, Koko Pizza, Togo's, and Home Cafe
True Ground LTL: & F big_5_sporting_goods & F coffee_bean_&_tea_leaf & F koko_pizza & F togos F home_cafe
Out Ground LTL: & F big_5_sporting_goods & F coffee_bean_&_tea_leaf & F koko_pizza & F togos F home_cafe
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F a & F b F d
True Lmks: ('Big 5 Sporting Goods', 'Coffee Bean & Tea Leaf', 'Koko Pizza', "Togo's", 'Home Cafe')
Out Lmks:['Koko Pizza', "Togo's", 'Coffee Bean & Tea Leaf', 'Home Cafe', 'Big 5 Sporting Goods']
Out Grounds: {'Koko Pizza', "Togo's", 'Coffee Bean & Tea Leaf', 'Home Cafe', 'Big 5 Sporting Goods'}
Placeholder Map: {'Koko Pizza': 'a', "Togo's": 'b', 'Coffee Bean & Tea Leaf': 'c', 'Home Cafe': 'd', 'Big 5 Sporting Goods': 'h'}
True

2
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: sometime visit Central Plaza 3, Central Plaza 1, Bayou Smokehouse, Metro, and The Gaylord Apartments
True Ground LTL: & F central_plaza_3 & F bayou_smokehouse & F central_plaza_1 & F the_gaylord_apartments F metro
Out Ground LTL: & F central_plaza_3 & F central_plaza_1 & F bayou_smokehouse & F metro F the_gaylord_apartments
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F a & F c & F d F b
True Lmks: ('Central Plaza 3', 'Bayou Smokehouse', 'Central Plaza 1', 'The Gaylord Apartments', 'Metro')
Out Lmks:['Central Plaza 1', 'The Gaylord Apartments', 'Bayou Smokehouse', 'Metro', 'Central Plaza 3']
Out Grounds: {'Central Plaza 1', 'The Gaylord Apartments', 'Bayou Smokehouse', 'Metro', 'Central Plaza 3'}
Placeholder Map: {'Central Plaza 1': 'a', 'The Gaylord Apartments': 'b', 'Bayou Smokehouse': 'c', 'Metro': 'd', 'Central Plaza 3': 'h'}
True

3
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: sometime visit Korean Bbq, The Line, Happy Noodle, Hair News, and Gwang Yang BBQ
True Ground LTL: & F korean_bbq & F happy_noodle & F the_line & F gwang_yang_bbq F hair_news
Out Ground LTL: & F gwang_yang_bbq & F the_line & F happy_noodle & F hair_news F h
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F a & F b F h
True Lmks: ('Korean Bbq', 'Happy Noodle', 'The Line', 'Gwang Yang BBQ', 'Hair News')
Out Lmks:['Hair News', 'Happy Noodle', 'Gwang Yang BBQ', 'The Line', 'Korean Bbq']
Out Grounds: {'Happy Noodle', 'Hair News', 'Gwang Yang BBQ', 'The Line'}
Placeholder Map: {'Happy Noodle': 'a', 'Hair News': 'b', 'Gwang Yang BBQ': 'c', 'The Line': 'd'}
False

4
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: eventually go visit Togo's, Seaweed, Ice Cream, Wilshire-Kenmore Building, and Equitable Life Building
True Ground LTL: & F togos & F seaweed & F equitable_life_building & F wilshire_kenmore_building F ice_cream
Out Ground LTL: & F togos & F seaweed & F ice_cream & F wilshire_kenmore_building F equitable_life_building
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F d & F h F b
True Lmks: ("Togo's", 'Seaweed', 'Equitable Life Building', 'Wilshire-Kenmore Building', 'Ice Cream')
Out Lmks:['Seaweed', 'Equitable Life Building', "Togo's", 'Ice Cream', 'Wilshire-Kenmore Building']
Out Grounds: {'Seaweed', 'Equitable Life Building', "Togo's", 'Ice Cream', 'Wilshire-Kenmore Building'}
Placeholder Map: {'Seaweed': 'a', 'Equitable Life Building': 'b', "Togo's": 'c', 'Ice Cream': 'd', 'Wilshire-Kenmore Building': 'h'}
True

5
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: eventually go visit Carl's Jr., Happy Noodle, The Gaylord Apartments, Crystal Spa, and POT
True Ground LTL: & F carls_jr & F happy_noodle & F pot & F crystal_spa F the_gaylord_apartments
Out Ground LTL: & F carls_jr & F happy_noodle & F the_gaylord_apartments & F crystal_spa F pot
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F c & F d F h
True Lmks: ("Carl's Jr.", 'Happy Noodle', 'POT', 'Crystal Spa', 'The Gaylord Apartments')
Out Lmks:["Carl's Jr.", 'Happy Noodle', 'The Gaylord Apartments', 'Crystal Spa', 'POT']
Out Grounds: {'Happy Noodle', "Carl's Jr.", 'The Gaylord Apartments', 'Crystal Spa', 'POT'}
Placeholder Map: {'Happy Noodle': 'a', "Carl's Jr.": 'b', 'The Gaylord Apartments': 'c', 'Crystal Spa': 'd', 'POT': 'h'}
True

6
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Wako, Togo's, Foothill Transit, Wilshire-Kenmore Building, and California Design College
True Ground LTL: & F wako & F togos & F foothill_transit & F wilshire_kenmore_building F california_design_college
Out Ground LTL: & F wako & F togos & F foothill_transit & F wilshire_kenmore_building F california_design_college
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F h & F d F c
True Lmks: ('Wako', "Togo's", 'Foothill Transit', 'Wilshire-Kenmore Building', 'California Design College')
Out Lmks:["Togo's", 'Wako', 'California Design College', 'Wilshire-Kenmore Building', 'Foothill Transit']
Out Grounds: {"Togo's", 'Wako', 'California Design College', 'Wilshire-Kenmore Building', 'Foothill Transit'}
Placeholder Map: {"Togo's": 'a', 'Wako': 'b', 'California Design College': 'c', 'Wilshire-Kenmore Building': 'd', 'Foothill Transit': 'h'}
True

7
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Wilshire-Kenmore Building, Wako, Happy Noodle, Wilshire/Normandie, and Metro
True Ground LTL: & F wilshire_kenmore_building & F wako & F happy_noodle & F wilshire_normandie F metro
Out Ground LTL: & F wilshire_kenmore_building & F wako & F happy_noodle & F wilshire_normandie F metro
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F a & F b F h
True Lmks: ('Wilshire-Kenmore Building', 'Wako', 'Happy Noodle', 'Wilshire/Normandie', 'Metro')
Out Lmks:['Happy Noodle', 'Wilshire/Normandie', 'Wako', 'Wilshire-Kenmore Building', 'Metro']
Out Grounds: {'Happy Noodle', 'Wilshire/Normandie', 'Wako', 'Wilshire-Kenmore Building', 'Metro'}
Placeholder Map: {'Happy Noodle': 'a', 'Wilshire/Normandie': 'b', 'Wako': 'c', 'Wilshire-Kenmore Building': 'd', 'Metro': 'h'}
True

8
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Crystal Spa, go to Foothill Transit, go to Ice Cream, go to Carl's Jr., go to Mali Taste of Thailand
True Ground LTL: & F crystal_spa & F foothill_transit & F ice_cream & F carls_jr F mali_taste_of_thailand
Out Ground LTL: & F crystal_spa & F foothill_transit & F ice_cream & F carls_jr F mali_taste_of_thailand
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F h & F c & F b F a
True Lmks: ('Crystal Spa', 'Foothill Transit', 'Ice Cream', "Carl's Jr.", 'Mali Taste of Thailand')
Out Lmks:['Mali Taste of Thailand', "Carl's Jr.", 'Ice Cream', 'Crystal Spa', 'Foothill Transit']
Out Grounds: {'Mali Taste of Thailand', "Carl's Jr.", 'Ice Cream', 'Crystal Spa', 'Foothill Transit'}
Placeholder Map: {'Mali Taste of Thailand': 'a', "Carl's Jr.": 'b', 'Ice Cream': 'c', 'Crystal Spa': 'd', 'Foothill Transit': 'h'}
True

9
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Metro, go to Neris Filipino Dining, go to The Boiling Crab, go to Etude Lounge, go to Ice Cream
True Ground LTL: & F metro & F neris_filipino_dining & F the_boiling_crab & F etude_lounge F ice_cream
Out Ground LTL: & F metro & F neris_filipino_dining & F the_boiling_crab & F etude_lounge F ice_cream
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F a & F b F d
True Lmks: ('Metro', 'Neris Filipino Dining', 'The Boiling Crab', 'Etude Lounge', 'Ice Cream')
Out Lmks:['The Boiling Crab', 'Etude Lounge', 'Neris Filipino Dining', 'Ice Cream', 'Metro']
Out Grounds: {'The Boiling Crab', 'Etude Lounge', 'Neris Filipino Dining', 'Ice Cream', 'Metro'}
Placeholder Map: {'The Boiling Crab': 'a', 'Etude Lounge': 'b', 'Neris Filipino Dining': 'c', 'Ice Cream': 'd', 'Metro': 'h'}
True

10
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Gwang Yang BBQ, The Line, Big 5 Sporting Goods, Metro, Bongchu, in any order required
True Ground LTL: & F gwang_yang_bbq & F the_line & F big_5_sporting_goods & F metro F bongchu
Out Ground LTL: & F gwang_yang_bbq & F the_line & F big_5_sporting_goods & F metro F bongchu
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F c & F a & F d F h
True Lmks: ('Gwang Yang BBQ', 'The Line', 'Big 5 Sporting Goods', 'Metro', 'Bongchu')
Out Lmks:['Big 5 Sporting Goods', 'Gwang Yang BBQ', 'The Line', 'Metro', 'Bongchu']
Out Grounds: {'Big 5 Sporting Goods', 'Gwang Yang BBQ', 'The Line', 'Metro', 'Bongchu'}
Placeholder Map: {'Big 5 Sporting Goods': 'a', 'Gwang Yang BBQ': 'b', 'The Line': 'c', 'Metro': 'd', 'Bongchu': 'h'}
True

11
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Wilshire/Normandie, The Boiling Crab, Neris Filipino Dining, Koko Pizza, Big 5 Sporting Goods, in any order required
True Ground LTL: & F wilshire_normandie & F the_boiling_crab & F neris_filipino_dining & F koko_pizza F big_5_sporting_goods
Out Ground LTL: & F wilshire_normandie & F the_boiling_crab & F neris_filipino_dining & F koko_pizza F big_5_sporting_goods
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F c & F a F h
True Lmks: ('Wilshire/Normandie', 'The Boiling Crab', 'Neris Filipino Dining', 'Koko Pizza', 'Big 5 Sporting Goods')
Out Lmks:['The Boiling Crab', 'Neris Filipino Dining', 'Wilshire/Normandie', 'Big 5 Sporting Goods', 'Koko Pizza']
Out Grounds: {'Koko Pizza', 'The Boiling Crab', 'Neris Filipino Dining', 'Wilshire/Normandie', 'Big 5 Sporting Goods'}
Placeholder Map: {'Koko Pizza': 'a', 'The Boiling Crab': 'b', 'Neris Filipino Dining': 'c', 'Wilshire/Normandie': 'd', 'Big 5 Sporting Goods': 'h'}
True

12
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit all locations Hair News, POT, Big 5 Sporting Goods, Central Plaza 1, Robeks Juice
True Ground LTL: & F hair_news & F pot & F big_5_sporting_goods & F central_plaza_1 F robeks_juice
Out Ground LTL: & F hair_news & F pot & F big_5_sporting_goods & F central_plaza_1 F robeks_juice
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F d & F c & F a F h
True Lmks: ('Hair News', 'POT', 'Big 5 Sporting Goods', 'Central Plaza 1', 'Robeks Juice')
Out Lmks:['Central Plaza 1', 'Hair News', 'Robeks Juice', 'POT', 'Big 5 Sporting Goods']
Out Grounds: {'Central Plaza 1', 'Hair News', 'Big 5 Sporting Goods', 'POT', 'Robeks Juice'}
Placeholder Map: {'Central Plaza 1': 'a', 'Hair News': 'b', 'Big 5 Sporting Goods': 'c', 'POT': 'd', 'Robeks Juice': 'h'}
True

13
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit all locations Crystal Spa, Wako, Home Cafe, The Line, Neris Filipino Dining
True Ground LTL: & F crystal_spa & F wako & F home_cafe & F the_line F neris_filipino_dining
Out Ground LTL: & F crystal_spa & F wako & F home_cafe & F the_line F neris_filipino_dining
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F d & F a F b
True Lmks: ('Crystal Spa', 'Wako', 'Home Cafe', 'The Line', 'Neris Filipino Dining')
Out Lmks:['Home Cafe', 'Neris Filipino Dining', 'Wako', 'The Line', 'Crystal Spa']
Out Grounds: {'The Line', 'Neris Filipino Dining', 'Wako', 'Home Cafe', 'Crystal Spa'}
Placeholder Map: {'The Line': 'a', 'Neris Filipino Dining': 'b', 'Wako': 'c', 'Home Cafe': 'd', 'Crystal Spa': 'h'}
True

14
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach the following five locations Hair News, The Line, Wako, POT, Togo's
True Ground LTL: & F hair_news & F the_line & F wako & F pot F togos
Out Ground LTL: & F hair_news & F the_line & F wako & F pot F togos
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F c & F h F b
True Lmks: ('Hair News', 'The Line', 'Wako', 'POT', "Togo's")
Out Lmks:['Hair News', "Togo's", 'Wako', 'The Line', 'POT']
Out Grounds: {'Hair News', "Togo's", 'Wako', 'The Line', 'POT'}
Placeholder Map: {'Hair News': 'a', "Togo's": 'b', 'Wako': 'c', 'The Line': 'd', 'POT': 'h'}
True

15
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach the following five locations Hair News, Consulat General of the Republic of Indonesia, Central Plaza 1, Crystal Spa, POT
True Ground LTL: & F hair_news & F consulat_general_of_the_republic_of_indonesia & F central_plaza_1 & F crystal_spa F pot
Out Ground LTL: & F hair_news & F consulat_general_of_the_republic_of_indonesia & F central_plaza_1 & F crystal_spa F pot
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F b & F d F h
True Lmks: ('Hair News', 'Consulat General of the Republic of Indonesia', 'Central Plaza 1', 'Crystal Spa', 'POT')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Central Plaza 1', 'Hair News', 'Crystal Spa', 'POT']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Central Plaza 1', 'Hair News', 'Crystal Spa', 'POT'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Central Plaza 1': 'b', 'Hair News': 'c', 'Crystal Spa': 'd', 'POT': 'h'}
True

16
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: find the following The Boiling Crab, The Gaylord Apartments, Ice Cream, Coffee Bean & Tea Leaf, The Line
True Ground LTL: & F the_boiling_crab & F the_gaylord_apartments & F ice_cream & F coffee_bean_&_tea_leaf F the_line
Out Ground LTL: & F the_boiling_crab & F the_gaylord_apartments & F ice_cream & F coffee_bean_&_tea_leaf F the_line
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F c & F d & F b F h
True Lmks: ('The Boiling Crab', 'The Gaylord Apartments', 'Ice Cream', 'Coffee Bean & Tea Leaf', 'The Line')
Out Lmks:['The Boiling Crab', 'Coffee Bean & Tea Leaf', 'The Gaylord Apartments', 'Ice Cream', 'The Line']
Out Grounds: {'The Boiling Crab', 'Coffee Bean & Tea Leaf', 'The Gaylord Apartments', 'Ice Cream', 'The Line'}
Placeholder Map: {'The Boiling Crab': 'a', 'Coffee Bean & Tea Leaf': 'b', 'The Gaylord Apartments': 'c', 'Ice Cream': 'd', 'The Line': 'h'}
True

17
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: find the following California Design College, The Line, Foothill Transit, Wako, Korean Bbq
True Ground LTL: & F california_design_college & F the_line & F foothill_transit & F wako F korean_bbq
Out Ground LTL: & F california_design_college & F the_line & F foothill_transit & F wako F gwang_yang_bbq
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F c & F d & F a F b
True Lmks: ('California Design College', 'The Line', 'Foothill Transit', 'Wako', 'Korean Bbq')
Out Lmks:['Wako', 'The Line', 'Foothill Transit', 'Korean Bbq', 'California Design College']
Out Grounds: {'Wako', 'Gwang Yang BBQ', 'The Line', 'Foothill Transit', 'California Design College'}
Placeholder Map: {'Wako': 'a', 'Gwang Yang BBQ': 'b', 'The Line': 'c', 'Foothill Transit': 'd', 'California Design College': 'h'}
False

18
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Zan ResPub, The Line, Home Cafe, Togo's, and California Design College, in arbitrary order
True Ground LTL: & F zan_respub & F the_line & F home_cafe & F togos F california_design_college
Out Ground LTL: & F zan_respub & F the_line & F home_cafe & F togos F california_design_college
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F a & F d & F b F h
True Lmks: ('Zan ResPub', 'The Line', 'Home Cafe', "Togo's", 'California Design College')
Out Lmks:['The Line', "Togo's", 'Zan ResPub', 'Home Cafe', 'California Design College']
Out Grounds: {'The Line', "Togo's", 'Zan ResPub', 'Home Cafe', 'California Design College'}
Placeholder Map: {'The Line': 'a', "Togo's": 'b', 'Zan ResPub': 'c', 'Home Cafe': 'd', 'California Design College': 'h'}
True

19
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to California Design College, Etude Lounge, Wako, Big 5 Sporting Goods, and Wilshire/Normandie, in arbitrary order
True Ground LTL: & F california_design_college & F etude_lounge & F wako & F big_5_sporting_goods F wilshire_normandie
Out Ground LTL: & F california_design_college & F etude_lounge & F wako & F big_5_sporting_goods F wilshire_normandie
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F a & F c & F h F b
True Lmks: ('California Design College', 'Etude Lounge', 'Wako', 'Big 5 Sporting Goods', 'Wilshire/Normandie')
Out Lmks:['Etude Lounge', 'Wilshire/Normandie', 'Wako', 'California Design College', 'Big 5 Sporting Goods']
Out Grounds: {'Etude Lounge', 'Wilshire/Normandie', 'Wako', 'California Design College', 'Big 5 Sporting Goods'}
Placeholder Map: {'Etude Lounge': 'a', 'Wilshire/Normandie': 'b', 'Wako': 'c', 'California Design College': 'd', 'Big 5 Sporting Goods': 'h'}
True

20
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure Neris Filipino Dining, Robeks Juice, Mali Taste of Thailand, The Gaylord Apartments, and Bayou Smokehouse, are all visited
True Ground LTL: & F neris_filipino_dining & F robeks_juice & F mali_taste_of_thailand & F the_gaylord_apartments F bayou_smokehouse
Out Ground LTL: & F neris_filipino_dining & F robeks_juice & F mali_taste_of_thailand & F the_gaylord_apartments F bayou_smokehouse
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F h & F a & F c F d
True Lmks: ('Neris Filipino Dining', 'Robeks Juice', 'Mali Taste of Thailand', 'The Gaylord Apartments', 'Bayou Smokehouse')
Out Lmks:['Mali Taste of Thailand', 'Neris Filipino Dining', 'The Gaylord Apartments', 'Bayou Smokehouse', 'Robeks Juice']
Out Grounds: {'Mali Taste of Thailand', 'Neris Filipino Dining', 'The Gaylord Apartments', 'Bayou Smokehouse', 'Robeks Juice'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Neris Filipino Dining': 'b', 'The Gaylord Apartments': 'c', 'Bayou Smokehouse': 'd', 'Robeks Juice': 'h'}
True

21
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure Crystal Spa, Korean BBQ, Zan ResPub, Carl's Jr., and Sun Nong Dan, are all visited
True Ground LTL: & F crystal_spa & F korean_bbq & F zan_respub & F carls_jr F sun_nong_dan
Out Ground LTL: & F crystal_spa & F gwang_yang_bbq & F zan_respub & F carls_jr F sun_nong_dan
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F b & F a F h
True Lmks: ('Crystal Spa', 'Korean BBQ', 'Zan ResPub', "Carl's Jr.", 'Sun Nong Dan')
Out Lmks:["Carl's Jr.", 'Korean BBQ', 'Zan ResPub', 'Sun Nong Dan', 'Crystal Spa']
Out Grounds: {"Carl's Jr.", 'Zan ResPub', 'Crystal Spa', 'Gwang Yang BBQ', 'Sun Nong Dan'}
Placeholder Map: {"Carl's Jr.": 'a', 'Zan ResPub': 'b', 'Crystal Spa': 'c', 'Gwang Yang BBQ': 'd', 'Sun Nong Dan': 'h'}
False

22
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: do not stop until Consulat General of the Republic of Indonesia, Sun Nong Dan, Happy Noodle, Bayou Smokehouse, and Seaweed, are all visited
True Ground LTL: & F consulat_general_of_the_republic_of_indonesia & F sun_nong_dan & F happy_noodle & F bayou_smokehouse F seaweed
Out Ground LTL: & F consulat_general_of_the_republic_of_indonesia & F sun_nong_dan & F happy_noodle & F bayou_smokehouse F seaweed
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F h & F c & F d F a
True Lmks: ('Consulat General of the Republic of Indonesia', 'Sun Nong Dan', 'Happy Noodle', 'Bayou Smokehouse', 'Seaweed')
Out Lmks:['Seaweed', 'Consulat General of the Republic of Indonesia', 'Happy Noodle', 'Bayou Smokehouse', 'Sun Nong Dan']
Out Grounds: {'Seaweed', 'Consulat General of the Republic of Indonesia', 'Happy Noodle', 'Bayou Smokehouse', 'Sun Nong Dan'}
Placeholder Map: {'Seaweed': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Happy Noodle': 'c', 'Bayou Smokehouse': 'd', 'Sun Nong Dan': 'h'}
True

23
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: do not stop until Etude Lounge, Sun Nong Dan, Crystal Spa, Wilshire/Normandie, and Togo's, are all visited
True Ground LTL: & F etude_lounge & F sun_nong_dan & F crystal_spa & F wilshire_normandie F togos
Out Ground LTL: & F etude_lounge & F sun_nong_dan & F crystal_spa & F wilshire_normandie F togos
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F h & F d & F c F a
True Lmks: ('Etude Lounge', 'Sun Nong Dan', 'Crystal Spa', 'Wilshire/Normandie', "Togo's")
Out Lmks:["Togo's", 'Etude Lounge', 'Wilshire/Normandie', 'Crystal Spa', 'Sun Nong Dan']
Out Grounds: {"Togo's", 'Etude Lounge', 'Wilshire/Normandie', 'Crystal Spa', 'Sun Nong Dan'}
Placeholder Map: {"Togo's": 'a', 'Etude Lounge': 'b', 'Wilshire/Normandie': 'c', 'Crystal Spa': 'd', 'Sun Nong Dan': 'h'}
True

24
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make your way to Wako, Details, Equitable Life Building, Coffee Bean & Tea Leaf, and Central Plaza 3
True Ground LTL: & F wako & F details & F equitable_life_building & F coffee_bean_&_tea_leaf F central_plaza_3
Out Ground LTL: & F wako & F details & F equitable_life_building & F coffee_bean_&_tea_leaf F central_plaza_3
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F a & F c F h
True Lmks: ('Wako', 'Details', 'Equitable Life Building', 'Coffee Bean & Tea Leaf', 'Central Plaza 3')
Out Lmks:['Equitable Life Building', 'Details', 'Coffee Bean & Tea Leaf', 'Wako', 'Central Plaza 3']
Out Grounds: {'Equitable Life Building', 'Details', 'Coffee Bean & Tea Leaf', 'Wako', 'Central Plaza 3'}
Placeholder Map: {'Equitable Life Building': 'a', 'Details': 'b', 'Coffee Bean & Tea Leaf': 'c', 'Wako': 'd', 'Central Plaza 3': 'h'}
True

25
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make your way to Central Plaza 1, BBQ Premium Chicken, POT, Details, and Bongchu
True Ground LTL: & F central_plaza_1 & F bbq_premium_chicken & F pot & F details F bongchu
Out Ground LTL: & F central_plaza_1 & F bbq_premium_chicken & F pot & F details F bongchu
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F b & F d & F c F h
True Lmks: ('Central Plaza 1', 'BBQ Premium Chicken', 'POT', 'Details', 'Bongchu')
Out Lmks:['Central Plaza 1', 'BBQ Premium Chicken', 'Details', 'POT', 'Bongchu']
Out Grounds: {'Central Plaza 1', 'BBQ Premium Chicken', 'Details', 'POT', 'Bongchu'}
Placeholder Map: {'Central Plaza 1': 'a', 'BBQ Premium Chicken': 'b', 'Details': 'c', 'POT': 'd', 'Bongchu': 'h'}
True

26
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Etude Lounge, Consulat General of the Republic of Indonesia, Sun Nong Dan, Foothill Transit, and Korean BBQ, in any order
True Ground LTL: & F etude_lounge & F consulat_general_of_the_republic_of_indonesia & F sun_nong_dan & F foothill_transit F korean_bbq
Out Ground LTL: & F etude_lounge & F consulat_general_of_the_republic_of_indonesia & F sun_nong_dan & F foothill_transit F gwang_yang_bbq
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F d & F h F c
True Lmks: ('Etude Lounge', 'Consulat General of the Republic of Indonesia', 'Sun Nong Dan', 'Foothill Transit', 'Korean BBQ')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Etude Lounge', 'Korean BBQ', 'Sun Nong Dan', 'Foothill Transit']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Etude Lounge', 'Gwang Yang BBQ', 'Sun Nong Dan', 'Foothill Transit'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Etude Lounge': 'b', 'Gwang Yang BBQ': 'c', 'Sun Nong Dan': 'd', 'Foothill Transit': 'h'}
False

27
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit The Boiling Crab, Togo's, Home Cafe, Zan ResPub, and Foothill Transit, in any order
True Ground LTL: & F the_boiling_crab & F togos & F home_cafe & F zan_respub F foothill_transit
Out Ground LTL: & F the_boiling_crab & F togos & F home_cafe & F zan_respub F foothill_transit
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F b & F d & F c F h
True Lmks: ('The Boiling Crab', "Togo's", 'Home Cafe', 'Zan ResPub', 'Foothill Transit')
Out Lmks:['The Boiling Crab', "Togo's", 'Zan ResPub', 'Home Cafe', 'Foothill Transit']
Out Grounds: {'The Boiling Crab', "Togo's", 'Zan ResPub', 'Home Cafe', 'Foothill Transit'}
Placeholder Map: {'The Boiling Crab': 'a', "Togo's": 'b', 'Zan ResPub': 'c', 'Home Cafe': 'd', 'Foothill Transit': 'h'}
True

28
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Details, Korean Bbq, Equitable Life Building, Mali Taste of Thailand, and Bongchu, in no particular order
True Ground LTL: & F korean_bbq & F bongchu & F details & F equitable_life_building F mali_taste_of_thailand
Out Ground LTL: & F details & F gwang_yang_bbq & F equitable_life_building & F mali_taste_of_thailand F bongchu
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F b & F a F h
True Lmks: ('Korean Bbq', 'Bongchu', 'Details', 'Equitable Life Building', 'Mali Taste of Thailand')
Out Lmks:['Mali Taste of Thailand', 'Equitable Life Building', 'Details', 'Bongchu', 'Korean Bbq']
Out Grounds: {'Mali Taste of Thailand', 'Equitable Life Building', 'Details', 'Gwang Yang BBQ', 'Bongchu'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Equitable Life Building': 'b', 'Details': 'c', 'Gwang Yang BBQ': 'd', 'Bongchu': 'h'}
False

29
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit The Boiling Crab, Tarboosh middle East kitchen, California Design College, Bayou Smokehouse, and POT, in no particular order
True Ground LTL: & F tarboosh_middle_east_kitchen & F pot & F the_boiling_crab & F california_design_college F bayou_smokehouse
Out Ground LTL: & F the_boiling_crab & F tarboosh_middle_east_kitchen & F california_design_college & F bayou_smokehouse F pot
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F d & F c F h
True Lmks: ('Tarboosh middle East kitchen', 'POT', 'The Boiling Crab', 'California Design College', 'Bayou Smokehouse')
Out Lmks:['Tarboosh middle East kitchen', 'The Boiling Crab', 'Bayou Smokehouse', 'California Design College', 'POT']
Out Grounds: {'Tarboosh middle East kitchen', 'The Boiling Crab', 'Bayou Smokehouse', 'California Design College', 'POT'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'The Boiling Crab': 'b', 'Bayou Smokehouse': 'c', 'California Design College': 'd', 'POT': 'h'}
True

30
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Details, Home Cafe, Crystal Spa, Seaweed, and The Gaylord Apartments, at least once
True Ground LTL: & F details & F the_gaylord_apartments & F crystal_spa & F home_cafe F seaweed
Out Ground LTL: & F home_cafe & F details & F crystal_spa & F seaweed F the_gaylord_apartments
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F h & F a F c
True Lmks: ('Details', 'The Gaylord Apartments', 'Crystal Spa', 'Home Cafe', 'Seaweed')
Out Lmks:['Seaweed', 'Details', 'The Gaylord Apartments', 'Home Cafe', 'Crystal Spa']
Out Grounds: {'Seaweed', 'Details', 'The Gaylord Apartments', 'Home Cafe', 'Crystal Spa'}
Placeholder Map: {'Seaweed': 'a', 'Details': 'b', 'The Gaylord Apartments': 'c', 'Home Cafe': 'd', 'Crystal Spa': 'h'}
True

31
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Wilshire/Normandie, Metro, Ice Cream, Big 5 Sporting Goods, and Mali Taste of Thailand, at least once
True Ground LTL: & F wilshire_normandie & F mali_taste_of_thailand & F ice_cream & F metro F big_5_sporting_goods
Out Ground LTL: & F metro & F wilshire_normandie & F ice_cream & F big_5_sporting_goods F mali_taste_of_thailand
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F c & F h F a
True Lmks: ('Wilshire/Normandie', 'Mali Taste of Thailand', 'Ice Cream', 'Metro', 'Big 5 Sporting Goods')
Out Lmks:['Mali Taste of Thailand', 'Wilshire/Normandie', 'Ice Cream', 'Metro', 'Big 5 Sporting Goods']
Out Grounds: {'Mali Taste of Thailand', 'Wilshire/Normandie', 'Ice Cream', 'Metro', 'Big 5 Sporting Goods'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Wilshire/Normandie': 'b', 'Ice Cream': 'c', 'Metro': 'd', 'Big 5 Sporting Goods': 'h'}
True

32
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Happy Noodle, Togo's, The Line, Mermaid Cafe, and Coffee Bean & Tea Leaf
True Ground LTL: & F togos & F happy_noodle & F mermaid_cafe & F coffee_bean_&_tea_leaf F the_line
Out Ground LTL: & F happy_noodle & F togos & F the_line & F mermaid_cafe F coffee_bean_&_tea_leaf
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F a & F h & F d F c
True Lmks: ("Togo's", 'Happy Noodle', 'Mermaid Cafe', 'Coffee Bean & Tea Leaf', 'The Line')
Out Lmks:["Togo's", 'Happy Noodle', 'Coffee Bean & Tea Leaf', 'Mermaid Cafe', 'The Line']
Out Grounds: {"Togo's", 'Happy Noodle', 'Coffee Bean & Tea Leaf', 'Mermaid Cafe', 'The Line'}
Placeholder Map: {"Togo's": 'a', 'Happy Noodle': 'b', 'Coffee Bean & Tea Leaf': 'c', 'Mermaid Cafe': 'd', 'The Line': 'h'}
True

33
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Consulat General of the Republic of Indonesia, Korean BBQ, Mali Taste of Thailand, Wako, and Metro
True Ground LTL: & F korean_bbq & F consulat_general_of_the_republic_of_indonesia & F wako & F metro F mali_taste_of_thailand
Out Ground LTL: & F consulat_general_of_the_republic_of_indonesia & F gwang_yang_bbq & F mali_taste_of_thailand & F wako F metro
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F a & F d & F b & F c F h
True Lmks: ('Korean BBQ', 'Consulat General of the Republic of Indonesia', 'Wako', 'Metro', 'Mali Taste of Thailand')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Mali Taste of Thailand', 'Korean BBQ', 'Wako', 'Metro']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Mali Taste of Thailand', 'Wako', 'Gwang Yang BBQ', 'Metro'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Mali Taste of Thailand': 'b', 'Wako': 'c', 'Gwang Yang BBQ': 'd', 'Metro': 'h'}
False

34
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Central Plaza 1, Seaweed, Equitable Life Building, Wako, and Robeks Juice, in any order
True Ground LTL: & F robeks_juice & F equitable_life_building & F seaweed & F wako F central_plaza_1
Out Ground LTL: & F equitable_life_building & F central_plaza_1 & F wako & F robeks_juice F seaweed
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F b & F d & F h F a
True Lmks: ('Robeks Juice', 'Equitable Life Building', 'Seaweed', 'Wako', 'Central Plaza 1')
Out Lmks:['Seaweed', 'Central Plaza 1', 'Equitable Life Building', 'Wako', 'Robeks Juice']
Out Grounds: {'Seaweed', 'Central Plaza 1', 'Equitable Life Building', 'Wako', 'Robeks Juice'}
Placeholder Map: {'Seaweed': 'a', 'Central Plaza 1': 'b', 'Equitable Life Building': 'c', 'Wako': 'd', 'Robeks Juice': 'h'}
True

35
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: go to Home Cafe, Big 5 Sporting Goods, Coffee Bean & Tea Leaf, Equitable Life Building, and Mali Taste of Thailand, in any order
True Ground LTL: & F mali_taste_of_thailand & F coffee_bean_&_tea_leaf & F big_5_sporting_goods & F equitable_life_building F home_cafe
Out Ground LTL: & F coffee_bean_&_tea_leaf & F home_cafe & F mali_taste_of_thailand & F big_5_sporting_goods F equitable_life_building
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F c & F d & F a & F h F b
True Lmks: ('Mali Taste of Thailand', 'Coffee Bean & Tea Leaf', 'Big 5 Sporting Goods', 'Equitable Life Building', 'Home Cafe')
Out Lmks:['Mali Taste of Thailand', 'Equitable Life Building', 'Coffee Bean & Tea Leaf', 'Home Cafe', 'Big 5 Sporting Goods']
Out Grounds: {'Mali Taste of Thailand', 'Equitable Life Building', 'Coffee Bean & Tea Leaf', 'Home Cafe', 'Big 5 Sporting Goods'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Equitable Life Building': 'b', 'Coffee Bean & Tea Leaf': 'c', 'Home Cafe': 'd', 'Big 5 Sporting Goods': 'h'}
True

36
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit Foothill Transit, Home Cafe, Togo's, Gwang Yang BBQ, and Neris Filipino Dining, in no specific order
True Ground LTL: & F foothill_transit & F home_cafe & F togos & F gwang_yang_bbq F neris_filipino_dining
Out Ground LTL: & F home_cafe & F foothill_transit & F togos & F gwang_yang_bbq F neris_filipino_dining
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F h & F a & F c F b
True Lmks: ('Foothill Transit', 'Home Cafe', "Togo's", 'Gwang Yang BBQ', 'Neris Filipino Dining')
Out Lmks:["Togo's", 'Neris Filipino Dining', 'Gwang Yang BBQ', 'Home Cafe', 'Foothill Transit']
Out Grounds: {"Togo's", 'Neris Filipino Dining', 'Gwang Yang BBQ', 'Home Cafe', 'Foothill Transit'}
Placeholder Map: {"Togo's": 'a', 'Neris Filipino Dining': 'b', 'Gwang Yang BBQ': 'c', 'Home Cafe': 'd', 'Foothill Transit': 'h'}
True

37
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: visit The Gaylord Apartments, Wilshire/Normandie, Coffee Bean & Tea Leaf, Neris Filipino Dining, and Hair News, in no specific order
True Ground LTL: & F the_gaylord_apartments & F wilshire_normandie & F coffee_bean_&_tea_leaf & F neris_filipino_dining F hair_news
Out Ground LTL: & F wilshire_normandie & F the_gaylord_apartments & F coffee_bean_&_tea_leaf & F neris_filipino_dining F hair_news
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F h & F c & F b F a
True Lmks: ('The Gaylord Apartments', 'Wilshire/Normandie', 'Coffee Bean & Tea Leaf', 'Neris Filipino Dining', 'Hair News')
Out Lmks:['Hair News', 'Neris Filipino Dining', 'Coffee Bean & Tea Leaf', 'Wilshire/Normandie', 'The Gaylord Apartments']
Out Grounds: {'Hair News', 'Neris Filipino Dining', 'Coffee Bean & Tea Leaf', 'Wilshire/Normandie', 'The Gaylord Apartments'}
Placeholder Map: {'Hair News': 'a', 'Neris Filipino Dining': 'b', 'Coffee Bean & Tea Leaf': 'c', 'Wilshire/Normandie': 'd', 'The Gaylord Apartments': 'h'}
True

38
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach Details, Etude Lounge, Togo's, The Boiling Crab, and Korean Bbq, in any order
True Ground LTL: & F details & F etude_lounge & F togos & F the_boiling_crab F korean_bbq
Out Ground LTL: & F details & F etude_lounge & F togos & F the_boiling_crab F gwang_yang_bbq
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F c & F b & F a F h
True Lmks: ('Details', 'Etude Lounge', "Togo's", 'The Boiling Crab', 'Korean Bbq')
Out Lmks:['The Boiling Crab', "Togo's", 'Etude Lounge', 'Details', 'Korean Bbq']
Out Grounds: {'The Boiling Crab', "Togo's", 'Etude Lounge', 'Details', 'Gwang Yang BBQ'}
Placeholder Map: {'The Boiling Crab': 'a', "Togo's": 'b', 'Etude Lounge': 'c', 'Details': 'd', 'Gwang Yang BBQ': 'h'}
False

39
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: reach POT, Seaweed, Etude Lounge, Neris Filipino Dining, and Big 5 Sporting Goods, in any order
True Ground LTL: & F pot & F seaweed & F etude_lounge & F neris_filipino_dining F big_5_sporting_goods
Out Ground LTL: & F pot & F seaweed & F etude_lounge & F neris_filipino_dining F big_5_sporting_goods
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F a & F b & F c F h
True Lmks: ('POT', 'Seaweed', 'Etude Lounge', 'Neris Filipino Dining', 'Big 5 Sporting Goods')
Out Lmks:['Seaweed', 'Neris Filipino Dining', 'Etude Lounge', 'POT', 'Big 5 Sporting Goods']
Out Grounds: {'Seaweed', 'Etude Lounge', 'Neris Filipino Dining', 'POT', 'Big 5 Sporting Goods'}
Placeholder Map: {'Seaweed': 'a', 'Etude Lounge': 'b', 'Neris Filipino Dining': 'c', 'POT': 'd', 'Big 5 Sporting Goods': 'h'}
True

40
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you go to Robeks Juice, Bayou Smokehouse, Happy Noodle, Wako, Etude Lounge, in any order
True Ground LTL: & F robeks_juice & F bayou_smokehouse & F happy_noodle & F wako F etude_lounge
Out Ground LTL: & F robeks_juice & F bayou_smokehouse & F happy_noodle & F wako F etude_lounge
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F d & F b & F c F a
True Lmks: ('Robeks Juice', 'Bayou Smokehouse', 'Happy Noodle', 'Wako', 'Etude Lounge')
Out Lmks:['Etude Lounge', 'Happy Noodle', 'Wako', 'Bayou Smokehouse', 'Robeks Juice']
Out Grounds: {'Etude Lounge', 'Happy Noodle', 'Wako', 'Bayou Smokehouse', 'Robeks Juice'}
Placeholder Map: {'Etude Lounge': 'a', 'Happy Noodle': 'b', 'Wako': 'c', 'Bayou Smokehouse': 'd', 'Robeks Juice': 'h'}
True

41
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you go to Home Cafe, Coffee Bean & Tea Leaf, Happy Noodle, Foothill Transit, Korean BBQ, in any order
True Ground LTL: & F home_cafe & F coffee_bean_&_tea_leaf & F happy_noodle & F foothill_transit F korean_bbq
Out Ground LTL: & F home_cafe & F coffee_bean_&_tea_leaf & F happy_noodle & F foothill_transit F gwang_yang_bbq
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F b & F a & F h F c
True Lmks: ('Home Cafe', 'Coffee Bean & Tea Leaf', 'Happy Noodle', 'Foothill Transit', 'Korean BBQ')
Out Lmks:['Happy Noodle', 'Coffee Bean & Tea Leaf', 'Korean BBQ', 'Home Cafe', 'Foothill Transit']
Out Grounds: {'Happy Noodle', 'Coffee Bean & Tea Leaf', 'Gwang Yang BBQ', 'Home Cafe', 'Foothill Transit'}
Placeholder Map: {'Happy Noodle': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Gwang Yang BBQ': 'c', 'Home Cafe': 'd', 'Foothill Transit': 'h'}
False

42
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: you must visit Bayou Smokehouse, Robeks Juice, Happy Noodle, The Line, Korean Bbq, but it can be done in any order
True Ground LTL: & F bayou_smokehouse & F robeks_juice & F happy_noodle & F the_line F korean_bbq
Out Ground LTL: & F bayou_smokehouse & F robeks_juice & F happy_noodle & F the_line F gwang_yang_bbq
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F b & F h & F a & F c F d
True Lmks: ('Bayou Smokehouse', 'Robeks Juice', 'Happy Noodle', 'The Line', 'Korean Bbq')
Out Lmks:['Happy Noodle', 'Bayou Smokehouse', 'The Line', 'Robeks Juice', 'Korean Bbq']
Out Grounds: {'Happy Noodle', 'Bayou Smokehouse', 'The Line', 'Gwang Yang BBQ', 'Robeks Juice'}
Placeholder Map: {'Happy Noodle': 'a', 'Bayou Smokehouse': 'b', 'The Line': 'c', 'Gwang Yang BBQ': 'd', 'Robeks Juice': 'h'}
False

43
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: you must visit Central Plaza 3, Hair News, Neris Filipino Dining, Korean BBQ, Bongchu, but it can be done in any order
True Ground LTL: & F central_plaza_3 & F hair_news & F neris_filipino_dining & F korean_bbq F bongchu
Out Ground LTL: & F central_plaza_3 & F hair_news & F neris_filipino_dining & F gwang_yang_bbq F bongchu
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F a & F b & F c F h
True Lmks: ('Central Plaza 3', 'Hair News', 'Neris Filipino Dining', 'Korean BBQ', 'Bongchu')
Out Lmks:['Hair News', 'Neris Filipino Dining', 'Korean BBQ', 'Central Plaza 3', 'Bongchu']
Out Grounds: {'Hair News', 'Neris Filipino Dining', 'Gwang Yang BBQ', 'Central Plaza 3', 'Bongchu'}
Placeholder Map: {'Hair News': 'a', 'Neris Filipino Dining': 'b', 'Gwang Yang BBQ': 'c', 'Central Plaza 3': 'd', 'Bongchu': 'h'}
False

44
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: in no particular order visit Home Cafe, The Boiling Crab, The Gaylord Apartments, Crystal Spa, Etude Lounge
True Ground LTL: & F home_cafe & F the_boiling_crab & F the_gaylord_apartments & F crystal_spa F etude_lounge
Out Ground LTL: & F home_cafe & F the_boiling_crab & F the_gaylord_apartments & F crystal_spa F etude_lounge
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F d & F a & F c & F h F b
True Lmks: ('Home Cafe', 'The Boiling Crab', 'The Gaylord Apartments', 'Crystal Spa', 'Etude Lounge')
Out Lmks:['The Boiling Crab', 'Etude Lounge', 'The Gaylord Apartments', 'Home Cafe', 'Crystal Spa']
Out Grounds: {'The Boiling Crab', 'Etude Lounge', 'The Gaylord Apartments', 'Home Cafe', 'Crystal Spa'}
Placeholder Map: {'The Boiling Crab': 'a', 'Etude Lounge': 'b', 'The Gaylord Apartments': 'c', 'Home Cafe': 'd', 'Crystal Spa': 'h'}
True

45
visit ['a', 'b', 'c', 'd', 'h'] Input utterance: in no particular order visit Robeks Juice, Wilshire/Normandie, Korean Bbq, Coffee Bean & Tea Leaf, Central Plaza 3
True Ground LTL: & F robeks_juice & F wilshire_normandie & F korean_bbq & F coffee_bean_&_tea_leaf F central_plaza_3
Out Ground LTL: & F robeks_juice & F wilshire_normandie & F gwang_yang_bbq & F coffee_bean_&_tea_leaf F central_plaza_3
True Symbolic LTL: & F a & F b & F c & F d F h
Out Symbolic LTL: & F h & F b & F c & F a F d
True Lmks: ('Robeks Juice', 'Wilshire/Normandie', 'Korean Bbq', 'Coffee Bean & Tea Leaf', 'Central Plaza 3')
Out Lmks:['Coffee Bean & Tea Leaf', 'Wilshire/Normandie', 'Central Plaza 3', 'Robeks Juice', 'Korean Bbq']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Wilshire/Normandie', 'Gwang Yang BBQ', 'Central Plaza 3', 'Robeks Juice'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Wilshire/Normandie': 'b', 'Gwang Yang BBQ': 'c', 'Central Plaza 3': 'd', 'Robeks Juice': 'h'}
False

46
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not visit Mermaid Cafe, until you visit Bayou Smokehouse, visit Bayou Smokehouse, only once do not visit Bayou Smokehouse, until you visit POT, visit POT, only once do no visit POT, until you visit Hair News, visit Hair News, only once
True Ground LTL: & & U ! pot hair_news & U ! bayou_smokehouse pot & U ! mermaid_cafe bayou_smokehouse F mermaid_cafe & U ! hair_news U hair_news U ! hair_news pot & U ! pot U pot U ! pot bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse mermaid_cafe
Out Ground LTL: & & U ! pot hair_news & U ! bayou_smokehouse pot & U ! mermaid_cafe bayou_smokehouse F mermaid_cafe & U ! hair_news U hair_news U ! hair_news pot & U ! pot U pot U ! pot bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse mermaid_cafe
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! c d & U ! a c F a & U ! b U b U ! b d & U ! d U d U ! d c & U ! c U c U ! c a
True Lmks: ('Hair News', 'POT', 'Bayou Smokehouse', 'Mermaid Cafe')
Out Lmks:['Hair News', 'Mermaid Cafe', 'POT', 'Bayou Smokehouse']
Out Grounds: {'Mermaid Cafe', 'Hair News', 'Bayou Smokehouse', 'POT'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Hair News': 'b', 'Bayou Smokehouse': 'c', 'POT': 'd'}
Syntax Error

47
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not visit The Gaylord Apartments, until you visit Ice Cream, visit Ice Cream, only once do not visit Ice Cream, until you visit Wako, visit Wako, only once do no visit Wako, until you visit Consulat General of the Republic of Indonesia, visit Consulat General of the Republic of Indonesia, only once
True Ground LTL: & & U ! wako consulat_general_of_the_republic_of_indonesia & U ! ice_cream wako & U ! the_gaylord_apartments ice_cream F the_gaylord_apartments & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia wako & U ! wako U wako U ! wako ice_cream U ! ice_cream U ice_cream U ! ice_cream the_gaylord_apartments
Out Ground LTL: & & U ! wako consulat_general_of_the_republic_of_indonesia & U ! ice_cream wako & U ! the_gaylord_apartments ice_cream F the_gaylord_apartments & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia wako & U ! wako U wako U ! wako ice_cream & U ! ice_cream U ice_cream U ! ice_cream the_gaylord_apartments
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! a d & U ! b a F b & U ! c U c U ! c d & U ! d U d U ! d a & U ! a U a U ! a b
True Lmks: ('Consulat General of the Republic of Indonesia', 'Wako', 'Ice Cream', 'The Gaylord Apartments')
Out Lmks:['Consulat General of the Republic of Indonesia', 'The Gaylord Apartments', 'Ice Cream', 'Wako']
Out Grounds: {'Ice Cream', 'The Gaylord Apartments', 'Consulat General of the Republic of Indonesia', 'Wako'}
Placeholder Map: {'Ice Cream': 'a', 'The Gaylord Apartments': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Wako': 'd'}
Syntax Error

48
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Sun Nong Dan, then Wako, then Etude Lounge, and then Central Plaza 3, you can only visit each landmark once
True Ground LTL: & & U ! wako sun_nong_dan & U ! etude_lounge wako & U ! central_plaza_3 etude_lounge F central_plaza_3 & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan wako & U ! wako U wako U ! wako etude_lounge U ! etude_lounge U etude_lounge U ! etude_lounge central_plaza_3
Out Ground LTL: & & U ! wako sun_nong_dan & U ! etude_lounge wako & U ! central_plaza_3 etude_lounge F central_plaza_3 & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan wako & U ! wako U wako U ! wako etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge central_plaza_3
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! d b & U ! a d F a & U ! c U c U ! c b & U ! b U b U ! b d & U ! d U d U ! d a
True Lmks: ('Sun Nong Dan', 'Wako', 'Etude Lounge', 'Central Plaza 3')
Out Lmks:['Sun Nong Dan', 'Central Plaza 3', 'Wako', 'Etude Lounge']
Out Grounds: {'Central Plaza 3', 'Wako', 'Sun Nong Dan', 'Etude Lounge'}
Placeholder Map: {'Central Plaza 3': 'a', 'Wako': 'b', 'Sun Nong Dan': 'c', 'Etude Lounge': 'd'}
Syntax Error

49
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Robeks Juice, then The Gaylord Apartments, then Carl's Jr., and then Korean BBQ, you can only visit each landmark once
True Ground LTL: & & U ! the_gaylord_apartments robeks_juice & U ! carls_jr the_gaylord_apartments & U ! korean_bbq carls_jr F korean_bbq & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments carls_jr U ! carls_jr U carls_jr U ! carls_jr korean_bbq
Out Ground LTL: & & U ! the_gaylord_apartments robeks_juice & U ! carls_jr the_gaylord_apartments & U ! gwang_yang_bbq carls_jr F gwang_yang_bbq & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments carls_jr & U ! carls_jr U carls_jr U ! carls_jr gwang_yang_bbq
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! a b & U ! d a F d & U ! c U c U ! c b & U ! b U b U ! b a & U ! a U a U ! a d
True Lmks: ('Robeks Juice', 'The Gaylord Apartments', "Carl's Jr.", 'Korean BBQ')
Out Lmks:["Carl's Jr.", 'Korean BBQ', 'The Gaylord Apartments', 'Robeks Juice']
Out Grounds: {"Carl's Jr.", 'The Gaylord Apartments', 'Robeks Juice', 'Gwang Yang BBQ'}
Placeholder Map: {"Carl's Jr.": 'a', 'The Gaylord Apartments': 'b', 'Robeks Juice': 'c', 'Gwang Yang BBQ': 'd'}
RER or Grounding Error

50
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to The Line, but not through Crystal Spa, The Boiling Crab, or Zan ResPub, and then go to Crystal Spa, but not through The Boiling Crab, or Zan ResPub, and then go to The Boiling Crab, but not through Zan ResPub, and finally go to Zan ResPub, no revisiting is allowed
True Ground LTL: & & U ! crystal_spa the_line & U ! the_boiling_crab crystal_spa & U ! zan_respub the_boiling_crab F zan_respub & U ! the_line U the_line U ! the_line crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa the_boiling_crab U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab zan_respub
Out Ground LTL: & & U ! crystal_spa the_line & U ! the_boiling_crab crystal_spa & U ! zan_respub the_boiling_crab F zan_respub & U ! the_line U the_line U ! the_line crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa the_boiling_crab & U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab zan_respub
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! b a & U ! c b F c & U ! d U d U ! d a & U ! a U a U ! a b & U ! b U b U ! b c
True Lmks: ('The Line', 'Crystal Spa', 'The Boiling Crab', 'Zan ResPub')
Out Lmks:['Crystal Spa', 'The Boiling Crab', 'Zan ResPub', 'The Line']
Out Grounds: {'Crystal Spa', 'The Boiling Crab', 'Zan ResPub', 'The Line'}
Placeholder Map: {'Crystal Spa': 'a', 'The Boiling Crab': 'b', 'Zan ResPub': 'c', 'The Line': 'd'}
Syntax Error

51
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Crystal Spa, but not through Robeks Juice, Hair News, or The Line, and then go to Robeks Juice, but not through Hair News, or The Line, and then go to Hair News, but not through The Line, and finally go to The Line, no revisiting is allowed
True Ground LTL: & & U ! robeks_juice crystal_spa & U ! hair_news robeks_juice & U ! the_line hair_news F the_line & U ! crystal_spa U crystal_spa U ! crystal_spa robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice hair_news U ! hair_news U hair_news U ! hair_news the_line
Out Ground LTL: & & U ! robeks_juice crystal_spa & U ! hair_news robeks_juice & U ! the_line hair_news F the_line & U ! crystal_spa U crystal_spa U ! crystal_spa robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice hair_news & U ! hair_news U hair_news U ! hair_news the_line
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! b c & U ! d b F d & U ! a U a U ! a c & U ! c U c U ! c b & U ! b U b U ! b d
True Lmks: ('Crystal Spa', 'Robeks Juice', 'Hair News', 'The Line')
Out Lmks:['Crystal Spa', 'Hair News', 'Robeks Juice', 'The Line']
Out Grounds: {'Crystal Spa', 'Hair News', 'Robeks Juice', 'The Line'}
Placeholder Map: {'Crystal Spa': 'a', 'Hair News': 'b', 'Robeks Juice': 'c', 'The Line': 'd'}
Syntax Error

52
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not go to Bayou Smokehouse, until Tarboosh middle East kitchen, is visited and do not go to Tarboosh middle East kitchen, until Wilshire-Kenmore Building, is visited and do not go to Wilshire-Kenmore Building, until Metro, is visited along the path never return to previous location you have been to
True Ground LTL: & & U ! wilshire_kenmore_building metro & U ! tarboosh_middle_east_kitchen wilshire_kenmore_building & U ! bayou_smokehouse tarboosh_middle_east_kitchen F bayou_smokehouse & U ! metro U metro U ! metro wilshire_kenmore_building & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse
Out Ground LTL: & & U ! wilshire_kenmore_building metro & U ! tarboosh_middle_east_kitchen wilshire_kenmore_building & U ! bayou_smokehouse tarboosh_middle_east_kitchen F bayou_smokehouse & U ! metro U metro U ! metro wilshire_kenmore_building & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building tarboosh_middle_east_kitchen & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c F d & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d
True Lmks: ('Metro', 'Wilshire-Kenmore Building', 'Tarboosh middle East kitchen', 'Bayou Smokehouse')
Out Lmks:['Wilshire-Kenmore Building', 'Metro', 'Tarboosh middle East kitchen', 'Bayou Smokehouse']
Out Grounds: {'Wilshire-Kenmore Building', 'Metro', 'Tarboosh middle East kitchen', 'Bayou Smokehouse'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Metro': 'b', 'Tarboosh middle East kitchen': 'c', 'Bayou Smokehouse': 'd'}
Syntax Error

53
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: do not go to Koko Pizza, until Coffee Bean & Tea Leaf, is visited and do not go to Coffee Bean & Tea Leaf, until Happy Noodle, is visited and do not go to Happy Noodle, until Tarboosh middle East kitchen, is visited along the path never return to previous location you have been to
True Ground LTL: & & U ! happy_noodle tarboosh_middle_east_kitchen & U ! coffee_bean_&_tea_leaf happy_noodle & U ! koko_pizza coffee_bean_&_tea_leaf F koko_pizza & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf koko_pizza
Out Ground LTL: & & U ! happy_noodle tarboosh_middle_east_kitchen & U ! coffee_bean_&_tea_leaf happy_noodle & U ! koko_pizza coffee_bean_&_tea_leaf F koko_pizza & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle coffee_bean_&_tea_leaf & U ! coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf koko_pizza
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b F d & U ! c U c U ! c a & U ! a U a U ! a b & U ! b U b U ! b d
True Lmks: ('Tarboosh middle East kitchen', 'Happy Noodle', 'Coffee Bean & Tea Leaf', 'Koko Pizza')
Out Lmks:['Happy Noodle', 'Coffee Bean & Tea Leaf', 'Tarboosh middle East kitchen', 'Koko Pizza']
Out Grounds: {'Happy Noodle', 'Coffee Bean & Tea Leaf', 'Tarboosh middle East kitchen', 'Koko Pizza'}
Placeholder Map: {'Happy Noodle': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Tarboosh middle East kitchen': 'c', 'Koko Pizza': 'd'}
Syntax Error

54
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: make your way to Tarboosh middle East kitchen, only after going to Mermaid Cafe, before that make your way to Mermaid Cafe, only after going to Details, before that make your way to Details, only after going to Central Plaza 1, do not go back to the previous location you have visited while heading to the next
True Ground LTL: & & U ! details central_plaza_1 & U ! mermaid_cafe details & U ! tarboosh_middle_east_kitchen mermaid_cafe F tarboosh_middle_east_kitchen & U ! central_plaza_1 U central_plaza_1 U ! central_plaza_1 details & U ! details U details U ! details mermaid_cafe U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe tarboosh_middle_east_kitchen
Out Ground LTL: & & U ! details central_plaza_1 & U ! mermaid_cafe details & U ! tarboosh_middle_east_kitchen mermaid_cafe F tarboosh_middle_east_kitchen & U ! central_plaza_1 U central_plaza_1 U ! central_plaza_1 details & U ! details U details U ! details mermaid_cafe & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe tarboosh_middle_east_kitchen
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! c a & U ! b c F b & U ! d U d U ! d a & U ! a U a U ! a c & U ! c U c U ! c b
True Lmks: ('Central Plaza 1', 'Details', 'Mermaid Cafe', 'Tarboosh middle East kitchen')
Out Lmks:['Details', 'Tarboosh middle East kitchen', 'Mermaid Cafe', 'Central Plaza 1']
Out Grounds: {'Details', 'Tarboosh middle East kitchen', 'Mermaid Cafe', 'Central Plaza 1'}
Placeholder Map: {'Details': 'a', 'Tarboosh middle East kitchen': 'b', 'Mermaid Cafe': 'c', 'Central Plaza 1': 'd'}
Syntax Error

55
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: make your way to Consulat General of the Republic of Indonesia, only after going to Crystal Spa, before that make your way to Crystal Spa, only after going to Zan ResPub, before that make your way to Zan ResPub, only after going to Togo's, do not go back to the previous location you have visited while heading to the next
True Ground LTL: & & U ! zan_respub togos & U ! crystal_spa zan_respub & U ! consulat_general_of_the_republic_of_indonesia crystal_spa F consulat_general_of_the_republic_of_indonesia & U ! togos U togos U ! togos zan_respub & U ! zan_respub U zan_respub U ! zan_respub crystal_spa U ! crystal_spa U crystal_spa U ! crystal_spa consulat_general_of_the_republic_of_indonesia
Out Ground LTL: & & U ! zan_respub togos & U ! crystal_spa zan_respub & U ! consulat_general_of_the_republic_of_indonesia crystal_spa F consulat_general_of_the_republic_of_indonesia & U ! togos U togos U ! togos zan_respub & U ! zan_respub U zan_respub U ! zan_respub crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! a d & U ! c a F c & U ! b U b U ! b d & U ! d U d U ! d a & U ! a U a U ! a c
True Lmks: ("Togo's", 'Zan ResPub', 'Crystal Spa', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Crystal Spa', "Togo's", 'Consulat General of the Republic of Indonesia', 'Zan ResPub']
Out Grounds: {'Crystal Spa', "Togo's", 'Consulat General of the Republic of Indonesia', 'Zan ResPub'}
Placeholder Map: {'Crystal Spa': 'a', "Togo's": 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Zan ResPub': 'd'}
Syntax Error

56
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to California Design College, but do not visit Happy Noodle, Big 5 Sporting Goods, or Wilshire/Normandie, and then go to Happy Noodle, but do not visit Big 5 Sporting Goods, or Wilshire/Normandie, or revisit California Design College, and then go to Big 5 Sporting Goods, but do not visit Wilshire/Normandie, or revisit California Design College, or Happy Noodle, and then go to Wilshire/Normandie, but do not revisit California Design College, Happy Noodle, or Big 5 Sporting Goods
True Ground LTL: & & U ! happy_noodle california_design_college & U ! big_5_sporting_goods happy_noodle & U ! wilshire_normandie big_5_sporting_goods F wilshire_normandie & U ! california_design_college U california_design_college U ! california_design_college happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle big_5_sporting_goods U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods wilshire_normandie
Out Ground LTL: & & U ! happy_noodle california_design_college & U ! big_5_sporting_goods happy_noodle & U ! wilshire_normandie big_5_sporting_goods F wilshire_normandie & U ! california_design_college U california_design_college U ! california_design_college happy_noodle & U ! happy_noodle U happy_noodle U ! happy_noodle big_5_sporting_goods & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods wilshire_normandie
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! c a & U ! b c F b & U ! d U d U ! d a & U ! a U a U ! a c & U ! c U c U ! c b
True Lmks: ('California Design College', 'Happy Noodle', 'Big 5 Sporting Goods', 'Wilshire/Normandie')
Out Lmks:['Happy Noodle', 'Wilshire/Normandie', 'Big 5 Sporting Goods', 'California Design College']
Out Grounds: {'Happy Noodle', 'Wilshire/Normandie', 'Big 5 Sporting Goods', 'California Design College'}
Placeholder Map: {'Happy Noodle': 'a', 'Wilshire/Normandie': 'b', 'Big 5 Sporting Goods': 'c', 'California Design College': 'd'}
Syntax Error

57
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Wilshire-Kenmore Building, but do not visit Metro, POT, or Sun Nong Dan, and then go to Metro, but do not visit POT, or Sun Nong Dan, or revisit Wilshire-Kenmore Building, and then go to POT, but do not visit Sun Nong Dan, or revisit Wilshire-Kenmore Building, or Metro, and then go to Sun Nong Dan, but do not revisit Wilshire-Kenmore Building, Metro, or POT
True Ground LTL: & & U ! metro wilshire_kenmore_building & U ! pot metro & U ! sun_nong_dan pot F sun_nong_dan & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building metro & U ! metro U metro U ! metro pot U ! pot U pot U ! pot sun_nong_dan
Out Ground LTL: & & U ! metro wilshire_kenmore_building & U ! pot metro & U ! sun_nong_dan pot F sun_nong_dan & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building metro & U ! metro U metro U ! metro pot & U ! pot U pot U ! pot sun_nong_dan
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! d c & U ! b d F b & U ! a U a U ! a c & U ! c U c U ! c d & U ! d U d U ! d b
True Lmks: ('Wilshire-Kenmore Building', 'Metro', 'POT', 'Sun Nong Dan')
Out Lmks:['Wilshire-Kenmore Building', 'Metro', 'POT', 'Sun Nong Dan']
Out Grounds: {'Wilshire-Kenmore Building', 'Sun Nong Dan', 'Metro', 'POT'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Sun Nong Dan': 'b', 'Metro': 'c', 'POT': 'd'}
Syntax Error

58
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Carl's Jr., Foothill Transit, California Design College, and Mali Taste of Thailand, in this order without skipping any one of them do not revisit any one of them once after you have been there
True Ground LTL: & & U ! foothill_transit carls_jr & U ! california_design_college foothill_transit & U ! mali_taste_of_thailand california_design_college F mali_taste_of_thailand & U ! carls_jr U carls_jr U ! carls_jr foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit california_design_college U ! california_design_college U california_design_college U ! california_design_college mali_taste_of_thailand
Out Ground LTL: & & U ! foothill_transit carls_jr & U ! california_design_college foothill_transit & U ! mali_taste_of_thailand california_design_college F mali_taste_of_thailand & U ! carls_jr U carls_jr U ! carls_jr foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit california_design_college & U ! california_design_college U california_design_college U ! california_design_college mali_taste_of_thailand
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! d b & U ! c d F c & U ! a U a U ! a b & U ! b U b U ! b d & U ! d U d U ! d c
True Lmks: ("Carl's Jr.", 'Foothill Transit', 'California Design College', 'Mali Taste of Thailand')
Out Lmks:["Carl's Jr.", 'Foothill Transit', 'Mali Taste of Thailand', 'California Design College']
Out Grounds: {"Carl's Jr.", 'Foothill Transit', 'Mali Taste of Thailand', 'California Design College'}
Placeholder Map: {"Carl's Jr.": 'a', 'Foothill Transit': 'b', 'Mali Taste of Thailand': 'c', 'California Design College': 'd'}
Syntax Error

59
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Mali Taste of Thailand, Foothill Transit, POT, and Ice Cream, in this order without skipping any one of them do not revisit any one of them once after you have been there
True Ground LTL: & & U ! foothill_transit mali_taste_of_thailand & U ! pot foothill_transit & U ! ice_cream pot F ice_cream & U ! mali_taste_of_thailand U mali_taste_of_thailand U ! mali_taste_of_thailand foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit pot U ! pot U pot U ! pot ice_cream
Out Ground LTL: & & U ! foothill_transit mali_taste_of_thailand & U ! pot foothill_transit & U ! ice_cream pot F ice_cream & U ! mali_taste_of_thailand U mali_taste_of_thailand U ! mali_taste_of_thailand foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit pot & U ! pot U pot U ! pot ice_cream
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! d a & U ! b d F b & U ! c U c U ! c a & U ! a U a U ! a d & U ! d U d U ! d b
True Lmks: ('Mali Taste of Thailand', 'Foothill Transit', 'POT', 'Ice Cream')
Out Lmks:['Ice Cream', 'Foothill Transit', 'POT', 'Mali Taste of Thailand']
Out Grounds: {'Foothill Transit', 'Ice Cream', 'Mali Taste of Thailand', 'POT'}
Placeholder Map: {'Foothill Transit': 'a', 'Ice Cream': 'b', 'Mali Taste of Thailand': 'c', 'POT': 'd'}
Syntax Error

60
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to California Design College, only once but keep away from Korean Bbq, BBQ Premium Chicken, and Mali Taste of Thailand, and then go to Korean Bbq, only once but keep away from California Design College, BBQ Premium Chicken, and Mali Taste of Thailand, and then go to BBQ Premium Chicken, only once but keep way from California Design College, Korean Bbq, and Mali Taste of Thailand, and finally go to Mali Taste of Thailand, once but keep away from California Design College, Korean Bbq, and BBQ Premium Chicken
True Ground LTL: & & U ! korean_bbq california_design_college & U ! bbq_premium_chicken korean_bbq & U ! mali_taste_of_thailand bbq_premium_chicken F mali_taste_of_thailand & U ! california_design_college U california_design_college U ! california_design_college korean_bbq & U ! korean_bbq U korean_bbq U ! korean_bbq bbq_premium_chicken U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken mali_taste_of_thailand
Out Ground LTL: & & U ! gwang_yang_bbq california_design_college & U ! bbq_premium_chicken gwang_yang_bbq & U ! mali_taste_of_thailand bbq_premium_chicken F mali_taste_of_thailand & U ! california_design_college U california_design_college U ! california_design_college gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken mali_taste_of_thailand
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a d & U ! c a & U ! b c F b & U ! d U d U ! d a & U ! a U a U ! a c & U ! c U c U ! c b
True Lmks: ('California Design College', 'Korean Bbq', 'BBQ Premium Chicken', 'Mali Taste of Thailand')
Out Lmks:['BBQ Premium Chicken', 'Mali Taste of Thailand', 'Korean Bbq', 'California Design College']
Out Grounds: {'Gwang Yang BBQ', 'Mali Taste of Thailand', 'BBQ Premium Chicken', 'California Design College'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'Mali Taste of Thailand': 'b', 'BBQ Premium Chicken': 'c', 'California Design College': 'd'}
RER or Grounding Error

61
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Tarboosh middle East kitchen, only once but keep away from The Line, California Design College, and Bongchu, and then go to The Line, only once but keep away from Tarboosh middle East kitchen, California Design College, and Bongchu, and then go to California Design College, only once but keep way from Tarboosh middle East kitchen, The Line, and Bongchu, and finally go to Bongchu, once but keep away from Tarboosh middle East kitchen, The Line, and California Design College
True Ground LTL: & & U ! the_line tarboosh_middle_east_kitchen & U ! california_design_college the_line & U ! bongchu california_design_college F bongchu & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen the_line & U ! the_line U the_line U ! the_line california_design_college U ! california_design_college U california_design_college U ! california_design_college bongchu
Out Ground LTL: & & U ! the_line tarboosh_middle_east_kitchen & U ! california_design_college the_line & U ! bongchu california_design_college F bongchu & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen the_line & U ! the_line U the_line U ! the_line california_design_college & U ! california_design_college U california_design_college U ! california_design_college bongchu
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! d c & U ! b d F b & U ! a U a U ! a c & U ! c U c U ! c d & U ! d U d U ! d b
True Lmks: ('Tarboosh middle East kitchen', 'The Line', 'California Design College', 'Bongchu')
Out Lmks:['Tarboosh middle East kitchen', 'Bongchu', 'California Design College', 'The Line']
Out Grounds: {'Tarboosh middle East kitchen', 'Bongchu', 'The Line', 'California Design College'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Bongchu': 'b', 'The Line': 'c', 'California Design College': 'd'}
Syntax Error

62
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Wilshire/Normandie, one time but not through Metro, Korean BBQ, or Wako, and then visit Metro, once but not through Wilshire/Normandie, Korean BBQ, or Wako, and then visit Korean BBQ, once but not through Wilshire/Normandie, Metro, or Wako, and then visit Wako, once but not through Wilshire/Normandie, Metro, or Korean BBQ
True Ground LTL: & & U ! metro wilshire_normandie & U ! korean_bbq metro & U ! wako korean_bbq F wako & U ! wilshire_normandie U wilshire_normandie U ! wilshire_normandie metro & U ! metro U metro U ! metro korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq wako
Out Ground LTL: & & U ! metro wilshire_normandie & U ! gwang_yang_bbq metro & U ! wako gwang_yang_bbq F wako & U ! wilshire_normandie U wilshire_normandie U ! wilshire_normandie metro & U ! metro U metro U ! metro gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq wako
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! d a & U ! c d F c & U ! b U b U ! b a & U ! a U a U ! a d & U ! d U d U ! d c
True Lmks: ('Wilshire/Normandie', 'Metro', 'Korean BBQ', 'Wako')
Out Lmks:['Metro', 'Korean BBQ', 'Wilshire/Normandie', 'Wako']
Out Grounds: {'Metro', 'Wilshire/Normandie', 'Wako', 'Gwang Yang BBQ'}
Placeholder Map: {'Metro': 'a', 'Wilshire/Normandie': 'b', 'Wako': 'c', 'Gwang Yang BBQ': 'd'}
RER or Grounding Error

63
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Consulat General of the Republic of Indonesia, one time but not through Ice Cream, The Line, or BBQ Premium Chicken, and then visit Ice Cream, once but not through Consulat General of the Republic of Indonesia, The Line, or BBQ Premium Chicken, and then visit The Line, once but not through Consulat General of the Republic of Indonesia, Ice Cream, or BBQ Premium Chicken, and then visit BBQ Premium Chicken, once but not through Consulat General of the Republic of Indonesia, Ice Cream, or The Line
True Ground LTL: & & U ! ice_cream consulat_general_of_the_republic_of_indonesia & U ! the_line ice_cream & U ! bbq_premium_chicken the_line F bbq_premium_chicken & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia ice_cream & U ! ice_cream U ice_cream U ! ice_cream the_line U ! the_line U the_line U ! the_line bbq_premium_chicken
Out Ground LTL: & & U ! ice_cream consulat_general_of_the_republic_of_indonesia & U ! the_line ice_cream & U ! bbq_premium_chicken the_line F bbq_premium_chicken & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia ice_cream & U ! ice_cream U ice_cream U ! ice_cream the_line & U ! the_line U the_line U ! the_line bbq_premium_chicken
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! d a & U ! c d F c & U ! b U b U ! b a & U ! a U a U ! a d & U ! d U d U ! d c
True Lmks: ('Consulat General of the Republic of Indonesia', 'Ice Cream', 'The Line', 'BBQ Premium Chicken')
Out Lmks:['Ice Cream', 'Consulat General of the Republic of Indonesia', 'BBQ Premium Chicken', 'The Line']
Out Grounds: {'Ice Cream', 'Consulat General of the Republic of Indonesia', 'BBQ Premium Chicken', 'The Line'}
Placeholder Map: {'Ice Cream': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'BBQ Premium Chicken': 'c', 'The Line': 'd'}
Syntax Error

64
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: stay away from Foothill Transit, BBQ Premium Chicken, and Korean Bbq, until you make Sun Nong Dan, single visit to Sun Nong Dan, and then make your way to Foothill Transit, while staying away from Sun Nong Dan, BBQ Premium Chicken, and Korean Bbq, and then make your way to BBQ Premium Chicken, while staying away from Sun Nong Dan, Foothill Transit, or Korean Bbq, and finally make your way to Korean Bbq, while staying away from Sun Nong Dan, Foothill Transit, and BBQ Premium Chicken
True Ground LTL: & & U ! foothill_transit sun_nong_dan & U ! bbq_premium_chicken foothill_transit & U ! korean_bbq bbq_premium_chicken F korean_bbq & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit bbq_premium_chicken U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken korean_bbq
Out Ground LTL: & U ! foothill_transit sun_nong_dan & U ! bbq_premium_chicken foothill_transit & U ! gwang_yang_bbq bbq_premium_chicken F gwang_yang_bbq
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & U ! b a & U ! c b & U ! d c F d
True Lmks: ('Sun Nong Dan', 'Foothill Transit', 'BBQ Premium Chicken', 'Korean Bbq')
Out Lmks:['Sun Nong Dan', 'Foothill Transit', 'BBQ Premium Chicken', 'Korean Bbq']
Out Grounds: {'Sun Nong Dan', 'Foothill Transit', 'BBQ Premium Chicken', 'Gwang Yang BBQ'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Foothill Transit': 'b', 'BBQ Premium Chicken': 'c', 'Gwang Yang BBQ': 'd'}
False

65
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: stay away from Ice Cream, POT, and Coffee Bean & Tea Leaf, until you make Crystal Spa, single visit to Crystal Spa, and then make your way to Ice Cream, while staying away from Crystal Spa, POT, and Coffee Bean & Tea Leaf, and then make your way to POT, while staying away from Crystal Spa, Ice Cream, or Coffee Bean & Tea Leaf, and finally make your way to Coffee Bean & Tea Leaf, while staying away from Crystal Spa, Ice Cream, and POT
True Ground LTL: & & U ! ice_cream crystal_spa & U ! pot ice_cream & U ! coffee_bean_&_tea_leaf pot F coffee_bean_&_tea_leaf & U ! crystal_spa U crystal_spa U ! crystal_spa ice_cream & U ! ice_cream U ice_cream U ! ice_cream pot U ! pot U pot U ! pot coffee_bean_&_tea_leaf
Out Ground LTL: & U ! ice_cream crystal_spa & U ! pot ice_cream & U ! coffee_bean_&_tea_leaf pot F coffee_bean_&_tea_leaf
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & U ! b c & U ! d b & U ! a d F a
True Lmks: ('Crystal Spa', 'Ice Cream', 'POT', 'Coffee Bean & Tea Leaf')
Out Lmks:['Coffee Bean & Tea Leaf', 'Ice Cream', 'Crystal Spa', 'POT']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Ice Cream', 'Crystal Spa', 'POT'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Ice Cream': 'b', 'Crystal Spa': 'c', 'POT': 'd'}
False

66
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: head to BBQ Premium Chicken, Zan ResPub, Korean BBQ, and Crystal Spa, in this order without skipping or revisiting any one of them
True Ground LTL: & & U ! zan_respub bbq_premium_chicken & U ! korean_bbq zan_respub & U ! crystal_spa korean_bbq F crystal_spa & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken zan_respub & U ! zan_respub U zan_respub U ! zan_respub korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq crystal_spa
Out Ground LTL: & & U ! zan_respub bbq_premium_chicken & U ! gwang_yang_bbq zan_respub & U ! crystal_spa gwang_yang_bbq F crystal_spa & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken zan_respub & U ! zan_respub U zan_respub U ! zan_respub gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq crystal_spa
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! d b & U ! a d F a & U ! c U c U ! c b & U ! b U b U ! b d & U ! d U d U ! d a
True Lmks: ('BBQ Premium Chicken', 'Zan ResPub', 'Korean BBQ', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'Korean BBQ', 'Zan ResPub', 'BBQ Premium Chicken']
Out Grounds: {'Crystal Spa', 'Zan ResPub', 'BBQ Premium Chicken', 'Gwang Yang BBQ'}
Placeholder Map: {'Crystal Spa': 'a', 'Zan ResPub': 'b', 'BBQ Premium Chicken': 'c', 'Gwang Yang BBQ': 'd'}
RER or Grounding Error

67
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: head to Consulat General of the Republic of Indonesia, The Boiling Crab, Gwang Yang BBQ, and Korean Bbq, in this order without skipping or revisiting any one of them
True Ground LTL: & & U ! the_boiling_crab consulat_general_of_the_republic_of_indonesia & U ! gwang_yang_bbq the_boiling_crab & U ! korean_bbq gwang_yang_bbq F korean_bbq & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia the_boiling_crab & U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab gwang_yang_bbq U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq korean_bbq
Out Ground LTL: & & U ! the_boiling_crab consulat_general_of_the_republic_of_indonesia & U ! gwang_yang_bbq the_boiling_crab & U ! d gwang_yang_bbq & U ! h d F h & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia the_boiling_crab & U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq d U ! d U d U ! d h
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a b & U ! c a & U ! d c & U ! h d F h & U ! b U b U ! b a & U ! a U a U ! a c & U ! c U c U ! c d U ! d U d U ! d h
True Lmks: ('Consulat General of the Republic of Indonesia', 'The Boiling Crab', 'Gwang Yang BBQ', 'Korean Bbq')
Out Lmks:['The Boiling Crab', 'Consulat General of the Republic of Indonesia', 'Gwang Yang BBQ', 'Korean Bbq']
Out Grounds: {'The Boiling Crab', 'Consulat General of the Republic of Indonesia', 'Gwang Yang BBQ'}
Placeholder Map: {'The Boiling Crab': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Gwang Yang BBQ': 'c'}
False

68
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit each of Details, Robeks Juice, Seaweed, and Metro, exactly once in this order
True Ground LTL: & & U ! robeks_juice details & U ! seaweed robeks_juice & U ! metro seaweed F metro & U ! details U details U ! details robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice seaweed U ! seaweed U seaweed U ! seaweed metro
Out Ground LTL: & & U ! robeks_juice details & U ! seaweed robeks_juice & U ! metro seaweed F metro & U ! details U details U ! details robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice seaweed & U ! seaweed U seaweed U ! seaweed metro
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! b d & U ! c b F c & U ! a U a U ! a d & U ! d U d U ! d b & U ! b U b U ! b c
True Lmks: ('Details', 'Robeks Juice', 'Seaweed', 'Metro')
Out Lmks:['Details', 'Seaweed', 'Metro', 'Robeks Juice']
Out Grounds: {'Details', 'Seaweed', 'Metro', 'Robeks Juice'}
Placeholder Map: {'Details': 'a', 'Seaweed': 'b', 'Metro': 'c', 'Robeks Juice': 'd'}
Syntax Error

69
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit each of Crystal Spa, Sun Nong Dan, Korean BBQ, and Details, exactly once in this order
True Ground LTL: & & U ! sun_nong_dan crystal_spa & U ! korean_bbq sun_nong_dan & U ! details korean_bbq F details & U ! crystal_spa U crystal_spa U ! crystal_spa sun_nong_dan & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq details
Out Ground LTL: & & U ! sun_nong_dan crystal_spa & U ! gwang_yang_bbq sun_nong_dan & U ! details gwang_yang_bbq F details & U ! crystal_spa U crystal_spa U ! crystal_spa sun_nong_dan & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq details
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! d b & U ! a d F a & U ! c U c U ! c b & U ! b U b U ! b d & U ! d U d U ! d a
True Lmks: ('Crystal Spa', 'Sun Nong Dan', 'Korean BBQ', 'Details')
Out Lmks:['Details', 'Crystal Spa', 'Korean BBQ', 'Sun Nong Dan']
Out Grounds: {'Details', 'Sun Nong Dan', 'Crystal Spa', 'Gwang Yang BBQ'}
Placeholder Map: {'Details': 'a', 'Sun Nong Dan': 'b', 'Crystal Spa': 'c', 'Gwang Yang BBQ': 'd'}
RER or Grounding Error

70
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Bayou Smokehouse, but before visiting Bayou Smokehouse, you must visit Home Cafe, only after that visit Metro, after visiting Metro, visit Crystal Spa, visit each location once
True Ground LTL: & & U ! bayou_smokehouse home_cafe & U ! metro bayou_smokehouse & U ! crystal_spa metro F crystal_spa & U ! home_cafe U home_cafe U ! home_cafe bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse metro U ! metro U metro U ! metro crystal_spa
Out Ground LTL: & & U ! bayou_smokehouse home_cafe & U ! metro bayou_smokehouse & U ! crystal_spa metro F crystal_spa & U ! home_cafe U home_cafe U ! home_cafe bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse metro & U ! metro U metro U ! metro crystal_spa
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! a c & U ! b a F b & U ! d U d U ! d c & U ! c U c U ! c a & U ! a U a U ! a b
True Lmks: ('Home Cafe', 'Bayou Smokehouse', 'Metro', 'Crystal Spa')
Out Lmks:['Metro', 'Crystal Spa', 'Bayou Smokehouse', 'Home Cafe']
Out Grounds: {'Metro', 'Crystal Spa', 'Bayou Smokehouse', 'Home Cafe'}
Placeholder Map: {'Metro': 'a', 'Crystal Spa': 'b', 'Bayou Smokehouse': 'c', 'Home Cafe': 'd'}
Syntax Error

71
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Etude Lounge, but before visiting Etude Lounge, you must visit Big 5 Sporting Goods, only after that visit Bayou Smokehouse, after visiting Bayou Smokehouse, visit Korean Bbq, visit each location once
True Ground LTL: & & U ! etude_lounge big_5_sporting_goods & U ! bayou_smokehouse etude_lounge & U ! korean_bbq bayou_smokehouse F korean_bbq & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse korean_bbq
Out Ground LTL: & & U ! etude_lounge big_5_sporting_goods & U ! bayou_smokehouse etude_lounge & U ! gwang_yang_bbq bayou_smokehouse F gwang_yang_bbq & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse gwang_yang_bbq
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! c d & U ! a c F a & U ! b U b U ! b d & U ! d U d U ! d c & U ! c U c U ! c a
True Lmks: ('Big 5 Sporting Goods', 'Etude Lounge', 'Bayou Smokehouse', 'Korean Bbq')
Out Lmks:['Korean Bbq', 'Big 5 Sporting Goods', 'Bayou Smokehouse', 'Etude Lounge']
Out Grounds: {'Gwang Yang BBQ', 'Big 5 Sporting Goods', 'Bayou Smokehouse', 'Etude Lounge'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'Big 5 Sporting Goods': 'b', 'Bayou Smokehouse': 'c', 'Etude Lounge': 'd'}
RER or Grounding Error

72
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Koko Pizza, only once while avoiding Neris Filipino Dining, then visit Neris Filipino Dining, once while avoiding California Design College, only after visiting California Design College, once visit Metro
True Ground LTL: & & U ! neris_filipino_dining koko_pizza & U ! california_design_college neris_filipino_dining & U ! metro california_design_college F metro & U ! koko_pizza U koko_pizza U ! koko_pizza neris_filipino_dining & U ! neris_filipino_dining U neris_filipino_dining U ! neris_filipino_dining california_design_college U ! california_design_college U california_design_college U ! california_design_college metro
Out Ground LTL: & & U ! neris_filipino_dining koko_pizza & U ! california_design_college neris_filipino_dining & U ! metro california_design_college F metro & U ! koko_pizza U koko_pizza U ! koko_pizza neris_filipino_dining & U ! neris_filipino_dining U neris_filipino_dining U ! neris_filipino_dining california_design_college U ! california_design_college U california_design_college U ! california_design_college metro
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b c & U ! d b & U ! a d F a & U ! c U c U ! c b & U ! b U b U ! b d U ! d U d U ! d a
True Lmks: ('Koko Pizza', 'Neris Filipino Dining', 'California Design College', 'Metro')
Out Lmks:['Metro', 'Koko Pizza', 'California Design College', 'Neris Filipino Dining']
Out Grounds: {'Metro', 'Neris Filipino Dining', 'Koko Pizza', 'California Design College'}
Placeholder Map: {'Metro': 'a', 'Neris Filipino Dining': 'b', 'Koko Pizza': 'c', 'California Design College': 'd'}
True

73
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Sun Nong Dan, only once while avoiding Foothill Transit, then visit Foothill Transit, once while avoiding Bayou Smokehouse, only after visiting Bayou Smokehouse, once visit Korean BBQ
True Ground LTL: & & U ! foothill_transit sun_nong_dan & U ! bayou_smokehouse foothill_transit & U ! korean_bbq bayou_smokehouse F korean_bbq & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse korean_bbq
Out Ground LTL: & & U ! foothill_transit sun_nong_dan & U ! bayou_smokehouse foothill_transit & U ! gwang_yang_bbq bayou_smokehouse F gwang_yang_bbq & U ! sun_nong_dan U sun_nong_dan U ! sun_nong_dan foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse gwang_yang_bbq
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d
True Lmks: ('Sun Nong Dan', 'Foothill Transit', 'Bayou Smokehouse', 'Korean BBQ')
Out Lmks:['Sun Nong Dan', 'Korean BBQ', 'Foothill Transit', 'Bayou Smokehouse']
Out Grounds: {'Sun Nong Dan', 'Foothill Transit', 'Bayou Smokehouse', 'Gwang Yang BBQ'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Foothill Transit': 'b', 'Bayou Smokehouse': 'c', 'Gwang Yang BBQ': 'd'}
RER or Grounding Error

74
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Details, Korean Bbq, Metro, Zan ResPub, once do not visit Korean Bbq, without visiting Details, and do not visit Korean Bbq, without visiting Metro, do not visit Zan ResPub, without visiting Metro
True Ground LTL: & & U ! korean_bbq details & U ! metro korean_bbq & U ! zan_respub metro F zan_respub & U ! details U details U ! details korean_bbq & U ! korean_bbq U korean_bbq U ! korean_bbq metro U ! metro U metro U ! metro zan_respub
Out Ground LTL: & & U ! gwang_yang_bbq details & U ! metro gwang_yang_bbq & U ! zan_respub metro F zan_respub & U ! details U details U ! details gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq metro U ! metro U metro U ! metro zan_respub
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! b d & U ! c b F c & U ! a U a U ! a d & U ! d U d U ! d b U ! b U b U ! b c
True Lmks: ('Details', 'Korean Bbq', 'Metro', 'Zan ResPub')
Out Lmks:['Details', 'Metro', 'Zan ResPub', 'Korean Bbq']
Out Grounds: {'Details', 'Metro', 'Zan ResPub', 'Gwang Yang BBQ'}
Placeholder Map: {'Details': 'a', 'Metro': 'b', 'Zan ResPub': 'c', 'Gwang Yang BBQ': 'd'}
False

75
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Wako, Big 5 Sporting Goods, Home Cafe, Hair News, once do not visit Big 5 Sporting Goods, without visiting Wako, and do not visit Big 5 Sporting Goods, without visiting Home Cafe, do not visit Hair News, without visiting Home Cafe
True Ground LTL: & & U ! big_5_sporting_goods wako & U ! home_cafe big_5_sporting_goods & U ! hair_news home_cafe F hair_news & U ! wako U wako U ! wako big_5_sporting_goods & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods home_cafe U ! home_cafe U home_cafe U ! home_cafe hair_news
Out Ground LTL: & & U ! big_5_sporting_goods wako & U ! home_cafe big_5_sporting_goods & U ! hair_news home_cafe F hair_news & U ! wako U wako U ! wako big_5_sporting_goods & U ! big_5_sporting_goods U big_5_sporting_goods U ! big_5_sporting_goods home_cafe U ! home_cafe U home_cafe U ! home_cafe hair_news
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c a & U ! d c & U ! b d F b & U ! a U a U ! a c & U ! c U c U ! c d U ! d U d U ! d b
True Lmks: ('Wako', 'Big 5 Sporting Goods', 'Home Cafe', 'Hair News')
Out Lmks:['Big 5 Sporting Goods', 'Hair News', 'Wako', 'Home Cafe']
Out Grounds: {'Wako', 'Hair News', 'Big 5 Sporting Goods', 'Home Cafe'}
Placeholder Map: {'Wako': 'a', 'Hair News': 'b', 'Big 5 Sporting Goods': 'c', 'Home Cafe': 'd'}
True

76
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit BBQ Premium Chicken, then Gwang Yang BBQ, then Wilshire-Kenmore Building, then Carl's Jr., follow this strict order and visit each location only once
True Ground LTL: & & U ! gwang_yang_bbq bbq_premium_chicken & U ! wilshire_kenmore_building gwang_yang_bbq & U ! carls_jr wilshire_kenmore_building F carls_jr & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq wilshire_kenmore_building U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building carls_jr
Out Ground LTL: & & U ! gwang_yang_bbq bbq_premium_chicken & U ! wilshire_kenmore_building gwang_yang_bbq & U ! carls_jr wilshire_kenmore_building F carls_jr & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq wilshire_kenmore_building & U ! wilshire_kenmore_building U wilshire_kenmore_building U ! wilshire_kenmore_building carls_jr
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! a d & U ! b a F b & U ! c U c U ! c d & U ! d U d U ! d a & U ! a U a U ! a b
True Lmks: ('BBQ Premium Chicken', 'Gwang Yang BBQ', 'Wilshire-Kenmore Building', "Carl's Jr.")
Out Lmks:['Wilshire-Kenmore Building', "Carl's Jr.", 'BBQ Premium Chicken', 'Gwang Yang BBQ']
Out Grounds: {'Wilshire-Kenmore Building', "Carl's Jr.", 'BBQ Premium Chicken', 'Gwang Yang BBQ'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', "Carl's Jr.": 'b', 'BBQ Premium Chicken': 'c', 'Gwang Yang BBQ': 'd'}
Syntax Error

77
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Tarboosh middle East kitchen, then Bayou Smokehouse, then Seaweed, then Foothill Transit, follow this strict order and visit each location only once
True Ground LTL: & & U ! bayou_smokehouse tarboosh_middle_east_kitchen & U ! seaweed bayou_smokehouse & U ! foothill_transit seaweed F foothill_transit & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse seaweed U ! seaweed U seaweed U ! seaweed foothill_transit
Out Ground LTL: & & U ! bayou_smokehouse tarboosh_middle_east_kitchen & U ! seaweed bayou_smokehouse & U ! foothill_transit seaweed F foothill_transit & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse seaweed & U ! seaweed U seaweed U ! seaweed foothill_transit
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! a d & U ! b a F b & U ! c U c U ! c d & U ! d U d U ! d a & U ! a U a U ! a b
True Lmks: ('Tarboosh middle East kitchen', 'Bayou Smokehouse', 'Seaweed', 'Foothill Transit')
Out Lmks:['Seaweed', 'Foothill Transit', 'Tarboosh middle East kitchen', 'Bayou Smokehouse']
Out Grounds: {'Seaweed', 'Foothill Transit', 'Tarboosh middle East kitchen', 'Bayou Smokehouse'}
Placeholder Map: {'Seaweed': 'a', 'Foothill Transit': 'b', 'Tarboosh middle East kitchen': 'c', 'Bayou Smokehouse': 'd'}
Syntax Error

78
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: please go to Bongchu, then Neris Filipino Dining, then Foothill Transit, then Carl's Jr., in that specific order without revisiting previously visited location
True Ground LTL: & & U ! neris_filipino_dining bongchu & U ! foothill_transit neris_filipino_dining & U ! carls_jr foothill_transit F carls_jr & U ! bongchu U bongchu U ! bongchu neris_filipino_dining & U ! neris_filipino_dining U neris_filipino_dining U ! neris_filipino_dining foothill_transit U ! foothill_transit U foothill_transit U ! foothill_transit carls_jr
Out Ground LTL: & & U ! neris_filipino_dining bongchu & U ! foothill_transit neris_filipino_dining & U ! carls_jr foothill_transit F carls_jr & U ! bongchu U bongchu U ! bongchu neris_filipino_dining & U ! neris_filipino_dining U neris_filipino_dining U ! neris_filipino_dining foothill_transit & U ! foothill_transit U foothill_transit U ! foothill_transit carls_jr
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d c & U ! b d & U ! a b F a & U ! c U c U ! c d & U ! d U d U ! d b & U ! b U b U ! b a
True Lmks: ('Bongchu', 'Neris Filipino Dining', 'Foothill Transit', "Carl's Jr.")
Out Lmks:["Carl's Jr.", 'Foothill Transit', 'Bongchu', 'Neris Filipino Dining']
Out Grounds: {"Carl's Jr.", 'Foothill Transit', 'Bongchu', 'Neris Filipino Dining'}
Placeholder Map: {"Carl's Jr.": 'a', 'Foothill Transit': 'b', 'Bongchu': 'c', 'Neris Filipino Dining': 'd'}
Syntax Error

79
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: please go to Carl's Jr., then Wako, then The Line, then Koko Pizza, in that specific order without revisiting previously visited location
True Ground LTL: & & U ! wako carls_jr & U ! the_line wako & U ! koko_pizza the_line F koko_pizza & U ! carls_jr U carls_jr U ! carls_jr wako & U ! wako U wako U ! wako the_line U ! the_line U the_line U ! the_line koko_pizza
Out Ground LTL: & & U ! wako carls_jr & U ! the_line wako & U ! koko_pizza the_line F koko_pizza & U ! carls_jr U carls_jr U ! carls_jr wako & U ! wako U wako U ! wako the_line & U ! the_line U the_line U ! the_line koko_pizza
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! d b & U ! c d F c & U ! a U a U ! a b & U ! b U b U ! b d & U ! d U d U ! d c
True Lmks: ("Carl's Jr.", 'Wako', 'The Line', 'Koko Pizza')
Out Lmks:["Carl's Jr.", 'Wako', 'Koko Pizza', 'The Line']
Out Grounds: {"Carl's Jr.", 'Wako', 'Koko Pizza', 'The Line'}
Placeholder Map: {"Carl's Jr.": 'a', 'Wako': 'b', 'Koko Pizza': 'c', 'The Line': 'd'}
Syntax Error

80
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Tarboosh middle East kitchen, once without visiting Bongchu, then go to Bongchu, once without visiting Mermaid Cafe, then go to Mermaid Cafe, once without visiting Seaweed, finally go to Seaweed
True Ground LTL: & & U ! bongchu tarboosh_middle_east_kitchen & U ! mermaid_cafe bongchu & U ! seaweed mermaid_cafe F seaweed & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bongchu & U ! bongchu U bongchu U ! bongchu mermaid_cafe U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe seaweed
Out Ground LTL: & & U ! bongchu tarboosh_middle_east_kitchen & U ! mermaid_cafe bongchu & U ! seaweed mermaid_cafe F seaweed & U ! tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen bongchu & U ! bongchu U bongchu U ! bongchu mermaid_cafe & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe seaweed
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d b & U ! c d & U ! a c F a & U ! b U b U ! b d & U ! d U d U ! d c & U ! c U c U ! c a
True Lmks: ('Tarboosh middle East kitchen', 'Bongchu', 'Mermaid Cafe', 'Seaweed')
Out Lmks:['Seaweed', 'Tarboosh middle East kitchen', 'Mermaid Cafe', 'Bongchu']
Out Grounds: {'Seaweed', 'Tarboosh middle East kitchen', 'Mermaid Cafe', 'Bongchu'}
Placeholder Map: {'Seaweed': 'a', 'Tarboosh middle East kitchen': 'b', 'Mermaid Cafe': 'c', 'Bongchu': 'd'}
Syntax Error

81
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Wako, once without visiting The Gaylord Apartments, then go to The Gaylord Apartments, once without visiting The Boiling Crab, then go to The Boiling Crab, once without visiting Coffee Bean & Tea Leaf, finally go to Coffee Bean & Tea Leaf
True Ground LTL: & & U ! the_gaylord_apartments wako & U ! the_boiling_crab the_gaylord_apartments & U ! coffee_bean_&_tea_leaf the_boiling_crab F coffee_bean_&_tea_leaf & U ! wako U wako U ! wako the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments the_boiling_crab U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab coffee_bean_&_tea_leaf
Out Ground LTL: & & U ! the_gaylord_apartments wako & U ! the_boiling_crab the_gaylord_apartments & U ! coffee_bean_&_tea_leaf the_boiling_crab F coffee_bean_&_tea_leaf & U ! wako U wako U ! wako the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments the_boiling_crab & U ! the_boiling_crab U the_boiling_crab U ! the_boiling_crab coffee_bean_&_tea_leaf
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c d & U ! b c & U ! a b F a & U ! d U d U ! d c & U ! c U c U ! c b & U ! b U b U ! b a
True Lmks: ('Wako', 'The Gaylord Apartments', 'The Boiling Crab', 'Coffee Bean & Tea Leaf')
Out Lmks:['Coffee Bean & Tea Leaf', 'The Boiling Crab', 'The Gaylord Apartments', 'Wako']
Out Grounds: {'Coffee Bean & Tea Leaf', 'The Boiling Crab', 'The Gaylord Apartments', 'Wako'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'The Boiling Crab': 'b', 'The Gaylord Apartments': 'c', 'Wako': 'd'}
Syntax Error

82
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Robeks Juice, once then go to Crystal Spa, once while avoiding Zan ResPub, then go to Zan ResPub, once while avoiding Mali Taste of Thailand, finally go to Mali Taste of Thailand
True Ground LTL: & & U ! crystal_spa robeks_juice & U ! zan_respub crystal_spa & U ! mali_taste_of_thailand zan_respub F mali_taste_of_thailand & U ! robeks_juice U robeks_juice U ! robeks_juice crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa zan_respub U ! zan_respub U zan_respub U ! zan_respub mali_taste_of_thailand
Out Ground LTL: & & U ! crystal_spa robeks_juice & U ! zan_respub crystal_spa & U ! mali_taste_of_thailand zan_respub F mali_taste_of_thailand & U ! robeks_juice U robeks_juice U ! robeks_juice crystal_spa & U ! crystal_spa U crystal_spa U ! crystal_spa zan_respub U ! zan_respub U zan_respub U ! zan_respub mali_taste_of_thailand
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! a c & U ! b a & U ! d b F d & U ! c U c U ! c a & U ! a U a U ! a b U ! b U b U ! b d
True Lmks: ('Robeks Juice', 'Crystal Spa', 'Zan ResPub', 'Mali Taste of Thailand')
Out Lmks:['Crystal Spa', 'Zan ResPub', 'Robeks Juice', 'Mali Taste of Thailand']
Out Grounds: {'Crystal Spa', 'Zan ResPub', 'Robeks Juice', 'Mali Taste of Thailand'}
Placeholder Map: {'Crystal Spa': 'a', 'Zan ResPub': 'b', 'Robeks Juice': 'c', 'Mali Taste of Thailand': 'd'}
True

83
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: first go to Mermaid Cafe, once then go to Robeks Juice, once while avoiding The Gaylord Apartments, then go to The Gaylord Apartments, once while avoiding Bayou Smokehouse, finally go to Bayou Smokehouse
True Ground LTL: & & U ! robeks_juice mermaid_cafe & U ! the_gaylord_apartments robeks_juice & U ! bayou_smokehouse the_gaylord_apartments F bayou_smokehouse & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments bayou_smokehouse
Out Ground LTL: & & U ! robeks_juice mermaid_cafe & U ! the_gaylord_apartments robeks_juice & U ! bayou_smokehouse the_gaylord_apartments F bayou_smokehouse & U ! mermaid_cafe U mermaid_cafe U ! mermaid_cafe robeks_juice & U ! robeks_juice U robeks_juice U ! robeks_juice the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments bayou_smokehouse
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! c b & U ! a c & U ! d a F d & U ! b U b U ! b c & U ! c U c U ! c a & U ! a U a U ! a d
True Lmks: ('Mermaid Cafe', 'Robeks Juice', 'The Gaylord Apartments', 'Bayou Smokehouse')
Out Lmks:['The Gaylord Apartments', 'Mermaid Cafe', 'Robeks Juice', 'Bayou Smokehouse']
Out Grounds: {'The Gaylord Apartments', 'Mermaid Cafe', 'Robeks Juice', 'Bayou Smokehouse'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Mermaid Cafe': 'b', 'Robeks Juice': 'c', 'Bayou Smokehouse': 'd'}
Syntax Error

84
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Crystal Spa, without visiting BBQ Premium Chicken, then go to BBQ Premium Chicken, without visiting The Gaylord Apartments, then go to The Gaylord Apartments, without visiting Togo's, finally go to Togo's, while only visiting each location once
True Ground LTL: & & U ! bbq_premium_chicken crystal_spa & U ! the_gaylord_apartments bbq_premium_chicken & U ! togos the_gaylord_apartments F togos & U ! crystal_spa U crystal_spa U ! crystal_spa bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken the_gaylord_apartments U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments togos
Out Ground LTL: & & U ! bbq_premium_chicken crystal_spa & U ! the_gaylord_apartments bbq_premium_chicken & U ! togos the_gaylord_apartments F togos & U ! crystal_spa U crystal_spa U ! crystal_spa bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken the_gaylord_apartments & U ! the_gaylord_apartments U the_gaylord_apartments U ! the_gaylord_apartments togos
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! b d & U ! c b F c & U ! a U a U ! a d & U ! d U d U ! d b & U ! b U b U ! b c
True Lmks: ('Crystal Spa', 'BBQ Premium Chicken', 'The Gaylord Apartments', "Togo's")
Out Lmks:['Crystal Spa', 'The Gaylord Apartments', "Togo's", 'BBQ Premium Chicken']
Out Grounds: {'Crystal Spa', 'The Gaylord Apartments', "Togo's", 'BBQ Premium Chicken'}
Placeholder Map: {'Crystal Spa': 'a', 'The Gaylord Apartments': 'b', "Togo's": 'c', 'BBQ Premium Chicken': 'd'}
Syntax Error

85
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: go to Zan ResPub, without visiting Consulat General of the Republic of Indonesia, then go to Consulat General of the Republic of Indonesia, without visiting Bayou Smokehouse, then go to Bayou Smokehouse, without visiting Central Plaza 1, finally go to Central Plaza 1, while only visiting each location once
True Ground LTL: & & U ! consulat_general_of_the_republic_of_indonesia zan_respub & U ! bayou_smokehouse consulat_general_of_the_republic_of_indonesia & U ! central_plaza_1 bayou_smokehouse F central_plaza_1 & U ! zan_respub U zan_respub U ! zan_respub consulat_general_of_the_republic_of_indonesia & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia bayou_smokehouse U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse central_plaza_1
Out Ground LTL: & & U ! consulat_general_of_the_republic_of_indonesia zan_respub & U ! bayou_smokehouse consulat_general_of_the_republic_of_indonesia & U ! central_plaza_1 bayou_smokehouse F central_plaza_1 & U ! zan_respub U zan_respub U ! zan_respub consulat_general_of_the_republic_of_indonesia & U ! consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse central_plaza_1
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! d b & U ! c d F c & U ! a U a U ! a b & U ! b U b U ! b d & U ! d U d U ! d c
True Lmks: ('Zan ResPub', 'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse', 'Central Plaza 1')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Zan ResPub', 'Bayou Smokehouse', 'Central Plaza 1']
Out Grounds: {'Zan ResPub', 'Consulat General of the Republic of Indonesia', 'Central Plaza 1', 'Bayou Smokehouse'}
Placeholder Map: {'Zan ResPub': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Central Plaza 1': 'c', 'Bayou Smokehouse': 'd'}
Syntax Error

86
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit The Line, then Ice Cream, then BBQ Premium Chicken, and then Etude Lounge, in that strict order without returning to previously visited locations
True Ground LTL: & & U ! ice_cream the_line & U ! bbq_premium_chicken ice_cream & U ! etude_lounge bbq_premium_chicken F etude_lounge & U ! the_line U the_line U ! the_line ice_cream & U ! ice_cream U ice_cream U ! ice_cream bbq_premium_chicken U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken etude_lounge
Out Ground LTL: & & U ! ice_cream the_line & U ! bbq_premium_chicken ice_cream & U ! etude_lounge bbq_premium_chicken F etude_lounge & U ! the_line U the_line U ! the_line ice_cream & U ! ice_cream U ice_cream U ! ice_cream bbq_premium_chicken & U ! bbq_premium_chicken U bbq_premium_chicken U ! bbq_premium_chicken etude_lounge
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c & U ! c U c U ! c d
True Lmks: ('The Line', 'Ice Cream', 'BBQ Premium Chicken', 'Etude Lounge')
Out Lmks:['Etude Lounge', 'Ice Cream', 'BBQ Premium Chicken', 'The Line']
Out Grounds: {'The Line', 'Ice Cream', 'BBQ Premium Chicken', 'Etude Lounge'}
Placeholder Map: {'The Line': 'a', 'Ice Cream': 'b', 'BBQ Premium Chicken': 'c', 'Etude Lounge': 'd'}
Syntax Error

87
strictly_ordered_visit ['a', 'b', 'c', 'd'] Input utterance: visit Carl's Jr., then The Line, then Korean BBQ, and then Equitable Life Building, in that strict order without returning to previously visited locations
True Ground LTL: & & U ! the_line carls_jr & U ! korean_bbq the_line & U ! equitable_life_building korean_bbq F equitable_life_building & U ! carls_jr U carls_jr U ! carls_jr the_line & U ! the_line U the_line U ! the_line korean_bbq U ! korean_bbq U korean_bbq U ! korean_bbq equitable_life_building
Out Ground LTL: & & U ! the_line carls_jr & U ! gwang_yang_bbq the_line & U ! equitable_life_building gwang_yang_bbq F equitable_life_building & U ! carls_jr U carls_jr U ! carls_jr the_line & U ! the_line U the_line U ! the_line gwang_yang_bbq & U ! gwang_yang_bbq U gwang_yang_bbq U ! gwang_yang_bbq equitable_life_building
True Symbolic LTL: & & U ! b a & U ! c b & U ! d c F d & U ! a U a U ! a b & U ! b U b U ! b c U ! c U c U ! c d
Out Symbolic LTL: & & U ! d a & U ! c d & U ! b c F b & U ! a U a U ! a d & U ! d U d U ! d c & U ! c U c U ! c b
True Lmks: ("Carl's Jr.", 'The Line', 'Korean BBQ', 'Equitable Life Building')
Out Lmks:["Carl's Jr.", 'Korean BBQ', 'Equitable Life Building', 'The Line']
Out Grounds: {"Carl's Jr.", 'Equitable Life Building', 'Gwang Yang BBQ', 'The Line'}
Placeholder Map: {"Carl's Jr.": 'a', 'Equitable Life Building': 'b', 'Gwang Yang BBQ': 'c', 'The Line': 'd'}
RER or Grounding Error

88
patrolling ['a', 'b', 'c', 'd'] Input utterance: never stop visiting Wako, The Line, The Boiling Crab, and Wilshire-Kenmore Building
True Ground LTL: & G F wako & G F the_line & G F the_boiling_crab G F wilshire_kenmore_building
Out Ground LTL: & G F wako & G F the_line & G F the_boiling_crab G F wilshire_kenmore_building
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F b G F a
True Lmks: ('Wako', 'The Line', 'The Boiling Crab', 'Wilshire-Kenmore Building')
Out Lmks:['Wilshire-Kenmore Building', 'The Boiling Crab', 'Wako', 'The Line']
Out Grounds: {'Wilshire-Kenmore Building', 'The Boiling Crab', 'Wako', 'The Line'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'The Boiling Crab': 'b', 'Wako': 'c', 'The Line': 'd'}
True

89
patrolling ['a', 'b', 'c', 'd'] Input utterance: never stop visiting Korean BBQ, Gwang Yang BBQ, Togo's, and Bongchu
True Ground LTL: & G F korean_bbq & G F gwang_yang_bbq & G F togos G F bongchu
Out Ground LTL: & G F gwang_yang_bbq & G F togos G F bongchu
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a G F b
True Lmks: ('Korean BBQ', 'Gwang Yang BBQ', "Togo's", 'Bongchu')
Out Lmks:['Korean BBQ', 'Bongchu', "Togo's", 'Gwang Yang BBQ']
Out Grounds: {"Togo's", 'Bongchu', 'Gwang Yang BBQ'}
Placeholder Map: {"Togo's": 'a', 'Bongchu': 'b', 'Gwang Yang BBQ': 'c'}
False

90
patrolling ['a', 'b', 'c', 'd'] Input utterance: frequent Wilshire/Normandie, Central Plaza 3, Hair News, and Tarboosh middle East kitchen, infinitely in any order
True Ground LTL: & G F wilshire_normandie & G F central_plaza_3 & G F hair_news G F tarboosh_middle_east_kitchen
Out Ground LTL: & G F wilshire_normandie & G F central_plaza_3 & G F hair_news G F tarboosh_middle_east_kitchen
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F d G F c
True Lmks: ('Wilshire/Normandie', 'Central Plaza 3', 'Hair News', 'Tarboosh middle East kitchen')
Out Lmks:['Central Plaza 3', 'Wilshire/Normandie', 'Hair News', 'Tarboosh middle East kitchen']
Out Grounds: {'Wilshire/Normandie', 'Central Plaza 3', 'Tarboosh middle East kitchen', 'Hair News'}
Placeholder Map: {'Wilshire/Normandie': 'a', 'Central Plaza 3': 'b', 'Tarboosh middle East kitchen': 'c', 'Hair News': 'd'}
True

91
patrolling ['a', 'b', 'c', 'd'] Input utterance: frequent Crystal Spa, Wilshire-Kenmore Building, Equitable Life Building, and Mermaid Cafe, infinitely in any order
True Ground LTL: & G F crystal_spa & G F wilshire_kenmore_building & G F equitable_life_building G F mermaid_cafe
Out Ground LTL: & G F crystal_spa & G F wilshire_kenmore_building & G F equitable_life_building G F mermaid_cafe
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('Crystal Spa', 'Wilshire-Kenmore Building', 'Equitable Life Building', 'Mermaid Cafe')
Out Lmks:['Wilshire-Kenmore Building', 'Crystal Spa', 'Mermaid Cafe', 'Equitable Life Building']
Out Grounds: {'Wilshire-Kenmore Building', 'Crystal Spa', 'Mermaid Cafe', 'Equitable Life Building'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Crystal Spa': 'b', 'Mermaid Cafe': 'c', 'Equitable Life Building': 'd'}
True

92
patrolling ['a', 'b', 'c', 'd'] Input utterance: please keep visiting Etude Lounge, Tarboosh middle East kitchen, Korean Bbq, and Wilshire-Kenmore Building, without stopping
True Ground LTL: & G F etude_lounge & G F tarboosh_middle_east_kitchen & G F korean_bbq G F wilshire_kenmore_building
Out Ground LTL: & G F etude_lounge & G F tarboosh_middle_east_kitchen & G F gwang_yang_bbq G F wilshire_kenmore_building
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F c G F a
True Lmks: ('Etude Lounge', 'Tarboosh middle East kitchen', 'Korean Bbq', 'Wilshire-Kenmore Building')
Out Lmks:['Wilshire-Kenmore Building', 'Tarboosh middle East kitchen', 'Korean Bbq', 'Etude Lounge']
Out Grounds: {'Wilshire-Kenmore Building', 'Tarboosh middle East kitchen', 'Gwang Yang BBQ', 'Etude Lounge'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Tarboosh middle East kitchen': 'b', 'Gwang Yang BBQ': 'c', 'Etude Lounge': 'd'}
False

93
patrolling ['a', 'b', 'c', 'd'] Input utterance: please keep visiting POT, Carl's Jr., Neris Filipino Dining, and Robeks Juice, without stopping
True Ground LTL: & G F pot & G F carls_jr & G F neris_filipino_dining G F robeks_juice
Out Ground LTL: & G F pot & G F carls_jr & G F neris_filipino_dining G F robeks_juice
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F d G F c
True Lmks: ('POT', "Carl's Jr.", 'Neris Filipino Dining', 'Robeks Juice')
Out Lmks:["Carl's Jr.", 'POT', 'Robeks Juice', 'Neris Filipino Dining']
Out Grounds: {"Carl's Jr.", 'POT', 'Robeks Juice', 'Neris Filipino Dining'}
Placeholder Map: {"Carl's Jr.": 'a', 'POT': 'b', 'Robeks Juice': 'c', 'Neris Filipino Dining': 'd'}
True

94
patrolling ['a', 'b', 'c', 'd'] Input utterance: make sure California Design College, Sun Nong Dan, Mermaid Cafe, and The Boiling Crab, are visited infinitely
True Ground LTL: & G F california_design_college & G F sun_nong_dan & G F mermaid_cafe G F the_boiling_crab
Out Ground LTL: & G F california_design_college & G F sun_nong_dan & G F mermaid_cafe G F the_boiling_crab
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F c G F b
True Lmks: ('California Design College', 'Sun Nong Dan', 'Mermaid Cafe', 'The Boiling Crab')
Out Lmks:['Sun Nong Dan', 'The Boiling Crab', 'Mermaid Cafe', 'California Design College']
Out Grounds: {'Sun Nong Dan', 'The Boiling Crab', 'Mermaid Cafe', 'California Design College'}
Placeholder Map: {'Sun Nong Dan': 'a', 'The Boiling Crab': 'b', 'Mermaid Cafe': 'c', 'California Design College': 'd'}
True

95
patrolling ['a', 'b', 'c', 'd'] Input utterance: make sure Crystal Spa, Central Plaza 1, Korean BBQ, and Carl's Jr., are visited infinitely
True Ground LTL: & G F crystal_spa & G F central_plaza_1 & G F korean_bbq G F carls_jr
Out Ground LTL: & G F crystal_spa & G F central_plaza_1 & G F gwang_yang_bbq G F carls_jr
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F d G F a
True Lmks: ('Crystal Spa', 'Central Plaza 1', 'Korean BBQ', "Carl's Jr.")
Out Lmks:["Carl's Jr.", 'Crystal Spa', 'Korean BBQ', 'Central Plaza 1']
Out Grounds: {"Carl's Jr.", 'Crystal Spa', 'Central Plaza 1', 'Gwang Yang BBQ'}
Placeholder Map: {"Carl's Jr.": 'a', 'Crystal Spa': 'b', 'Central Plaza 1': 'c', 'Gwang Yang BBQ': 'd'}
False

96
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Gwang Yang BBQ, Robeks Juice, Ice Cream, and Central Plaza 3, in any order
True Ground LTL: & G F gwang_yang_bbq & G F robeks_juice & G F ice_cream G F central_plaza_3
Out Ground LTL: & G F gwang_yang_bbq & G F robeks_juice & G F ice_cream G F central_plaza_3
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F b G F a
True Lmks: ('Gwang Yang BBQ', 'Robeks Juice', 'Ice Cream', 'Central Plaza 3')
Out Lmks:['Central Plaza 3', 'Ice Cream', 'Robeks Juice', 'Gwang Yang BBQ']
Out Grounds: {'Central Plaza 3', 'Ice Cream', 'Robeks Juice', 'Gwang Yang BBQ'}
Placeholder Map: {'Central Plaza 3': 'a', 'Ice Cream': 'b', 'Robeks Juice': 'c', 'Gwang Yang BBQ': 'd'}
True

97
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Wako, Ice Cream, POT, and Foothill Transit, in any order
True Ground LTL: & G F wako & G F ice_cream & G F pot G F foothill_transit
Out Ground LTL: & G F wako & G F ice_cream & G F pot G F foothill_transit
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b & G F d G F a
True Lmks: ('Wako', 'Ice Cream', 'POT', 'Foothill Transit')
Out Lmks:['Foothill Transit', 'Ice Cream', 'Wako', 'POT']
Out Grounds: {'Foothill Transit', 'Ice Cream', 'Wako', 'POT'}
Placeholder Map: {'Foothill Transit': 'a', 'Ice Cream': 'b', 'Wako': 'c', 'POT': 'd'}
True

98
patrolling ['a', 'b', 'c', 'd'] Input utterance: visit locations The Line, California Design College, Sun Nong Dan, and Central Plaza 1, an infinite number of times
True Ground LTL: & G F the_line & G F california_design_college & G F sun_nong_dan G F central_plaza_1
Out Ground LTL: & G F california_design_college & G F the_line & G F sun_nong_dan G F central_plaza_1
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F a G F c
True Lmks: ('The Line', 'California Design College', 'Sun Nong Dan', 'Central Plaza 1')
Out Lmks:['Sun Nong Dan', 'Central Plaza 1', 'California Design College', 'The Line']
Out Grounds: {'Sun Nong Dan', 'The Line', 'Central Plaza 1', 'California Design College'}
Placeholder Map: {'Sun Nong Dan': 'a', 'The Line': 'b', 'Central Plaza 1': 'c', 'California Design College': 'd'}
True

99
patrolling ['a', 'b', 'c', 'd'] Input utterance: visit locations Wilshire-Kenmore Building, BBQ Premium Chicken, Korean Bbq, and Wilshire/Normandie, an infinite number of times
True Ground LTL: & G F wilshire_kenmore_building & G F bbq_premium_chicken & G F korean_bbq G F wilshire_normandie
Out Ground LTL: & G F gwang_yang_bbq & G F wilshire_kenmore_building & G F bbq_premium_chicken G F wilshire_normandie
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F c G F b
True Lmks: ('Wilshire-Kenmore Building', 'BBQ Premium Chicken', 'Korean Bbq', 'Wilshire/Normandie')
Out Lmks:['Wilshire-Kenmore Building', 'Wilshire/Normandie', 'BBQ Premium Chicken', 'Korean Bbq']
Out Grounds: {'Wilshire-Kenmore Building', 'Wilshire/Normandie', 'BBQ Premium Chicken', 'Gwang Yang BBQ'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Wilshire/Normandie': 'b', 'BBQ Premium Chicken': 'c', 'Gwang Yang BBQ': 'd'}
False

100
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting The Line, Korean Bbq, Wilshire-Kenmore Building, and Togo's
True Ground LTL: & G F the_line & G F korean_bbq & G F wilshire_kenmore_building G F togos
Out Ground LTL: & G F gwang_yang_bbq & G F wilshire_kenmore_building & G F togos G F the_line
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F b G F d
True Lmks: ('The Line', 'Korean Bbq', 'Wilshire-Kenmore Building', "Togo's")
Out Lmks:['Wilshire-Kenmore Building', "Togo's", 'Korean Bbq', 'The Line']
Out Grounds: {'Wilshire-Kenmore Building', "Togo's", 'Gwang Yang BBQ', 'The Line'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', "Togo's": 'b', 'Gwang Yang BBQ': 'c', 'The Line': 'd'}
False

101
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Carl's Jr., Etude Lounge, Coffee Bean & Tea Leaf, and Crystal Spa
True Ground LTL: & G F carls_jr & G F etude_lounge & G F coffee_bean_&_tea_leaf G F crystal_spa
Out Ground LTL: & G F etude_lounge & G F coffee_bean_&_tea_leaf & G F crystal_spa G F carls_jr
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F c G F a
True Lmks: ("Carl's Jr.", 'Etude Lounge', 'Coffee Bean & Tea Leaf', 'Crystal Spa')
Out Lmks:["Carl's Jr.", 'Coffee Bean & Tea Leaf', 'Crystal Spa', 'Etude Lounge']
Out Grounds: {"Carl's Jr.", 'Coffee Bean & Tea Leaf', 'Crystal Spa', 'Etude Lounge'}
Placeholder Map: {"Carl's Jr.": 'a', 'Coffee Bean & Tea Leaf': 'b', 'Crystal Spa': 'c', 'Etude Lounge': 'd'}
True

102
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Big 5 Sporting Goods, Etude Lounge, POT, and Central Plaza 1
True Ground LTL: & G F big_5_sporting_goods & G F etude_lounge & G F pot G F central_plaza_1
Out Ground LTL: & G F central_plaza_1 & G F pot & G F etude_lounge G F big_5_sporting_goods
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ('Big 5 Sporting Goods', 'Etude Lounge', 'POT', 'Central Plaza 1')
Out Lmks:['POT', 'Big 5 Sporting Goods', 'Central Plaza 1', 'Etude Lounge']
Out Grounds: {'POT', 'Big 5 Sporting Goods', 'Central Plaza 1', 'Etude Lounge'}
Placeholder Map: {'POT': 'a', 'Big 5 Sporting Goods': 'b', 'Central Plaza 1': 'c', 'Etude Lounge': 'd'}
True

103
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Home Cafe, Big 5 Sporting Goods, Mermaid Cafe, and Carl's Jr.
True Ground LTL: & G F home_cafe & G F big_5_sporting_goods & G F mermaid_cafe G F carls_jr
Out Ground LTL: & G F carls_jr & G F mermaid_cafe & G F big_5_sporting_goods G F home_cafe
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ('Home Cafe', 'Big 5 Sporting Goods', 'Mermaid Cafe', "Carl's Jr.")
Out Lmks:["Carl's Jr.", 'Mermaid Cafe', 'Big 5 Sporting Goods', 'Home Cafe']
Out Grounds: {"Carl's Jr.", 'Mermaid Cafe', 'Big 5 Sporting Goods', 'Home Cafe'}
Placeholder Map: {"Carl's Jr.": 'a', 'Mermaid Cafe': 'b', 'Big 5 Sporting Goods': 'c', 'Home Cafe': 'd'}
True

104
patrolling ['a', 'b', 'c', 'd'] Input utterance: go to Details, California Design College, Robeks Juice, and Zan ResPub, over and over again
True Ground LTL: & G F details & G F california_design_college & G F robeks_juice G F zan_respub
Out Ground LTL: & G F details & G F california_design_college & G F robeks_juice G F zan_respub
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F c G F b
True Lmks: ('Details', 'California Design College', 'Robeks Juice', 'Zan ResPub')
Out Lmks:['Details', 'Zan ResPub', 'Robeks Juice', 'California Design College']
Out Grounds: {'Details', 'Zan ResPub', 'Robeks Juice', 'California Design College'}
Placeholder Map: {'Details': 'a', 'Zan ResPub': 'b', 'Robeks Juice': 'c', 'California Design College': 'd'}
True

105
patrolling ['a', 'b', 'c', 'd'] Input utterance: go to California Design College, Wako, Robeks Juice, and Korean BBQ, over and over again
True Ground LTL: & G F california_design_college & G F wako & G F robeks_juice G F korean_bbq
Out Ground LTL: & G F california_design_college & G F wako & G F robeks_juice G F gwang_yang_bbq
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b G F c
True Lmks: ('California Design College', 'Wako', 'Robeks Juice', 'Korean BBQ')
Out Lmks:['Korean BBQ', 'Robeks Juice', 'Wako', 'California Design College']
Out Grounds: {'Wako', 'Robeks Juice', 'Gwang Yang BBQ', 'California Design College'}
Placeholder Map: {'Wako': 'a', 'Robeks Juice': 'b', 'Gwang Yang BBQ': 'c', 'California Design College': 'd'}
False

106
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue to stop at Big 5 Sporting Goods, Wako, Neris Filipino Dining, and Etude Lounge
True Ground LTL: & G F big_5_sporting_goods & G F wako & G F neris_filipino_dining G F etude_lounge
Out Ground LTL: & G F big_5_sporting_goods & G F wako & G F neris_filipino_dining G F etude_lounge
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F d G F b
True Lmks: ('Big 5 Sporting Goods', 'Wako', 'Neris Filipino Dining', 'Etude Lounge')
Out Lmks:['Etude Lounge', 'Neris Filipino Dining', 'Big 5 Sporting Goods', 'Wako']
Out Grounds: {'Wako', 'Etude Lounge', 'Big 5 Sporting Goods', 'Neris Filipino Dining'}
Placeholder Map: {'Wako': 'a', 'Etude Lounge': 'b', 'Big 5 Sporting Goods': 'c', 'Neris Filipino Dining': 'd'}
True

107
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue to stop at Koko Pizza, Etude Lounge, Equitable Life Building, and Ice Cream
True Ground LTL: & G F koko_pizza & G F etude_lounge & G F equitable_life_building G F ice_cream
Out Ground LTL: & G F koko_pizza & G F etude_lounge & G F equitable_life_building G F ice_cream
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F b G F a
True Lmks: ('Koko Pizza', 'Etude Lounge', 'Equitable Life Building', 'Ice Cream')
Out Lmks:['Ice Cream', 'Equitable Life Building', 'Koko Pizza', 'Etude Lounge']
Out Grounds: {'Ice Cream', 'Equitable Life Building', 'Koko Pizza', 'Etude Lounge'}
Placeholder Map: {'Ice Cream': 'a', 'Equitable Life Building': 'b', 'Koko Pizza': 'c', 'Etude Lounge': 'd'}
True

108
patrolling ['a', 'b', 'c', 'd'] Input utterance: continuously visit Wilshire-Kenmore Building, Sun Nong Dan, Neris Filipino Dining, and Tarboosh middle East kitchen
True Ground LTL: & G F wilshire_kenmore_building & G F sun_nong_dan & G F neris_filipino_dining G F tarboosh_middle_east_kitchen
Out Ground LTL: & G F wilshire_kenmore_building & G F sun_nong_dan & G F neris_filipino_dining G F tarboosh_middle_east_kitchen
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F d G F c
True Lmks: ('Wilshire-Kenmore Building', 'Sun Nong Dan', 'Neris Filipino Dining', 'Tarboosh middle East kitchen')
Out Lmks:['Wilshire-Kenmore Building', 'Sun Nong Dan', 'Tarboosh middle East kitchen', 'Neris Filipino Dining']
Out Grounds: {'Wilshire-Kenmore Building', 'Sun Nong Dan', 'Tarboosh middle East kitchen', 'Neris Filipino Dining'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Sun Nong Dan': 'b', 'Tarboosh middle East kitchen': 'c', 'Neris Filipino Dining': 'd'}
True

109
patrolling ['a', 'b', 'c', 'd'] Input utterance: continuously visit Home Cafe, Robeks Juice, Coffee Bean & Tea Leaf, and BBQ Premium Chicken
True Ground LTL: & G F home_cafe & G F robeks_juice & G F coffee_bean_&_tea_leaf G F bbq_premium_chicken
Out Ground LTL: & G F home_cafe & G F robeks_juice & G F coffee_bean_&_tea_leaf G F bbq_premium_chicken
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F a G F c
True Lmks: ('Home Cafe', 'Robeks Juice', 'Coffee Bean & Tea Leaf', 'BBQ Premium Chicken')
Out Lmks:['Coffee Bean & Tea Leaf', 'Robeks Juice', 'BBQ Premium Chicken', 'Home Cafe']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Robeks Juice', 'BBQ Premium Chicken', 'Home Cafe'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Robeks Juice': 'b', 'BBQ Premium Chicken': 'c', 'Home Cafe': 'd'}
True

110
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not go to Equitable Life Building, Etude Lounge, Central Plaza 3, and Tarboosh middle East kitchen, Etude Lounge, finite number of times
True Ground LTL: & G F etude_lounge & G F tarboosh_middle_east_kitchen & G F equitable_life_building G F central_plaza_3
Out Ground LTL: & & U ! etude_lounge equitable_life_building & U ! central_plaza_3 etude_lounge & U ! tarboosh_middle_east_kitchen central_plaza_3 F tarboosh_middle_east_kitchen & U ! equitable_life_building U equitable_life_building U ! equitable_life_building etude_lounge & U ! etude_lounge U etude_lounge U ! etude_lounge central_plaza_3 & U ! central_plaza_3 U central_plaza_3 U ! central_plaza_3 tarboosh_middle_east_kitchen
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & & U ! d c & U ! a d & U ! b a F b & U ! c U c U ! c d & U ! d U d U ! d a & U ! a U a U ! a b
True Lmks: ('Etude Lounge', 'Tarboosh middle East kitchen', 'Equitable Life Building', 'Central Plaza 3')
Out Lmks:['Central Plaza 3', 'Tarboosh middle East kitchen', 'Equitable Life Building', 'Etude Lounge']
Out Grounds: {'Central Plaza 3', 'Tarboosh middle East kitchen', 'Equitable Life Building', 'Etude Lounge'}
Placeholder Map: {'Central Plaza 3': 'a', 'Tarboosh middle East kitchen': 'b', 'Equitable Life Building': 'c', 'Etude Lounge': 'd'}
Syntax Error

111
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not go to Details, Central Plaza 3, Bayou Smokehouse, and Sun Nong Dan, Central Plaza 3, finite number of times
True Ground LTL: & G F central_plaza_3 & G F sun_nong_dan & G F details G F bayou_smokehouse
Out Ground LTL: & & U ! central_plaza_3 details & U ! bayou_smokehouse central_plaza_3 & U ! sun_nong_dan bayou_smokehouse F sun_nong_dan & U ! details U details U ! details central_plaza_3 & U ! central_plaza_3 U central_plaza_3 U ! central_plaza_3 bayou_smokehouse & U ! bayou_smokehouse U bayou_smokehouse U ! bayou_smokehouse sun_nong_dan
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & & U ! b a & U ! d b & U ! c d F c & U ! a U a U ! a b & U ! b U b U ! b d & U ! d U d U ! d c
True Lmks: ('Central Plaza 3', 'Sun Nong Dan', 'Details', 'Bayou Smokehouse')
Out Lmks:['Details', 'Central Plaza 3', 'Sun Nong Dan', 'Bayou Smokehouse']
Out Grounds: {'Details', 'Central Plaza 3', 'Sun Nong Dan', 'Bayou Smokehouse'}
Placeholder Map: {'Details': 'a', 'Central Plaza 3': 'b', 'Sun Nong Dan': 'c', 'Bayou Smokehouse': 'd'}
Syntax Error

112
patrolling ['a', 'b', 'c', 'd'] Input utterance: perpetually travel to Bongchu, Wako, and Seaweed
True Ground LTL: & G F seaweed & G F bongchu & G F wako G F pot
Out Ground LTL: & G F bongchu & G F wako G F seaweed
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c G F a
True Lmks: ('Seaweed', 'Bongchu', 'Wako', 'POT')
Out Lmks:['Seaweed', 'Bongchu', 'Wako']
Out Grounds: {'Seaweed', 'Bongchu', 'Wako'}
Placeholder Map: {'Seaweed': 'a', 'Bongchu': 'b', 'Wako': 'c'}
False

113
patrolling ['a', 'b', 'c', 'd'] Input utterance: perpetually travel to Tarboosh middle East kitchen, Big 5 Sporting Goods, and Home Cafe
True Ground LTL: & G F home_cafe & G F tarboosh_middle_east_kitchen & G F big_5_sporting_goods G F wilshire_normandie
Out Ground LTL: & G F tarboosh_middle_east_kitchen & G F big_5_sporting_goods G F home_cafe
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b G F c
True Lmks: ('Home Cafe', 'Tarboosh middle East kitchen', 'Big 5 Sporting Goods', 'Wilshire/Normandie')
Out Lmks:['Tarboosh middle East kitchen', 'Big 5 Sporting Goods', 'Home Cafe']
Out Grounds: {'Tarboosh middle East kitchen', 'Big 5 Sporting Goods', 'Home Cafe'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Big 5 Sporting Goods': 'b', 'Home Cafe': 'c'}
False

114
patrolling ['a', 'b', 'c', 'd'] Input utterance: explore Korean Bbq, Hair News, and Details, endlessy
True Ground LTL: & G F hair_news & G F korean_bbq & G F details G F big_5_sporting_goods
Out Ground LTL: & G F hair_news & G F gwang_yang_bbq G F details
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c G F a
True Lmks: ('Hair News', 'Korean Bbq', 'Details', 'Big 5 Sporting Goods')
Out Lmks:['Details', 'Hair News', 'Korean Bbq']
Out Grounds: {'Details', 'Hair News', 'Gwang Yang BBQ'}
Placeholder Map: {'Details': 'a', 'Hair News': 'b', 'Gwang Yang BBQ': 'c'}
False

115
patrolling ['a', 'b', 'c', 'd'] Input utterance: explore Hair News, The Line, and Ice Cream, endlessy
True Ground LTL: & G F the_line & G F hair_news & G F ice_cream G F coffee_bean_&_tea_leaf
Out Ground LTL: & G F the_line & G F hair_news G F ice_cream
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a G F b
True Lmks: ('The Line', 'Hair News', 'Ice Cream', 'Coffee Bean & Tea Leaf')
Out Lmks:['Hair News', 'Ice Cream', 'The Line']
Out Grounds: {'Hair News', 'Ice Cream', 'The Line'}
Placeholder Map: {'Hair News': 'a', 'Ice Cream': 'b', 'The Line': 'c'}
RER or Grounding Error

116
patrolling ['a', 'b', 'c', 'd'] Input utterance: you are prohibited from not infinitely going to Korean Bbq, Tarboosh middle East kitchen, Bongchu, and Home Cafe
True Ground LTL: & G F bongchu & G F home_cafe & G F tarboosh_middle_east_kitchen G F korean_bbq
Out Ground LTL: & G F gwang_yang_bbq & G F tarboosh_middle_east_kitchen & G F bongchu G F home_cafe
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F b G F d
True Lmks: ('Bongchu', 'Home Cafe', 'Tarboosh middle East kitchen', 'Korean Bbq')
Out Lmks:['Tarboosh middle East kitchen', 'Bongchu', 'Korean Bbq', 'Home Cafe']
Out Grounds: {'Tarboosh middle East kitchen', 'Bongchu', 'Gwang Yang BBQ', 'Home Cafe'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Bongchu': 'b', 'Gwang Yang BBQ': 'c', 'Home Cafe': 'd'}
False

117
patrolling ['a', 'b', 'c', 'd'] Input utterance: you are prohibited from not infinitely going to Zan ResPub, Consulat General of the Republic of Indonesia, Ice Cream, and Wilshire/Normandie
True Ground LTL: & G F ice_cream & G F wilshire_normandie & G F consulat_general_of_the_republic_of_indonesia G F zan_respub
Out Ground LTL: & G F wilshire_normandie & G F ice_cream & G F consulat_general_of_the_republic_of_indonesia G F zan_respub
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Ice Cream', 'Wilshire/Normandie', 'Consulat General of the Republic of Indonesia', 'Zan ResPub')
Out Lmks:['Ice Cream', 'Wilshire/Normandie', 'Consulat General of the Republic of Indonesia', 'Zan ResPub']
Out Grounds: {'Ice Cream', 'Wilshire/Normandie', 'Consulat General of the Republic of Indonesia', 'Zan ResPub'}
Placeholder Map: {'Ice Cream': 'a', 'Wilshire/Normandie': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Zan ResPub': 'd'}
True

118
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Wilshire-Kenmore Building, Coffee Bean & Tea Leaf, Crystal Spa, and Happy Noodle, in no specific order
True Ground LTL: & G F wilshire_kenmore_building & G F coffee_bean_&_tea_leaf & G F crystal_spa G F happy_noodle
Out Ground LTL: & G F wilshire_kenmore_building & G F coffee_bean_&_tea_leaf & G F crystal_spa G F happy_noodle
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F c G F d
True Lmks: ('Wilshire-Kenmore Building', 'Coffee Bean & Tea Leaf', 'Crystal Spa', 'Happy Noodle')
Out Lmks:['Wilshire-Kenmore Building', 'Coffee Bean & Tea Leaf', 'Crystal Spa', 'Happy Noodle']
Out Grounds: {'Wilshire-Kenmore Building', 'Coffee Bean & Tea Leaf', 'Crystal Spa', 'Happy Noodle'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Crystal Spa': 'c', 'Happy Noodle': 'd'}
True

119
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Tarboosh middle East kitchen, Foothill Transit, Robeks Juice, and Happy Noodle, in no specific order
True Ground LTL: & G F tarboosh_middle_east_kitchen & G F foothill_transit & G F robeks_juice G F happy_noodle
Out Ground LTL: & G F tarboosh_middle_east_kitchen & G F foothill_transit & G F robeks_juice G F happy_noodle
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F b & G F d G F a
True Lmks: ('Tarboosh middle East kitchen', 'Foothill Transit', 'Robeks Juice', 'Happy Noodle')
Out Lmks:['Happy Noodle', 'Foothill Transit', 'Tarboosh middle East kitchen', 'Robeks Juice']
Out Grounds: {'Happy Noodle', 'Foothill Transit', 'Tarboosh middle East kitchen', 'Robeks Juice'}
Placeholder Map: {'Happy Noodle': 'a', 'Foothill Transit': 'b', 'Tarboosh middle East kitchen': 'c', 'Robeks Juice': 'd'}
True

120
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to The Line, Consulat General of the Republic of Indonesia, Tarboosh middle East kitchen, and Seaweed, in any order
True Ground LTL: & G F the_line & G F consulat_general_of_the_republic_of_indonesia & G F tarboosh_middle_east_kitchen G F seaweed
Out Ground LTL: & G F the_line & G F consulat_general_of_the_republic_of_indonesia & G F tarboosh_middle_east_kitchen G F seaweed
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F c & G F b G F a
True Lmks: ('The Line', 'Consulat General of the Republic of Indonesia', 'Tarboosh middle East kitchen', 'Seaweed')
Out Lmks:['Seaweed', 'Tarboosh middle East kitchen', 'Consulat General of the Republic of Indonesia', 'The Line']
Out Grounds: {'Seaweed', 'Tarboosh middle East kitchen', 'Consulat General of the Republic of Indonesia', 'The Line'}
Placeholder Map: {'Seaweed': 'a', 'Tarboosh middle East kitchen': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'The Line': 'd'}
True

121
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Metro, Mali Taste of Thailand, Foothill Transit, and Wilshire/Normandie, in any order
True Ground LTL: & G F metro & G F mali_taste_of_thailand & G F foothill_transit G F wilshire_normandie
Out Ground LTL: & G F metro & G F mali_taste_of_thailand & G F foothill_transit G F wilshire_normandie
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F d & G F b G F c
True Lmks: ('Metro', 'Mali Taste of Thailand', 'Foothill Transit', 'Wilshire/Normandie')
Out Lmks:['Metro', 'Foothill Transit', 'Mali Taste of Thailand', 'Wilshire/Normandie']
Out Grounds: {'Metro', 'Foothill Transit', 'Wilshire/Normandie', 'Mali Taste of Thailand'}
Placeholder Map: {'Metro': 'a', 'Foothill Transit': 'b', 'Wilshire/Normandie': 'c', 'Mali Taste of Thailand': 'd'}
True

122
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Ice Cream, Korean Bbq, Carl's Jr., and Mali Taste of Thailand, in any order infinitely
True Ground LTL: & G F ice_cream & G F korean_bbq & G F carls_jr G F mali_taste_of_thailand
Out Ground LTL: & G F ice_cream & G F gwang_yang_bbq & G F carls_jr G F mali_taste_of_thailand
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('Ice Cream', 'Korean Bbq', "Carl's Jr.", 'Mali Taste of Thailand')
Out Lmks:["Carl's Jr.", 'Ice Cream', 'Mali Taste of Thailand', 'Korean Bbq']
Out Grounds: {"Carl's Jr.", 'Ice Cream', 'Mali Taste of Thailand', 'Gwang Yang BBQ'}
Placeholder Map: {"Carl's Jr.": 'a', 'Ice Cream': 'b', 'Mali Taste of Thailand': 'c', 'Gwang Yang BBQ': 'd'}
False

123
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting The Boiling Crab, POT, Central Plaza 3, and Korean Bbq, in any order infinitely
True Ground LTL: & G F the_boiling_crab & G F pot & G F central_plaza_3 G F korean_bbq
Out Ground LTL: & G F the_boiling_crab & G F pot & G F central_plaza_3 G F gwang_yang_bbq
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F a G F d
True Lmks: ('The Boiling Crab', 'POT', 'Central Plaza 3', 'Korean Bbq')
Out Lmks:['Central Plaza 3', 'The Boiling Crab', 'POT', 'Korean Bbq']
Out Grounds: {'Central Plaza 3', 'The Boiling Crab', 'POT', 'Gwang Yang BBQ'}
Placeholder Map: {'Central Plaza 3': 'a', 'The Boiling Crab': 'b', 'POT': 'c', 'Gwang Yang BBQ': 'd'}
False

124
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Korean BBQ, POT, Gwang Yang BBQ, and Robeks Juice, in no specific order
True Ground LTL: & G F korean_bbq & G F pot & G F gwang_yang_bbq G F robeks_juice
Out Ground LTL: & G F gwang_yang_bbq & G F pot & G F gwang_yang_bbq & G F robeks_juice G F h
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F a & G F c & G F b G F h
True Lmks: ('Korean BBQ', 'POT', 'Gwang Yang BBQ', 'Robeks Juice')
Out Lmks:['Korean BBQ', 'POT', 'Robeks Juice', 'Gwang Yang BBQ']
Out Grounds: {'POT', 'Robeks Juice', 'Gwang Yang BBQ'}
Placeholder Map: {'POT': 'a', 'Robeks Juice': 'b', 'Gwang Yang BBQ': 'c'}
False

125
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Zan ResPub, Sun Nong Dan, Foothill Transit, and POT, in no specific order
True Ground LTL: & G F zan_respub & G F sun_nong_dan & G F foothill_transit G F pot
Out Ground LTL: & G F zan_respub & G F sun_nong_dan & G F foothill_transit G F pot
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b G F c
True Lmks: ('Zan ResPub', 'Sun Nong Dan', 'Foothill Transit', 'POT')
Out Lmks:['Sun Nong Dan', 'Foothill Transit', 'POT', 'Zan ResPub']
Out Grounds: {'Sun Nong Dan', 'Foothill Transit', 'POT', 'Zan ResPub'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Foothill Transit': 'b', 'POT': 'c', 'Zan ResPub': 'd'}
True

126
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop going to Happy Noodle, Carl's Jr., Zan ResPub, and Wilshire/Normandie, in any order
True Ground LTL: & G F happy_noodle & G F carls_jr & G F zan_respub G F wilshire_normandie
Out Ground LTL: & G F happy_noodle & G F carls_jr & G F zan_respub G F wilshire_normandie
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F a & G F b & G F d G F c
True Lmks: ('Happy Noodle', "Carl's Jr.", 'Zan ResPub', 'Wilshire/Normandie')
Out Lmks:['Happy Noodle', "Carl's Jr.", 'Zan ResPub', 'Wilshire/Normandie']
Out Grounds: {'Happy Noodle', "Carl's Jr.", 'Wilshire/Normandie', 'Zan ResPub'}
Placeholder Map: {'Happy Noodle': 'a', "Carl's Jr.": 'b', 'Wilshire/Normandie': 'c', 'Zan ResPub': 'd'}
True

127
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop going to Happy Noodle, Wilshire-Kenmore Building, Ice Cream, and Details, in any order
True Ground LTL: & G F happy_noodle & G F wilshire_kenmore_building & G F ice_cream G F details
Out Ground LTL: & G F happy_noodle & G F wilshire_kenmore_building & G F ice_cream G F details
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F c G F b
True Lmks: ('Happy Noodle', 'Wilshire-Kenmore Building', 'Ice Cream', 'Details')
Out Lmks:['Happy Noodle', 'Details', 'Ice Cream', 'Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building', 'Details', 'Ice Cream', 'Happy Noodle'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Details': 'b', 'Ice Cream': 'c', 'Happy Noodle': 'd'}
True

128
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Togo's, Bongchu, Equitable Life Building, and Crystal Spa, an infinite number of times
True Ground LTL: & G F togos & G F bongchu & G F equitable_life_building G F crystal_spa
Out Ground LTL: & G F togos & G F bongchu & G F equitable_life_building G F crystal_spa
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F c G F a
True Lmks: ("Togo's", 'Bongchu', 'Equitable Life Building', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'Equitable Life Building', 'Bongchu', "Togo's"]
Out Grounds: {'Crystal Spa', "Togo's", 'Equitable Life Building', 'Bongchu'}
Placeholder Map: {'Crystal Spa': 'a', "Togo's": 'b', 'Equitable Life Building': 'c', 'Bongchu': 'd'}
True

129
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep going to Mermaid Cafe, Details, POT, and Koko Pizza, an infinite number of times
True Ground LTL: & G F mermaid_cafe & G F details & G F pot G F koko_pizza
Out Ground LTL: & G F mermaid_cafe & G F details & G F pot G F koko_pizza
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F a & G F c G F d
True Lmks: ('Mermaid Cafe', 'Details', 'POT', 'Koko Pizza')
Out Lmks:['Details', 'Mermaid Cafe', 'POT', 'Koko Pizza']
Out Grounds: {'Details', 'Mermaid Cafe', 'POT', 'Koko Pizza'}
Placeholder Map: {'Details': 'a', 'Mermaid Cafe': 'b', 'POT': 'c', 'Koko Pizza': 'd'}
True

130
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Big 5 Sporting Goods, BBQ Premium Chicken, Hair News, and Crystal Spa, an infinite number of times
True Ground LTL: & G F big_5_sporting_goods & G F bbq_premium_chicken & G F hair_news G F crystal_spa
Out Ground LTL: & G F big_5_sporting_goods & G F bbq_premium_chicken & G F hair_news G F crystal_spa
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F c & G F d & G F b G F a
True Lmks: ('Big 5 Sporting Goods', 'BBQ Premium Chicken', 'Hair News', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'Hair News', 'Big 5 Sporting Goods', 'BBQ Premium Chicken']
Out Grounds: {'Crystal Spa', 'Hair News', 'Big 5 Sporting Goods', 'BBQ Premium Chicken'}
Placeholder Map: {'Crystal Spa': 'a', 'Hair News': 'b', 'Big 5 Sporting Goods': 'c', 'BBQ Premium Chicken': 'd'}
True

131
patrolling ['a', 'b', 'c', 'd'] Input utterance: keep visiting Details, POT, Bayou Smokehouse, and Happy Noodle, an infinite number of times
True Ground LTL: & G F details & G F pot & G F bayou_smokehouse G F happy_noodle
Out Ground LTL: & G F details & G F pot & G F bayou_smokehouse G F happy_noodle
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F d G F a
True Lmks: ('Details', 'POT', 'Bayou Smokehouse', 'Happy Noodle')
Out Lmks:['Details', 'POT', 'Bayou Smokehouse', 'Happy Noodle']
Out Grounds: {'Happy Noodle', 'Details', 'POT', 'Bayou Smokehouse'}
Placeholder Map: {'Happy Noodle': 'a', 'Details': 'b', 'POT': 'c', 'Bayou Smokehouse': 'd'}
True

132
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue visiting Tarboosh middle East kitchen, Koko Pizza, Coffee Bean & Tea Leaf, and Zan ResPub, an infinite number of times
True Ground LTL: & G F tarboosh_middle_east_kitchen & G F koko_pizza & G F coffee_bean_&_tea_leaf G F zan_respub
Out Ground LTL: & G F tarboosh_middle_east_kitchen & G F koko_pizza & G F coffee_bean_&_tea_leaf G F zan_respub
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F d & G F a G F c
True Lmks: ('Tarboosh middle East kitchen', 'Koko Pizza', 'Coffee Bean & Tea Leaf', 'Zan ResPub')
Out Lmks:['Coffee Bean & Tea Leaf', 'Zan ResPub', 'Tarboosh middle East kitchen', 'Koko Pizza']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Tarboosh middle East kitchen', 'Zan ResPub', 'Koko Pizza'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Tarboosh middle East kitchen': 'b', 'Zan ResPub': 'c', 'Koko Pizza': 'd'}
True

133
patrolling ['a', 'b', 'c', 'd'] Input utterance: continue visiting Consulat General of the Republic of Indonesia, Crystal Spa, Neris Filipino Dining, and Sun Nong Dan, an infinite number of times
True Ground LTL: & G F consulat_general_of_the_republic_of_indonesia & G F crystal_spa & G F neris_filipino_dining G F sun_nong_dan
Out Ground LTL: & G F consulat_general_of_the_republic_of_indonesia & G F crystal_spa & G F neris_filipino_dining G F sun_nong_dan
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F b & G F c & G F d G F a
True Lmks: ('Consulat General of the Republic of Indonesia', 'Crystal Spa', 'Neris Filipino Dining', 'Sun Nong Dan')
Out Lmks:['Crystal Spa', 'Consulat General of the Republic of Indonesia', 'Sun Nong Dan', 'Neris Filipino Dining']
Out Grounds: {'Sun Nong Dan', 'Consulat General of the Republic of Indonesia', 'Crystal Spa', 'Neris Filipino Dining'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Crystal Spa': 'c', 'Neris Filipino Dining': 'd'}
True

134
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting BBQ Premium Chicken, Ice Cream, Details, and Koko Pizza
True Ground LTL: & G F bbq_premium_chicken & G F ice_cream & G F details G F koko_pizza
Out Ground LTL: & G F bbq_premium_chicken & G F ice_cream & G F details G F koko_pizza
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F b & G F a G F c
True Lmks: ('BBQ Premium Chicken', 'Ice Cream', 'Details', 'Koko Pizza')
Out Lmks:['Details', 'Ice Cream', 'Koko Pizza', 'BBQ Premium Chicken']
Out Grounds: {'Details', 'Ice Cream', 'Koko Pizza', 'BBQ Premium Chicken'}
Placeholder Map: {'Details': 'a', 'Ice Cream': 'b', 'Koko Pizza': 'c', 'BBQ Premium Chicken': 'd'}
True

135
patrolling ['a', 'b', 'c', 'd'] Input utterance: do not stop visiting Big 5 Sporting Goods, Metro, Crystal Spa, and Consulat General of the Republic of Indonesia
True Ground LTL: & G F big_5_sporting_goods & G F metro & G F crystal_spa G F consulat_general_of_the_republic_of_indonesia
Out Ground LTL: & G F big_5_sporting_goods & G F metro & G F crystal_spa G F consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: & G F a & G F b & G F c G F d
Out Symbolic LTL: & G F d & G F a & G F b G F c
True Lmks: ('Big 5 Sporting Goods', 'Metro', 'Crystal Spa', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Metro', 'Crystal Spa', 'Consulat General of the Republic of Indonesia', 'Big 5 Sporting Goods']
Out Grounds: {'Metro', 'Crystal Spa', 'Consulat General of the Republic of Indonesia', 'Big 5 Sporting Goods'}
Placeholder Map: {'Metro': 'a', 'Crystal Spa': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Big 5 Sporting Goods': 'd'}
True

136
global_avoidance ['a', 'b', 'c'] Input utterance: never go to Tarboosh middle East kitchen, Ice Cream, or BBQ Premium Chicken
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! ice_cream G ! bbq_premium_chicken
Out Ground LTL: & G ! ice_cream & G ! tarboosh_middle_east_kitchen G ! bbq_premium_chicken
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Tarboosh middle East kitchen', 'Ice Cream', 'BBQ Premium Chicken')
Out Lmks:['Tarboosh middle East kitchen', 'Ice Cream', 'BBQ Premium Chicken']
Out Grounds: {'Tarboosh middle East kitchen', 'Ice Cream', 'BBQ Premium Chicken'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Ice Cream': 'b', 'BBQ Premium Chicken': 'c'}
True

137
global_avoidance ['a', 'b', 'c'] Input utterance: never go to Zan ResPub, Korean Bbq, or Metro
True Ground LTL: & G ! zan_respub & G ! korean_bbq G ! metro
Out Ground LTL: & G ! gwang_yang_bbq & G ! zan_respub G ! metro
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Zan ResPub', 'Korean Bbq', 'Metro')
Out Lmks:['Metro', 'Zan ResPub', 'Korean Bbq']
Out Grounds: {'Metro', 'Zan ResPub', 'Gwang Yang BBQ'}
Placeholder Map: {'Metro': 'a', 'Zan ResPub': 'b', 'Gwang Yang BBQ': 'c'}
False

138
global_avoidance ['a', 'b', 'c'] Input utterance: you can never visit Mali Taste of Thailand, Ice Cream, or Coffee Bean & Tea Leaf
True Ground LTL: & G ! mali_taste_of_thailand & G ! ice_cream G ! coffee_bean_&_tea_leaf
Out Ground LTL: & G ! mali_taste_of_thailand & G ! ice_cream G ! coffee_bean_&_tea_leaf
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Mali Taste of Thailand', 'Ice Cream', 'Coffee Bean & Tea Leaf')
Out Lmks:['Coffee Bean & Tea Leaf', 'Ice Cream', 'Mali Taste of Thailand']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Ice Cream', 'Mali Taste of Thailand'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Ice Cream': 'b', 'Mali Taste of Thailand': 'c'}
True

139
global_avoidance ['a', 'b', 'c'] Input utterance: you can never visit Foothill Transit, The Gaylord Apartments, or Metro
True Ground LTL: & G ! foothill_transit & G ! the_gaylord_apartments G ! metro
Out Ground LTL: & G ! foothill_transit & G ! the_gaylord_apartments G ! metro
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Foothill Transit', 'The Gaylord Apartments', 'Metro')
Out Lmks:['Metro', 'The Gaylord Apartments', 'Foothill Transit']
Out Grounds: {'Metro', 'Foothill Transit', 'The Gaylord Apartments'}
Placeholder Map: {'Metro': 'a', 'Foothill Transit': 'b', 'The Gaylord Apartments': 'c'}
True

140
global_avoidance ['a', 'b', 'c'] Input utterance: always avoid going to California Design College, BBQ Premium Chicken, and Koko Pizza
True Ground LTL: & G ! california_design_college & G ! bbq_premium_chicken G ! koko_pizza
Out Ground LTL: & G ! bbq_premium_chicken & G ! california_design_college G ! koko_pizza
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('California Design College', 'BBQ Premium Chicken', 'Koko Pizza')
Out Lmks:['Koko Pizza', 'BBQ Premium Chicken', 'California Design College']
Out Grounds: {'Koko Pizza', 'BBQ Premium Chicken', 'California Design College'}
Placeholder Map: {'Koko Pizza': 'a', 'BBQ Premium Chicken': 'b', 'California Design College': 'c'}
True

141
global_avoidance ['a', 'b', 'c'] Input utterance: always avoid going to POT, Consulat General of the Republic of Indonesia, and Bayou Smokehouse
True Ground LTL: & G ! pot & G ! consulat_general_of_the_republic_of_indonesia G ! bayou_smokehouse
Out Ground LTL: & G ! pot & G ! consulat_general_of_the_republic_of_indonesia G ! bayou_smokehouse
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('POT', 'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse')
Out Lmks:['POT', 'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse', 'POT'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Bayou Smokehouse': 'b', 'POT': 'c'}
True

142
global_avoidance ['a', 'b', 'c'] Input utterance: always stay away from Wilshire-Kenmore Building, Equitable Life Building, and POT
True Ground LTL: & G ! wilshire_kenmore_building & G ! equitable_life_building G ! pot
Out Ground LTL: & G ! wilshire_kenmore_building & G ! equitable_life_building G ! pot
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Wilshire-Kenmore Building', 'Equitable Life Building', 'POT')
Out Lmks:['Wilshire-Kenmore Building', 'Equitable Life Building', 'POT']
Out Grounds: {'Wilshire-Kenmore Building', 'Equitable Life Building', 'POT'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Equitable Life Building': 'b', 'POT': 'c'}
True

143
global_avoidance ['a', 'b', 'c'] Input utterance: always stay away from Mermaid Cafe, Robeks Juice, and Seaweed
True Ground LTL: & G ! mermaid_cafe & G ! robeks_juice G ! seaweed
Out Ground LTL: & G ! mermaid_cafe & G ! robeks_juice G ! seaweed
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Mermaid Cafe', 'Robeks Juice', 'Seaweed')
Out Lmks:['Seaweed', 'Mermaid Cafe', 'Robeks Juice']
Out Grounds: {'Seaweed', 'Mermaid Cafe', 'Robeks Juice'}
Placeholder Map: {'Seaweed': 'a', 'Mermaid Cafe': 'b', 'Robeks Juice': 'c'}
True

144
global_avoidance ['a', 'b', 'c'] Input utterance: you have to avoid Tarboosh middle East kitchen, Hair News, and Korean BBQ, at all costs
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! hair_news G ! korean_bbq
Out Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! hair_news G ! gwang_yang_bbq
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Tarboosh middle East kitchen', 'Hair News', 'Korean BBQ')
Out Lmks:['Korean BBQ', 'Tarboosh middle East kitchen', 'Hair News']
Out Grounds: {'Tarboosh middle East kitchen', 'Hair News', 'Gwang Yang BBQ'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Hair News': 'b', 'Gwang Yang BBQ': 'c'}
False

145
global_avoidance ['a', 'b', 'c'] Input utterance: you have to avoid Central Plaza 1, Coffee Bean & Tea Leaf, and Zan ResPub, at all costs
True Ground LTL: & G ! central_plaza_1 & G ! coffee_bean_&_tea_leaf G ! zan_respub
Out Ground LTL: & G ! central_plaza_1 & G ! coffee_bean_&_tea_leaf G ! zan_respub
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Central Plaza 1', 'Coffee Bean & Tea Leaf', 'Zan ResPub')
Out Lmks:['Coffee Bean & Tea Leaf', 'Zan ResPub', 'Central Plaza 1']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Zan ResPub', 'Central Plaza 1'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Zan ResPub': 'b', 'Central Plaza 1': 'c'}
True

146
global_avoidance ['a', 'b', 'c'] Input utterance: you can not visit Happy Noodle, Mali Taste of Thailand, or Hair News, at any time
True Ground LTL: & G ! happy_noodle & G ! mali_taste_of_thailand G ! hair_news
Out Ground LTL: & G ! happy_noodle & G ! mali_taste_of_thailand G ! hair_news
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Happy Noodle', 'Mali Taste of Thailand', 'Hair News')
Out Lmks:['Happy Noodle', 'Hair News', 'Mali Taste of Thailand']
Out Grounds: {'Happy Noodle', 'Hair News', 'Mali Taste of Thailand'}
Placeholder Map: {'Happy Noodle': 'a', 'Hair News': 'b', 'Mali Taste of Thailand': 'c'}
True

147
global_avoidance ['a', 'b', 'c'] Input utterance: you can not visit BBQ Premium Chicken, Hair News, or Korean Bbq, at any time
True Ground LTL: & G ! bbq_premium_chicken & G ! hair_news G ! korean_bbq
Out Ground LTL: & G ! bbq_premium_chicken & G ! hair_news G ! gwang_yang_bbq
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('BBQ Premium Chicken', 'Hair News', 'Korean Bbq')
Out Lmks:['Hair News', 'BBQ Premium Chicken', 'Korean Bbq']
Out Grounds: {'Hair News', 'BBQ Premium Chicken', 'Gwang Yang BBQ'}
Placeholder Map: {'Hair News': 'a', 'BBQ Premium Chicken': 'b', 'Gwang Yang BBQ': 'c'}
False

148
global_avoidance ['a', 'b', 'c'] Input utterance: make sure you never visit Bayou Smokehouse, Mermaid Cafe, or Crystal Spa
True Ground LTL: & G ! bayou_smokehouse & G ! mermaid_cafe G ! crystal_spa
Out Ground LTL: & G ! bayou_smokehouse & G ! mermaid_cafe G ! crystal_spa
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Bayou Smokehouse', 'Mermaid Cafe', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'Mermaid Cafe', 'Bayou Smokehouse']
Out Grounds: {'Crystal Spa', 'Mermaid Cafe', 'Bayou Smokehouse'}
Placeholder Map: {'Crystal Spa': 'a', 'Mermaid Cafe': 'b', 'Bayou Smokehouse': 'c'}
True

149
global_avoidance ['a', 'b', 'c'] Input utterance: make sure you never visit Crystal Spa, Bongchu, or Etude Lounge
True Ground LTL: & G ! crystal_spa & G ! bongchu G ! etude_lounge
Out Ground LTL: & G ! crystal_spa & G ! bongchu G ! etude_lounge
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Crystal Spa', 'Bongchu', 'Etude Lounge')
Out Lmks:['Crystal Spa', 'Bongchu', 'Etude Lounge']
Out Grounds: {'Crystal Spa', 'Bongchu', 'Etude Lounge'}
Placeholder Map: {'Crystal Spa': 'a', 'Bongchu': 'b', 'Etude Lounge': 'c'}
True

150
global_avoidance ['a', 'b', 'c'] Input utterance: avoid going to Wilshire-Kenmore Building, Ice Cream, and The Gaylord Apartments
True Ground LTL: & G ! wilshire_kenmore_building & G ! ice_cream G ! the_gaylord_apartments
Out Ground LTL: & G ! ice_cream & G ! the_gaylord_apartments G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Wilshire-Kenmore Building', 'Ice Cream', 'The Gaylord Apartments')
Out Lmks:['Wilshire-Kenmore Building', 'The Gaylord Apartments', 'Ice Cream']
Out Grounds: {'Wilshire-Kenmore Building', 'The Gaylord Apartments', 'Ice Cream'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'The Gaylord Apartments': 'b', 'Ice Cream': 'c'}
True

151
global_avoidance ['a', 'b', 'c'] Input utterance: avoid going to Central Plaza 3, Mermaid Cafe, and BBQ Premium Chicken
True Ground LTL: & G ! central_plaza_3 & G ! mermaid_cafe G ! bbq_premium_chicken
Out Ground LTL: & G ! mermaid_cafe & G ! central_plaza_3 G ! bbq_premium_chicken
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Central Plaza 3', 'Mermaid Cafe', 'BBQ Premium Chicken')
Out Lmks:['Central Plaza 3', 'Mermaid Cafe', 'BBQ Premium Chicken']
Out Grounds: {'Central Plaza 3', 'Mermaid Cafe', 'BBQ Premium Chicken'}
Placeholder Map: {'Central Plaza 3': 'a', 'Mermaid Cafe': 'b', 'BBQ Premium Chicken': 'c'}
True

152
global_avoidance ['a', 'b', 'c'] Input utterance: never visit either one among Hair News, Mermaid Cafe, and POT
True Ground LTL: & G ! hair_news & G ! mermaid_cafe G ! pot
Out Ground LTL: & G ! hair_news & G ! mermaid_cafe G ! pot
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Hair News', 'Mermaid Cafe', 'POT')
Out Lmks:['Hair News', 'Mermaid Cafe', 'POT']
Out Grounds: {'Mermaid Cafe', 'Hair News', 'POT'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Hair News': 'b', 'POT': 'c'}
True

153
global_avoidance ['a', 'b', 'c'] Input utterance: never visit either one among Etude Lounge, Carl's Jr., and Robeks Juice
True Ground LTL: & G ! etude_lounge & G ! carls_jr G ! robeks_juice
Out Ground LTL: & G ! etude_lounge & G ! carls_jr G ! robeks_juice
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Etude Lounge', "Carl's Jr.", 'Robeks Juice')
Out Lmks:["Carl's Jr.", 'Robeks Juice', 'Etude Lounge']
Out Grounds: {"Carl's Jr.", 'Robeks Juice', 'Etude Lounge'}
Placeholder Map: {"Carl's Jr.": 'a', 'Robeks Juice': 'b', 'Etude Lounge': 'c'}
True

154
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach the locations Bayou Smokehouse, Korean BBQ, and California Design College
True Ground LTL: & G ! bayou_smokehouse & G ! korean_bbq G ! california_design_college
Out Ground LTL: & G ! bayou_smokehouse & G ! gwang_yang_bbq G ! california_design_college
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Bayou Smokehouse', 'Korean BBQ', 'California Design College')
Out Lmks:['Korean BBQ', 'Bayou Smokehouse', 'California Design College']
Out Grounds: {'Gwang Yang BBQ', 'Bayou Smokehouse', 'California Design College'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'Bayou Smokehouse': 'b', 'California Design College': 'c'}
False

155
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach the locations Tarboosh middle East kitchen, Korean BBQ, and Mermaid Cafe
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! korean_bbq G ! mermaid_cafe
Out Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! gwang_yang_bbq G ! mermaid_cafe
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Tarboosh middle East kitchen', 'Korean BBQ', 'Mermaid Cafe')
Out Lmks:['Korean BBQ', 'Tarboosh middle East kitchen', 'Mermaid Cafe']
Out Grounds: {'Tarboosh middle East kitchen', 'Mermaid Cafe', 'Gwang Yang BBQ'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Mermaid Cafe': 'b', 'Gwang Yang BBQ': 'c'}
False

156
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach Mali Taste of Thailand, ensure that you never reach California Design College, and ensure that you never reach The Boiling Crab
True Ground LTL: & G ! mali_taste_of_thailand & G ! california_design_college G ! the_boiling_crab
Out Ground LTL: & G ! mali_taste_of_thailand & G ! california_design_college G ! the_boiling_crab
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Mali Taste of Thailand', 'California Design College', 'The Boiling Crab')
Out Lmks:['The Boiling Crab', 'Mali Taste of Thailand', 'California Design College']
Out Grounds: {'The Boiling Crab', 'Mali Taste of Thailand', 'California Design College'}
Placeholder Map: {'The Boiling Crab': 'a', 'Mali Taste of Thailand': 'b', 'California Design College': 'c'}
True

157
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that you never reach Details, ensure that you never reach Korean Bbq, and ensure that you never reach Central Plaza 3
True Ground LTL: & G ! details & G ! korean_bbq G ! central_plaza_3
Out Ground LTL: & G ! details & G ! gwang_yang_bbq G ! central_plaza_3
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Details', 'Korean Bbq', 'Central Plaza 3')
Out Lmks:['Details', 'Central Plaza 3', 'Korean Bbq']
Out Grounds: {'Details', 'Central Plaza 3', 'Gwang Yang BBQ'}
Placeholder Map: {'Details': 'a', 'Central Plaza 3': 'b', 'Gwang Yang BBQ': 'c'}
False

158
global_avoidance ['a', 'b', 'c'] Input utterance: Koko Pizza, The Boiling Crab, and BBQ Premium Chicken, should never be visited
True Ground LTL: & G ! koko_pizza & G ! the_boiling_crab G ! bbq_premium_chicken
Out Ground LTL: & G ! koko_pizza & G ! the_boiling_crab G ! bbq_premium_chicken
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Koko Pizza', 'The Boiling Crab', 'BBQ Premium Chicken')
Out Lmks:['The Boiling Crab', 'Koko Pizza', 'BBQ Premium Chicken']
Out Grounds: {'The Boiling Crab', 'Koko Pizza', 'BBQ Premium Chicken'}
Placeholder Map: {'The Boiling Crab': 'a', 'Koko Pizza': 'b', 'BBQ Premium Chicken': 'c'}
True

159
global_avoidance ['a', 'b', 'c'] Input utterance: The Boiling Crab, Foothill Transit, and Details, should never be visited
True Ground LTL: & G ! the_boiling_crab & G ! foothill_transit G ! details
Out Ground LTL: & G ! the_boiling_crab & G ! foothill_transit G ! details
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('The Boiling Crab', 'Foothill Transit', 'Details')
Out Lmks:['Details', 'The Boiling Crab', 'Foothill Transit']
Out Grounds: {'Details', 'The Boiling Crab', 'Foothill Transit'}
Placeholder Map: {'Details': 'a', 'The Boiling Crab': 'b', 'Foothill Transit': 'c'}
True

160
global_avoidance ['a', 'b', 'c'] Input utterance: do not go to Bongchu, Mermaid Cafe, or Equitable Life Building
True Ground LTL: & G ! bongchu & G ! mermaid_cafe G ! equitable_life_building
Out Ground LTL: & G ! bongchu & G ! mermaid_cafe G ! equitable_life_building
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Bongchu', 'Mermaid Cafe', 'Equitable Life Building')
Out Lmks:['Mermaid Cafe', 'Equitable Life Building', 'Bongchu']
Out Grounds: {'Mermaid Cafe', 'Equitable Life Building', 'Bongchu'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Equitable Life Building': 'b', 'Bongchu': 'c'}
True

161
global_avoidance ['a', 'b', 'c'] Input utterance: do not go to Big 5 Sporting Goods, Wilshire-Kenmore Building, or Mali Taste of Thailand
True Ground LTL: & G ! big_5_sporting_goods & G ! wilshire_kenmore_building G ! mali_taste_of_thailand
Out Ground LTL: & G ! big_5_sporting_goods & G ! wilshire_kenmore_building G ! mali_taste_of_thailand
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Big 5 Sporting Goods', 'Wilshire-Kenmore Building', 'Mali Taste of Thailand')
Out Lmks:['Wilshire-Kenmore Building', 'Big 5 Sporting Goods', 'Mali Taste of Thailand']
Out Grounds: {'Wilshire-Kenmore Building', 'Big 5 Sporting Goods', 'Mali Taste of Thailand'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Big 5 Sporting Goods': 'b', 'Mali Taste of Thailand': 'c'}
True

162
global_avoidance ['a', 'b', 'c'] Input utterance: you can go anywhere but Happy Noodle, Seaweed, and Neris Filipino Dining
True Ground LTL: & G ! happy_noodle & G ! seaweed G ! neris_filipino_dining
Out Ground LTL: & G ! seaweed & G ! neris_filipino_dining G ! happy_noodle
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Happy Noodle', 'Seaweed', 'Neris Filipino Dining')
Out Lmks:['Happy Noodle', 'Seaweed', 'Neris Filipino Dining']
Out Grounds: {'Happy Noodle', 'Seaweed', 'Neris Filipino Dining'}
Placeholder Map: {'Happy Noodle': 'a', 'Seaweed': 'b', 'Neris Filipino Dining': 'c'}
True

163
global_avoidance ['a', 'b', 'c'] Input utterance: you can go anywhere but Korean Bbq, Coffee Bean & Tea Leaf, and Mali Taste of Thailand
True Ground LTL: & G ! korean_bbq & G ! coffee_bean_&_tea_leaf G ! mali_taste_of_thailand
Out Ground LTL: & G ! gwang_yang_bbq & G ! coffee_bean_&_tea_leaf G ! mali_taste_of_thailand
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Korean Bbq', 'Coffee Bean & Tea Leaf', 'Mali Taste of Thailand')
Out Lmks:['Coffee Bean & Tea Leaf', 'Mali Taste of Thailand', 'Korean Bbq']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Mali Taste of Thailand', 'Gwang Yang BBQ'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Mali Taste of Thailand': 'b', 'Gwang Yang BBQ': 'c'}
False

164
global_avoidance ['a', 'b', 'c'] Input utterance: Neris Filipino Dining, Zan ResPub, and Big 5 Sporting Goods, can not be visited at any time
True Ground LTL: & G ! neris_filipino_dining & G ! zan_respub G ! big_5_sporting_goods
Out Ground LTL: & G ! neris_filipino_dining & G ! zan_respub G ! big_5_sporting_goods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Neris Filipino Dining', 'Zan ResPub', 'Big 5 Sporting Goods')
Out Lmks:['Big 5 Sporting Goods', 'Zan ResPub', 'Neris Filipino Dining']
Out Grounds: {'Zan ResPub', 'Big 5 Sporting Goods', 'Neris Filipino Dining'}
Placeholder Map: {'Zan ResPub': 'a', 'Big 5 Sporting Goods': 'b', 'Neris Filipino Dining': 'c'}
True

165
global_avoidance ['a', 'b', 'c'] Input utterance: Bongchu, Etude Lounge, and Big 5 Sporting Goods, can not be visited at any time
True Ground LTL: & G ! bongchu & G ! etude_lounge G ! big_5_sporting_goods
Out Ground LTL: & G ! bongchu & G ! etude_lounge G ! big_5_sporting_goods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Bongchu', 'Etude Lounge', 'Big 5 Sporting Goods')
Out Lmks:['Big 5 Sporting Goods', 'Bongchu', 'Etude Lounge']
Out Grounds: {'Bongchu', 'Big 5 Sporting Goods', 'Etude Lounge'}
Placeholder Map: {'Bongchu': 'a', 'Big 5 Sporting Goods': 'b', 'Etude Lounge': 'c'}
True

166
global_avoidance ['a', 'b', 'c'] Input utterance: always keep away from Korean BBQ, Etude Lounge, and POT
True Ground LTL: & G ! korean_bbq & G ! etude_lounge G ! pot
Out Ground LTL: & G ! gwang_yang_bbq & G ! etude_lounge G ! pot
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('Korean BBQ', 'Etude Lounge', 'POT')
Out Lmks:['Korean BBQ', 'POT', 'Etude Lounge']
Out Grounds: {'POT', 'Gwang Yang BBQ', 'Etude Lounge'}
Placeholder Map: {'POT': 'a', 'Gwang Yang BBQ': 'b', 'Etude Lounge': 'c'}
False

167
global_avoidance ['a', 'b', 'c'] Input utterance: always keep away from Neris Filipino Dining, Happy Noodle, and The Boiling Crab
True Ground LTL: & G ! neris_filipino_dining & G ! happy_noodle G ! the_boiling_crab
Out Ground LTL: & G ! neris_filipino_dining & G ! happy_noodle G ! the_boiling_crab
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! a G ! b
True Lmks: ('Neris Filipino Dining', 'Happy Noodle', 'The Boiling Crab')
Out Lmks:['Happy Noodle', 'The Boiling Crab', 'Neris Filipino Dining']
Out Grounds: {'Happy Noodle', 'The Boiling Crab', 'Neris Filipino Dining'}
Placeholder Map: {'Happy Noodle': 'a', 'The Boiling Crab': 'b', 'Neris Filipino Dining': 'c'}
True

168
global_avoidance ['a', 'b', 'c'] Input utterance: you must avoid Bongchu, Seaweed, and Zan ResPub, at all costs
True Ground LTL: & G ! bongchu & G ! seaweed G ! zan_respub
Out Ground LTL: & G ! bongchu & G ! seaweed G ! zan_respub
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Bongchu', 'Seaweed', 'Zan ResPub')
Out Lmks:['Seaweed', 'Zan ResPub', 'Bongchu']
Out Grounds: {'Seaweed', 'Bongchu', 'Zan ResPub'}
Placeholder Map: {'Seaweed': 'a', 'Bongchu': 'b', 'Zan ResPub': 'c'}
True

169
global_avoidance ['a', 'b', 'c'] Input utterance: you must avoid Big 5 Sporting Goods, Bayou Smokehouse, and Mali Taste of Thailand, at all costs
True Ground LTL: & G ! big_5_sporting_goods & G ! bayou_smokehouse G ! mali_taste_of_thailand
Out Ground LTL: & G ! big_5_sporting_goods & G ! bayou_smokehouse G ! mali_taste_of_thailand
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Big 5 Sporting Goods', 'Bayou Smokehouse', 'Mali Taste of Thailand')
Out Lmks:['Big 5 Sporting Goods', 'Bayou Smokehouse', 'Mali Taste of Thailand']
Out Grounds: {'Big 5 Sporting Goods', 'Mali Taste of Thailand', 'Bayou Smokehouse'}
Placeholder Map: {'Big 5 Sporting Goods': 'a', 'Mali Taste of Thailand': 'b', 'Bayou Smokehouse': 'c'}
True

170
global_avoidance ['a', 'b', 'c'] Input utterance: you can not go to BBQ Premium Chicken, Koko Pizza, or Happy Noodle
True Ground LTL: & G ! bbq_premium_chicken & G ! koko_pizza G ! happy_noodle
Out Ground LTL: & G ! koko_pizza & G ! bbq_premium_chicken G ! happy_noodle
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! c G ! a
True Lmks: ('BBQ Premium Chicken', 'Koko Pizza', 'Happy Noodle')
Out Lmks:['Happy Noodle', 'Koko Pizza', 'BBQ Premium Chicken']
Out Grounds: {'Happy Noodle', 'Koko Pizza', 'BBQ Premium Chicken'}
Placeholder Map: {'Happy Noodle': 'a', 'Koko Pizza': 'b', 'BBQ Premium Chicken': 'c'}
True

171
global_avoidance ['a', 'b', 'c'] Input utterance: you can not go to Bayou Smokehouse, POT, or Mali Taste of Thailand
True Ground LTL: & G ! bayou_smokehouse & G ! pot G ! mali_taste_of_thailand
Out Ground LTL: & G ! pot & G ! bayou_smokehouse G ! mali_taste_of_thailand
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Bayou Smokehouse', 'POT', 'Mali Taste of Thailand')
Out Lmks:['POT', 'Mali Taste of Thailand', 'Bayou Smokehouse']
Out Grounds: {'POT', 'Mali Taste of Thailand', 'Bayou Smokehouse'}
Placeholder Map: {'POT': 'a', 'Mali Taste of Thailand': 'b', 'Bayou Smokehouse': 'c'}
True

172
global_avoidance ['a', 'b', 'c'] Input utterance: avoid Metro, Togo's, and Big 5 Sporting Goods, forever
True Ground LTL: & G ! metro & G ! togos G ! big_5_sporting_goods
Out Ground LTL: & G F metro & G F togos G F big_5_sporting_goods
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G F a & G F b G F c
True Lmks: ('Metro', "Togo's", 'Big 5 Sporting Goods')
Out Lmks:['Metro', 'Big 5 Sporting Goods', "Togo's"]
Out Grounds: {'Metro', "Togo's", 'Big 5 Sporting Goods'}
Placeholder Map: {'Metro': 'a', "Togo's": 'b', 'Big 5 Sporting Goods': 'c'}
False

173
global_avoidance ['a', 'b', 'c'] Input utterance: avoid Foothill Transit, Koko Pizza, and Mermaid Cafe, forever
True Ground LTL: & G ! foothill_transit & G ! koko_pizza G ! mermaid_cafe
Out Ground LTL: & G ! foothill_transit & G ! koko_pizza G ! mermaid_cafe
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Foothill Transit', 'Koko Pizza', 'Mermaid Cafe')
Out Lmks:['Foothill Transit', 'Mermaid Cafe', 'Koko Pizza']
Out Grounds: {'Foothill Transit', 'Mermaid Cafe', 'Koko Pizza'}
Placeholder Map: {'Foothill Transit': 'a', 'Mermaid Cafe': 'b', 'Koko Pizza': 'c'}
True

174
global_avoidance ['a', 'b', 'c'] Input utterance: do not make any single visit to Coffee Bean & Tea Leaf, Zan ResPub, or Crystal Spa
True Ground LTL: & G ! coffee_bean_&_tea_leaf & G ! zan_respub G ! crystal_spa
Out Ground LTL: & G ! coffee_bean_&_tea_leaf & G ! zan_respub G ! crystal_spa
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! b G ! c
True Lmks: ('Coffee Bean & Tea Leaf', 'Zan ResPub', 'Crystal Spa')
Out Lmks:['Coffee Bean & Tea Leaf', 'Crystal Spa', 'Zan ResPub']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Zan ResPub', 'Crystal Spa'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Zan ResPub': 'b', 'Crystal Spa': 'c'}
True

175
global_avoidance ['a', 'b', 'c'] Input utterance: do not make any single visit to Home Cafe, Carl's Jr., or Neris Filipino Dining
True Ground LTL: & G ! home_cafe & G ! carls_jr G ! neris_filipino_dining
Out Ground LTL: & G ! home_cafe & G ! carls_jr G ! neris_filipino_dining
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! b & G ! a G ! c
True Lmks: ('Home Cafe', "Carl's Jr.", 'Neris Filipino Dining')
Out Lmks:["Carl's Jr.", 'Neris Filipino Dining', 'Home Cafe']
Out Grounds: {"Carl's Jr.", 'Home Cafe', 'Neris Filipino Dining'}
Placeholder Map: {"Carl's Jr.": 'a', 'Home Cafe': 'b', 'Neris Filipino Dining': 'c'}
True

176
global_avoidance ['a', 'b', 'c'] Input utterance: Details, Koko Pizza, or Bongchu, can never become true at any instant
True Ground LTL: & G ! details & G ! koko_pizza G ! bongchu
Out Ground LTL: & G ! details & G ! koko_pizza G ! bongchu
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Details', 'Koko Pizza', 'Bongchu')
Out Lmks:['Details', 'Bongchu', 'Koko Pizza']
Out Grounds: {'Details', 'Bongchu', 'Koko Pizza'}
Placeholder Map: {'Details': 'a', 'Bongchu': 'b', 'Koko Pizza': 'c'}
True

177
global_avoidance ['a', 'b', 'c'] Input utterance: Neris Filipino Dining, Robeks Juice, or Wilshire/Normandie, can never become true at any instant
True Ground LTL: & G ! neris_filipino_dining & G ! robeks_juice G ! wilshire_normandie
Out Ground LTL: & G ! neris_filipino_dining & G ! robeks_juice G ! wilshire_normandie
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! c & G ! b G ! a
True Lmks: ('Neris Filipino Dining', 'Robeks Juice', 'Wilshire/Normandie')
Out Lmks:['Wilshire/Normandie', 'Robeks Juice', 'Neris Filipino Dining']
Out Grounds: {'Wilshire/Normandie', 'Robeks Juice', 'Neris Filipino Dining'}
Placeholder Map: {'Wilshire/Normandie': 'a', 'Robeks Juice': 'b', 'Neris Filipino Dining': 'c'}
True

178
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that Foothill Transit, Tarboosh middle East kitchen, and The Gaylord Apartments, never hold true
True Ground LTL: & G ! foothill_transit & G ! tarboosh_middle_east_kitchen G ! the_gaylord_apartments
Out Ground LTL: & G ! foothill_transit & G ! tarboosh_middle_east_kitchen G ! the_gaylord_apartments
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Foothill Transit', 'Tarboosh middle East kitchen', 'The Gaylord Apartments')
Out Lmks:['The Gaylord Apartments', 'Foothill Transit', 'Tarboosh middle East kitchen']
Out Grounds: {'Foothill Transit', 'The Gaylord Apartments', 'Tarboosh middle East kitchen'}
Placeholder Map: {'Foothill Transit': 'a', 'The Gaylord Apartments': 'b', 'Tarboosh middle East kitchen': 'c'}
True

179
global_avoidance ['a', 'b', 'c'] Input utterance: ensure that Sun Nong Dan, Robeks Juice, and Consulat General of the Republic of Indonesia, never hold true
True Ground LTL: & G ! sun_nong_dan & G ! robeks_juice G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: & G ! sun_nong_dan & G ! robeks_juice G ! consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: & G ! a & G ! b G ! c
Out Symbolic LTL: & G ! a & G ! c G ! b
True Lmks: ('Sun Nong Dan', 'Robeks Juice', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Sun Nong Dan', 'Consulat General of the Republic of Indonesia', 'Robeks Juice']
Out Grounds: {'Sun Nong Dan', 'Consulat General of the Republic of Indonesia', 'Robeks Juice'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Robeks Juice': 'c'}
True

180
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit Metro, Mali Taste of Thailand, Seaweed, or Consulat General of the Republic of Indonesia
True Ground LTL: & G ! metro & G ! mali_taste_of_thailand & G ! seaweed G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: & G ! metro & G ! mali_taste_of_thailand & G ! seaweed G ! consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! c
True Lmks: ('Metro', 'Mali Taste of Thailand', 'Seaweed', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Metro', 'Seaweed', 'Consulat General of the Republic of Indonesia', 'Mali Taste of Thailand']
Out Grounds: {'Seaweed', 'Metro', 'Consulat General of the Republic of Indonesia', 'Mali Taste of Thailand'}
Placeholder Map: {'Seaweed': 'a', 'Metro': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Mali Taste of Thailand': 'd'}
True

181
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit Tarboosh middle East kitchen, Mermaid Cafe, Wilshire/Normandie, or Equitable Life Building
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! mermaid_cafe & G ! wilshire_normandie G ! equitable_life_building
Out Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! mermaid_cafe & G ! wilshire_normandie G ! equitable_life_building
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! c
True Lmks: ('Tarboosh middle East kitchen', 'Mermaid Cafe', 'Wilshire/Normandie', 'Equitable Life Building')
Out Lmks:['Wilshire/Normandie', 'Tarboosh middle East kitchen', 'Mermaid Cafe', 'Equitable Life Building']
Out Grounds: {'Wilshire/Normandie', 'Tarboosh middle East kitchen', 'Equitable Life Building', 'Mermaid Cafe'}
Placeholder Map: {'Wilshire/Normandie': 'a', 'Tarboosh middle East kitchen': 'b', 'Equitable Life Building': 'c', 'Mermaid Cafe': 'd'}
True

182
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can never go to Central Plaza 3, Consulat General of the Republic of Indonesia, Seaweed, or Happy Noodle
True Ground LTL: & G ! central_plaza_3 & G ! consulat_general_of_the_republic_of_indonesia & G ! seaweed G ! happy_noodle
Out Ground LTL: & G ! central_plaza_3 & G ! consulat_general_of_the_republic_of_indonesia & G ! seaweed G ! happy_noodle
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ('Central Plaza 3', 'Consulat General of the Republic of Indonesia', 'Seaweed', 'Happy Noodle')
Out Lmks:['Seaweed', 'Central Plaza 3', 'Consulat General of the Republic of Indonesia', 'Happy Noodle']
Out Grounds: {'Happy Noodle', 'Central Plaza 3', 'Seaweed', 'Consulat General of the Republic of Indonesia'}
Placeholder Map: {'Happy Noodle': 'a', 'Central Plaza 3': 'b', 'Seaweed': 'c', 'Consulat General of the Republic of Indonesia': 'd'}
True

183
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can never go to Koko Pizza, Home Cafe, Consulat General of the Republic of Indonesia, or Happy Noodle
True Ground LTL: & G ! koko_pizza & G ! home_cafe & G ! consulat_general_of_the_republic_of_indonesia G ! happy_noodle
Out Ground LTL: & G ! koko_pizza & G ! home_cafe & G ! consulat_general_of_the_republic_of_indonesia G ! happy_noodle
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Koko Pizza', 'Home Cafe', 'Consulat General of the Republic of Indonesia', 'Happy Noodle')
Out Lmks:['Happy Noodle', 'Consulat General of the Republic of Indonesia', 'Koko Pizza', 'Home Cafe']
Out Grounds: {'Happy Noodle', 'Consulat General of the Republic of Indonesia', 'Koko Pizza', 'Home Cafe'}
Placeholder Map: {'Happy Noodle': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Koko Pizza': 'c', 'Home Cafe': 'd'}
True

184
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Tarboosh middle East kitchen, Central Plaza 1, Metro, or Big 5 Sporting Goods, at any time
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! central_plaza_1 & G ! metro G ! big_5_sporting_goods
Out Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! central_plaza_1 & G ! metro G ! big_5_sporting_goods
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! c
True Lmks: ('Tarboosh middle East kitchen', 'Central Plaza 1', 'Metro', 'Big 5 Sporting Goods')
Out Lmks:['Metro', 'Big 5 Sporting Goods', 'Tarboosh middle East kitchen', 'Central Plaza 1']
Out Grounds: {'Metro', 'Tarboosh middle East kitchen', 'Big 5 Sporting Goods', 'Central Plaza 1'}
Placeholder Map: {'Metro': 'a', 'Tarboosh middle East kitchen': 'b', 'Big 5 Sporting Goods': 'c', 'Central Plaza 1': 'd'}
True

185
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Wilshire/Normandie, Togo's, The Gaylord Apartments, or Coffee Bean & Tea Leaf, at any time
True Ground LTL: & G ! wilshire_normandie & G ! togos & G ! the_gaylord_apartments G ! coffee_bean_&_tea_leaf
Out Ground LTL: & G ! wilshire_normandie & G ! togos & G ! the_gaylord_apartments G ! coffee_bean_&_tea_leaf
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('Wilshire/Normandie', "Togo's", 'The Gaylord Apartments', 'Coffee Bean & Tea Leaf')
Out Lmks:['Coffee Bean & Tea Leaf', 'The Gaylord Apartments', 'Wilshire/Normandie', "Togo's"]
Out Grounds: {'Wilshire/Normandie', 'Coffee Bean & Tea Leaf', 'The Gaylord Apartments', "Togo's"}
Placeholder Map: {'Wilshire/Normandie': 'a', 'Coffee Bean & Tea Leaf': 'b', 'The Gaylord Apartments': 'c', "Togo's": 'd'}
True

186
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure you never visit Seaweed, Consulat General of the Republic of Indonesia, Ice Cream, or Robeks Juice
True Ground LTL: & G ! seaweed & G ! consulat_general_of_the_republic_of_indonesia & G ! ice_cream G ! robeks_juice
Out Ground LTL: & G ! seaweed & G ! consulat_general_of_the_republic_of_indonesia & G ! ice_cream G ! robeks_juice
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! b G ! d
True Lmks: ('Seaweed', 'Consulat General of the Republic of Indonesia', 'Ice Cream', 'Robeks Juice')
Out Lmks:['Seaweed', 'Ice Cream', 'Consulat General of the Republic of Indonesia', 'Robeks Juice']
Out Grounds: {'Seaweed', 'Ice Cream', 'Consulat General of the Republic of Indonesia', 'Robeks Juice'}
Placeholder Map: {'Seaweed': 'a', 'Ice Cream': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Robeks Juice': 'd'}
True

187
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure you never visit Mali Taste of Thailand, Big 5 Sporting Goods, Bongchu, or BBQ Premium Chicken
True Ground LTL: & G ! mali_taste_of_thailand & G ! big_5_sporting_goods & G ! bongchu G ! bbq_premium_chicken
Out Ground LTL: & G ! mali_taste_of_thailand & G ! big_5_sporting_goods & G ! bongchu G ! bbq_premium_chicken
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! b G ! d
True Lmks: ('Mali Taste of Thailand', 'Big 5 Sporting Goods', 'Bongchu', 'BBQ Premium Chicken')
Out Lmks:['Big 5 Sporting Goods', 'Bongchu', 'Mali Taste of Thailand', 'BBQ Premium Chicken']
Out Grounds: {'Big 5 Sporting Goods', 'Bongchu', 'Mali Taste of Thailand', 'BBQ Premium Chicken'}
Placeholder Map: {'Big 5 Sporting Goods': 'a', 'Bongchu': 'b', 'Mali Taste of Thailand': 'c', 'BBQ Premium Chicken': 'd'}
True

188
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always avoid going to Korean BBQ, Equitable Life Building, Consulat General of the Republic of Indonesia, or The Boiling Crab
True Ground LTL: & G ! korean_bbq & G ! equitable_life_building & G ! consulat_general_of_the_republic_of_indonesia G ! the_boiling_crab
Out Ground LTL: & G ! gwang_yang_bbq & G ! equitable_life_building & G ! consulat_general_of_the_republic_of_indonesia G ! the_boiling_crab
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! c G ! a
True Lmks: ('Korean BBQ', 'Equitable Life Building', 'Consulat General of the Republic of Indonesia', 'The Boiling Crab')
Out Lmks:['The Boiling Crab', 'Korean BBQ', 'Equitable Life Building', 'Consulat General of the Republic of Indonesia']
Out Grounds: {'The Boiling Crab', 'Equitable Life Building', 'Consulat General of the Republic of Indonesia', 'Gwang Yang BBQ'}
Placeholder Map: {'The Boiling Crab': 'a', 'Equitable Life Building': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Gwang Yang BBQ': 'd'}
False

189
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always avoid going to Equitable Life Building, Koko Pizza, Crystal Spa, or Robeks Juice
True Ground LTL: & G ! equitable_life_building & G ! koko_pizza & G ! crystal_spa G ! robeks_juice
Out Ground LTL: & G ! equitable_life_building & G ! koko_pizza & G ! crystal_spa G ! robeks_juice
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! c
True Lmks: ('Equitable Life Building', 'Koko Pizza', 'Crystal Spa', 'Robeks Juice')
Out Lmks:['Crystal Spa', 'Equitable Life Building', 'Koko Pizza', 'Robeks Juice']
Out Grounds: {'Crystal Spa', 'Equitable Life Building', 'Robeks Juice', 'Koko Pizza'}
Placeholder Map: {'Crystal Spa': 'a', 'Equitable Life Building': 'b', 'Robeks Juice': 'c', 'Koko Pizza': 'd'}
True

190
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always stay away from The Gaylord Apartments, Togo's, Happy Noodle, and Carl's Jr.
True Ground LTL: & G ! the_gaylord_apartments & G ! togos & G ! happy_noodle G ! carls_jr
Out Ground LTL: & G ! the_gaylord_apartments & G ! togos & G ! happy_noodle G ! carls_jr
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('The Gaylord Apartments', "Togo's", 'Happy Noodle', "Carl's Jr.")
Out Lmks:['Happy Noodle', "Carl's Jr.", 'The Gaylord Apartments', "Togo's"]
Out Grounds: {'Happy Noodle', "Carl's Jr.", 'The Gaylord Apartments', "Togo's"}
Placeholder Map: {'Happy Noodle': 'a', "Carl's Jr.": 'b', 'The Gaylord Apartments': 'c', "Togo's": 'd'}
True

191
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always stay away from Mermaid Cafe, Zan ResPub, Home Cafe, and Crystal Spa
True Ground LTL: & G ! mermaid_cafe & G ! zan_respub & G ! home_cafe G ! crystal_spa
Out Ground LTL: & G ! mermaid_cafe & G ! zan_respub & G ! home_cafe G ! crystal_spa
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Mermaid Cafe', 'Zan ResPub', 'Home Cafe', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'Mermaid Cafe', 'Zan ResPub', 'Home Cafe']
Out Grounds: {'Crystal Spa', 'Mermaid Cafe', 'Zan ResPub', 'Home Cafe'}
Placeholder Map: {'Crystal Spa': 'a', 'Mermaid Cafe': 'b', 'Zan ResPub': 'c', 'Home Cafe': 'd'}
True

192
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you have to avoid Mermaid Cafe, Wilshire-Kenmore Building, The Line, and Details, at all costs
True Ground LTL: & G ! mermaid_cafe & G ! wilshire_kenmore_building & G ! the_line G ! details
Out Ground LTL: & G ! mermaid_cafe & G ! wilshire_kenmore_building & G ! the_line G ! details
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Mermaid Cafe', 'Wilshire-Kenmore Building', 'The Line', 'Details')
Out Lmks:['Wilshire-Kenmore Building', 'Details', 'Mermaid Cafe', 'The Line']
Out Grounds: {'Wilshire-Kenmore Building', 'Details', 'Mermaid Cafe', 'The Line'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Details': 'b', 'Mermaid Cafe': 'c', 'The Line': 'd'}
True

193
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you have to avoid Foothill Transit, Happy Noodle, Neris Filipino Dining, and Crystal Spa, at all costs
True Ground LTL: & G ! foothill_transit & G ! happy_noodle & G ! neris_filipino_dining G ! crystal_spa
Out Ground LTL: & G ! foothill_transit & G ! happy_noodle & G ! neris_filipino_dining G ! crystal_spa
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Foothill Transit', 'Happy Noodle', 'Neris Filipino Dining', 'Crystal Spa')
Out Lmks:['Happy Noodle', 'Crystal Spa', 'Foothill Transit', 'Neris Filipino Dining']
Out Grounds: {'Happy Noodle', 'Crystal Spa', 'Foothill Transit', 'Neris Filipino Dining'}
Placeholder Map: {'Happy Noodle': 'a', 'Crystal Spa': 'b', 'Foothill Transit': 'c', 'Neris Filipino Dining': 'd'}
True

194
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit any locations among Metro, Robeks Juice, Ice Cream, Carl's Jr.
True Ground LTL: & G ! metro & G ! robeks_juice & G ! ice_cream G ! carls_jr
Out Ground LTL: & G ! metro & G ! robeks_juice & G ! ice_cream G ! carls_jr
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ('Metro', 'Robeks Juice', 'Ice Cream', "Carl's Jr.")
Out Lmks:['Metro', "Carl's Jr.", 'Ice Cream', 'Robeks Juice']
Out Grounds: {"Carl's Jr.", 'Metro', 'Ice Cream', 'Robeks Juice'}
Placeholder Map: {"Carl's Jr.": 'a', 'Metro': 'b', 'Ice Cream': 'c', 'Robeks Juice': 'd'}
True

195
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never visit any locations among Hair News, Bongchu, Koko Pizza, Details
True Ground LTL: & G ! hair_news & G ! bongchu & G ! koko_pizza G ! details
Out Ground LTL: & G ! hair_news & G ! bongchu & G ! koko_pizza G ! details
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Hair News', 'Bongchu', 'Koko Pizza', 'Details')
Out Lmks:['Details', 'Hair News', 'Bongchu', 'Koko Pizza']
Out Grounds: {'Details', 'Hair News', 'Bongchu', 'Koko Pizza'}
Placeholder Map: {'Details': 'a', 'Hair News': 'b', 'Bongchu': 'c', 'Koko Pizza': 'd'}
True

196
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure to not reach any of Zan ResPub, Foothill Transit, Home Cafe, and POT
True Ground LTL: & G ! zan_respub & G ! foothill_transit & G ! home_cafe G ! pot
Out Ground LTL: & G ! zan_respub & G ! foothill_transit & G ! home_cafe G ! pot
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Zan ResPub', 'Foothill Transit', 'Home Cafe', 'POT')
Out Lmks:['Foothill Transit', 'POT', 'Zan ResPub', 'Home Cafe']
Out Grounds: {'Foothill Transit', 'POT', 'Zan ResPub', 'Home Cafe'}
Placeholder Map: {'Foothill Transit': 'a', 'POT': 'b', 'Zan ResPub': 'c', 'Home Cafe': 'd'}
True

197
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: make sure to not reach any of Carl's Jr., Mermaid Cafe, Consulat General of the Republic of Indonesia, and Korean Bbq
True Ground LTL: & G ! carls_jr & G ! mermaid_cafe & G ! consulat_general_of_the_republic_of_indonesia G ! korean_bbq
Out Ground LTL: & G ! carls_jr & G ! mermaid_cafe & G ! consulat_general_of_the_republic_of_indonesia G ! gwang_yang_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! b & G ! c G ! d
True Lmks: ("Carl's Jr.", 'Mermaid Cafe', 'Consulat General of the Republic of Indonesia', 'Korean Bbq')
Out Lmks:["Carl's Jr.", 'Mermaid Cafe', 'Consulat General of the Republic of Indonesia', 'Korean Bbq']
Out Grounds: {"Carl's Jr.", 'Mermaid Cafe', 'Consulat General of the Republic of Indonesia', 'Gwang Yang BBQ'}
Placeholder Map: {"Carl's Jr.": 'a', 'Mermaid Cafe': 'b', 'Consulat General of the Republic of Indonesia': 'c', 'Gwang Yang BBQ': 'd'}
False

198
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid going to POT, Big 5 Sporting Goods, Robeks Juice, and Wilshire-Kenmore Building
True Ground LTL: & G ! pot & G ! big_5_sporting_goods & G ! robeks_juice G ! wilshire_kenmore_building
Out Ground LTL: & G ! pot & G ! big_5_sporting_goods & G ! robeks_juice G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! b G ! a
True Lmks: ('POT', 'Big 5 Sporting Goods', 'Robeks Juice', 'Wilshire-Kenmore Building')
Out Lmks:['Wilshire-Kenmore Building', 'POT', 'Big 5 Sporting Goods', 'Robeks Juice']
Out Grounds: {'Wilshire-Kenmore Building', 'Robeks Juice', 'Big 5 Sporting Goods', 'POT'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Robeks Juice': 'b', 'Big 5 Sporting Goods': 'c', 'POT': 'd'}
True

199
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid going to The Gaylord Apartments, Korean Bbq, Hair News, and Wilshire-Kenmore Building
True Ground LTL: & G ! the_gaylord_apartments & G ! korean_bbq & G ! hair_news G ! wilshire_kenmore_building
Out Ground LTL: & G ! the_gaylord_apartments & G ! gwang_yang_bbq & G ! hair_news G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ('The Gaylord Apartments', 'Korean Bbq', 'Hair News', 'Wilshire-Kenmore Building')
Out Lmks:['Wilshire-Kenmore Building', 'The Gaylord Apartments', 'Hair News', 'Korean Bbq']
Out Grounds: {'Wilshire-Kenmore Building', 'The Gaylord Apartments', 'Hair News', 'Gwang Yang BBQ'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'The Gaylord Apartments': 'b', 'Hair News': 'c', 'Gwang Yang BBQ': 'd'}
False

200
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Carl's Jr., Robeks Juice, Wilshire/Normandie, and Happy Noodle, must never be visited
True Ground LTL: & G ! carls_jr & G ! robeks_juice & G ! wilshire_normandie G ! happy_noodle
Out Ground LTL: & G ! carls_jr & G ! robeks_juice & G ! wilshire_normandie G ! happy_noodle
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! d & G ! c G ! a
True Lmks: ("Carl's Jr.", 'Robeks Juice', 'Wilshire/Normandie', 'Happy Noodle')
Out Lmks:["Carl's Jr.", 'Wilshire/Normandie', 'Robeks Juice', 'Happy Noodle']
Out Grounds: {'Happy Noodle', "Carl's Jr.", 'Wilshire/Normandie', 'Robeks Juice'}
Placeholder Map: {'Happy Noodle': 'a', "Carl's Jr.": 'b', 'Wilshire/Normandie': 'c', 'Robeks Juice': 'd'}
True

201
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Zan ResPub, Koko Pizza, Mali Taste of Thailand, and Wilshire/Normandie, must never be visited
True Ground LTL: & G ! zan_respub & G ! koko_pizza & G ! mali_taste_of_thailand G ! wilshire_normandie
Out Ground LTL: & G ! zan_respub & G ! koko_pizza & G ! mali_taste_of_thailand G ! wilshire_normandie
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('Zan ResPub', 'Koko Pizza', 'Mali Taste of Thailand', 'Wilshire/Normandie')
Out Lmks:['Wilshire/Normandie', 'Zan ResPub', 'Koko Pizza', 'Mali Taste of Thailand']
Out Grounds: {'Zan ResPub', 'Wilshire/Normandie', 'Mali Taste of Thailand', 'Koko Pizza'}
Placeholder Map: {'Zan ResPub': 'a', 'Wilshire/Normandie': 'b', 'Mali Taste of Thailand': 'c', 'Koko Pizza': 'd'}
True

202
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Sun Nong Dan, never go to Etude Lounge, never go to Gwang Yang BBQ, and never go to The Boiling Crab
True Ground LTL: & G ! sun_nong_dan & G ! etude_lounge & G ! gwang_yang_bbq G ! the_boiling_crab
Out Ground LTL: & G ! sun_nong_dan & G ! etude_lounge & G ! gwang_yang_bbq G ! the_boiling_crab
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('Sun Nong Dan', 'Etude Lounge', 'Gwang Yang BBQ', 'The Boiling Crab')
Out Lmks:['Sun Nong Dan', 'The Boiling Crab', 'Gwang Yang BBQ', 'Etude Lounge']
Out Grounds: {'Sun Nong Dan', 'The Boiling Crab', 'Gwang Yang BBQ', 'Etude Lounge'}
Placeholder Map: {'Sun Nong Dan': 'a', 'The Boiling Crab': 'b', 'Gwang Yang BBQ': 'c', 'Etude Lounge': 'd'}
True

203
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Korean Bbq, never go to Etude Lounge, never go to The Boiling Crab, and never go to Wako
True Ground LTL: & G ! korean_bbq & G ! etude_lounge & G ! the_boiling_crab G ! wako
Out Ground LTL: & G ! gwang_yang_bbq & G ! etude_lounge & G ! the_boiling_crab G ! wako
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Korean Bbq', 'Etude Lounge', 'The Boiling Crab', 'Wako')
Out Lmks:['The Boiling Crab', 'Wako', 'Korean Bbq', 'Etude Lounge']
Out Grounds: {'The Boiling Crab', 'Wako', 'Gwang Yang BBQ', 'Etude Lounge'}
Placeholder Map: {'The Boiling Crab': 'a', 'Wako': 'b', 'Gwang Yang BBQ': 'c', 'Etude Lounge': 'd'}
False

204
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Central Plaza 1, BBQ Premium Chicken, Details, or POT
True Ground LTL: & G ! central_plaza_1 & G ! bbq_premium_chicken & G ! details G ! pot
Out Ground LTL: & G ! central_plaza_1 & G ! bbq_premium_chicken & G ! details G ! pot
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Central Plaza 1', 'BBQ Premium Chicken', 'Details', 'POT')
Out Lmks:['Details', 'POT', 'Central Plaza 1', 'BBQ Premium Chicken']
Out Grounds: {'Details', 'POT', 'Central Plaza 1', 'BBQ Premium Chicken'}
Placeholder Map: {'Details': 'a', 'POT': 'b', 'Central Plaza 1': 'c', 'BBQ Premium Chicken': 'd'}
True

205
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go to Carl's Jr., Togo's, Foothill Transit, or Crystal Spa
True Ground LTL: & G ! carls_jr & G ! togos & G ! foothill_transit G ! crystal_spa
Out Ground LTL: & G ! carls_jr & G ! togos & G ! foothill_transit G ! crystal_spa
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ("Carl's Jr.", "Togo's", 'Foothill Transit', 'Crystal Spa')
Out Lmks:["Carl's Jr.", 'Crystal Spa', 'Foothill Transit', "Togo's"]
Out Grounds: {"Carl's Jr.", 'Crystal Spa', 'Foothill Transit', "Togo's"}
Placeholder Map: {"Carl's Jr.": 'a', 'Crystal Spa': 'b', 'Foothill Transit': 'c', "Togo's": 'd'}
True

206
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not go to Tarboosh middle East kitchen, Happy Noodle, California Design College, or Gwang Yang BBQ
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! happy_noodle & G ! california_design_college G ! gwang_yang_bbq
Out Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! happy_noodle & G ! california_design_college G ! gwang_yang_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Tarboosh middle East kitchen', 'Happy Noodle', 'California Design College', 'Gwang Yang BBQ')
Out Lmks:['Happy Noodle', 'Tarboosh middle East kitchen', 'Gwang Yang BBQ', 'California Design College']
Out Grounds: {'Happy Noodle', 'Tarboosh middle East kitchen', 'Gwang Yang BBQ', 'California Design College'}
Placeholder Map: {'Happy Noodle': 'a', 'Tarboosh middle East kitchen': 'b', 'Gwang Yang BBQ': 'c', 'California Design College': 'd'}
True

207
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not go to Big 5 Sporting Goods, Wilshire-Kenmore Building, Bayou Smokehouse, or Wilshire/Normandie
True Ground LTL: & G ! big_5_sporting_goods & G ! wilshire_kenmore_building & G ! bayou_smokehouse G ! wilshire_normandie
Out Ground LTL: & G ! big_5_sporting_goods & G ! wilshire_kenmore_building & G ! bayou_smokehouse G ! wilshire_normandie
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! d G ! b
True Lmks: ('Big 5 Sporting Goods', 'Wilshire-Kenmore Building', 'Bayou Smokehouse', 'Wilshire/Normandie')
Out Lmks:['Wilshire-Kenmore Building', 'Wilshire/Normandie', 'Big 5 Sporting Goods', 'Bayou Smokehouse']
Out Grounds: {'Wilshire-Kenmore Building', 'Wilshire/Normandie', 'Big 5 Sporting Goods', 'Bayou Smokehouse'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Wilshire/Normandie': 'b', 'Big 5 Sporting Goods': 'c', 'Bayou Smokehouse': 'd'}
True

208
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can go anywhere but California Design College, Gwang Yang BBQ, Bayou Smokehouse, and Robeks Juice
True Ground LTL: & G ! california_design_college & G ! gwang_yang_bbq & G ! bayou_smokehouse G ! robeks_juice
Out Ground LTL: & G ! california_design_college & G ! gwang_yang_bbq & G ! bayou_smokehouse G ! robeks_juice
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! c G ! b
True Lmks: ('California Design College', 'Gwang Yang BBQ', 'Bayou Smokehouse', 'Robeks Juice')
Out Lmks:['Bayou Smokehouse', 'Robeks Juice', 'Gwang Yang BBQ', 'California Design College']
Out Grounds: {'Gwang Yang BBQ', 'Robeks Juice', 'Bayou Smokehouse', 'California Design College'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'Robeks Juice': 'b', 'Bayou Smokehouse': 'c', 'California Design College': 'd'}
True

209
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can go anywhere but Neris Filipino Dining, Central Plaza 1, Carl's Jr., and The Line
True Ground LTL: & G ! neris_filipino_dining & G ! central_plaza_1 & G ! carls_jr G ! the_line
Out Ground LTL: & G ! neris_filipino_dining & G ! central_plaza_1 & G ! carls_jr G ! the_line
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! c & G ! a G ! b
True Lmks: ('Neris Filipino Dining', 'Central Plaza 1', "Carl's Jr.", 'The Line')
Out Lmks:["Carl's Jr.", 'The Line', 'Central Plaza 1', 'Neris Filipino Dining']
Out Grounds: {"Carl's Jr.", 'The Line', 'Central Plaza 1', 'Neris Filipino Dining'}
Placeholder Map: {"Carl's Jr.": 'a', 'The Line': 'b', 'Central Plaza 1': 'c', 'Neris Filipino Dining': 'd'}
True

210
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Ice Cream, Central Plaza 3, Equitable Life Building, and California Design College, can not be visited at any time
True Ground LTL: & G ! ice_cream & G ! central_plaza_3 & G ! equitable_life_building G ! california_design_college
Out Ground LTL: & G ! ice_cream & G ! central_plaza_3 & G ! equitable_life_building G ! california_design_college
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! a & G ! b G ! d
True Lmks: ('Ice Cream', 'Central Plaza 3', 'Equitable Life Building', 'California Design College')
Out Lmks:['Central Plaza 3', 'Equitable Life Building', 'Ice Cream', 'California Design College']
Out Grounds: {'Central Plaza 3', 'Equitable Life Building', 'Ice Cream', 'California Design College'}
Placeholder Map: {'Central Plaza 3': 'a', 'Equitable Life Building': 'b', 'Ice Cream': 'c', 'California Design College': 'd'}
True

211
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Korean BBQ, Foothill Transit, Togo's, and Korean Bbq, can not be visited at any time
True Ground LTL: & G ! korean_bbq & G ! foothill_transit & G ! togos G ! korean_bbq
Out Ground LTL: & G ! gwang_yang_bbq G ! foothill_transit G ! togos G ! h
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c G ! a G ! b G ! h
True Lmks: ('Korean BBQ', 'Foothill Transit', "Togo's", 'Korean Bbq')
Out Lmks:['Korean BBQ', 'Foothill Transit', "Togo's", 'Korean Bbq']
Out Grounds: {'Foothill Transit', "Togo's", 'Gwang Yang BBQ'}
Placeholder Map: {'Foothill Transit': 'a', "Togo's": 'b', 'Gwang Yang BBQ': 'c'}
RER or Grounding Error

212
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always keep away from Zan ResPub, Home Cafe, Tarboosh middle East kitchen, and Foothill Transit
True Ground LTL: & G ! zan_respub & G ! home_cafe & G ! tarboosh_middle_east_kitchen G ! foothill_transit
Out Ground LTL: & G ! zan_respub & G ! home_cafe & G ! tarboosh_middle_east_kitchen G ! foothill_transit
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Zan ResPub', 'Home Cafe', 'Tarboosh middle East kitchen', 'Foothill Transit')
Out Lmks:['Foothill Transit', 'Tarboosh middle East kitchen', 'Zan ResPub', 'Home Cafe']
Out Grounds: {'Foothill Transit', 'Tarboosh middle East kitchen', 'Zan ResPub', 'Home Cafe'}
Placeholder Map: {'Foothill Transit': 'a', 'Tarboosh middle East kitchen': 'b', 'Zan ResPub': 'c', 'Home Cafe': 'd'}
True

213
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: always keep away from Bayou Smokehouse, Etude Lounge, Korean Bbq, and Bongchu
True Ground LTL: & G ! bayou_smokehouse & G ! etude_lounge & G ! korean_bbq G ! bongchu
Out Ground LTL: & G ! bayou_smokehouse & G ! etude_lounge & G ! gwang_yang_bbq G ! bongchu
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! a G ! b
True Lmks: ('Bayou Smokehouse', 'Etude Lounge', 'Korean Bbq', 'Bongchu')
Out Lmks:['Bongchu', 'Korean Bbq', 'Bayou Smokehouse', 'Etude Lounge']
Out Grounds: {'Gwang Yang BBQ', 'Bongchu', 'Bayou Smokehouse', 'Etude Lounge'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'Bongchu': 'b', 'Bayou Smokehouse': 'c', 'Etude Lounge': 'd'}
False

214
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you must avoid Equitable Life Building, Sun Nong Dan, Bayou Smokehouse, and Wako, at all costs
True Ground LTL: & G ! equitable_life_building & G ! sun_nong_dan & G ! bayou_smokehouse G ! wako
Out Ground LTL: & G ! equitable_life_building & G ! sun_nong_dan & G ! bayou_smokehouse G ! wako
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! d G ! c
True Lmks: ('Equitable Life Building', 'Sun Nong Dan', 'Bayou Smokehouse', 'Wako')
Out Lmks:['Sun Nong Dan', 'Equitable Life Building', 'Wako', 'Bayou Smokehouse']
Out Grounds: {'Sun Nong Dan', 'Equitable Life Building', 'Wako', 'Bayou Smokehouse'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Equitable Life Building': 'b', 'Wako': 'c', 'Bayou Smokehouse': 'd'}
True

215
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you must avoid Bongchu, Mali Taste of Thailand, Koko Pizza, and Sun Nong Dan, at all costs
True Ground LTL: & G ! bongchu & G ! mali_taste_of_thailand & G ! koko_pizza G ! sun_nong_dan
Out Ground LTL: & G ! bongchu & G ! mali_taste_of_thailand & G ! koko_pizza G ! sun_nong_dan
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Bongchu', 'Mali Taste of Thailand', 'Koko Pizza', 'Sun Nong Dan')
Out Lmks:['Sun Nong Dan', 'Bongchu', 'Koko Pizza', 'Mali Taste of Thailand']
Out Grounds: {'Sun Nong Dan', 'Bongchu', 'Mali Taste of Thailand', 'Koko Pizza'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Bongchu': 'b', 'Mali Taste of Thailand': 'c', 'Koko Pizza': 'd'}
True

216
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to Korean BBQ, Foothill Transit, Mali Taste of Thailand, or Wilshire/Normandie
True Ground LTL: & G ! korean_bbq & G ! foothill_transit & G ! mali_taste_of_thailand G ! wilshire_normandie
Out Ground LTL: & G ! foothill_transit & G ! mali_taste_of_thailand & G ! gwang_yang_bbq G ! wilshire_normandie
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! c & G ! d G ! b
True Lmks: ('Korean BBQ', 'Foothill Transit', 'Mali Taste of Thailand', 'Wilshire/Normandie')
Out Lmks:['Wilshire/Normandie', 'Korean BBQ', 'Foothill Transit', 'Mali Taste of Thailand']
Out Grounds: {'Foothill Transit', 'Wilshire/Normandie', 'Mali Taste of Thailand', 'Gwang Yang BBQ'}
Placeholder Map: {'Foothill Transit': 'a', 'Wilshire/Normandie': 'b', 'Mali Taste of Thailand': 'c', 'Gwang Yang BBQ': 'd'}
False

217
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: you can not go to POT, Crystal Spa, Gwang Yang BBQ, or Wako
True Ground LTL: & G ! pot & G ! crystal_spa & G ! gwang_yang_bbq G ! wako
Out Ground LTL: & G ! crystal_spa & G ! gwang_yang_bbq & G ! wako G ! pot
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! a & G ! d & G ! c G ! b
True Lmks: ('POT', 'Crystal Spa', 'Gwang Yang BBQ', 'Wako')
Out Lmks:['Crystal Spa', 'POT', 'Wako', 'Gwang Yang BBQ']
Out Grounds: {'Crystal Spa', 'POT', 'Wako', 'Gwang Yang BBQ'}
Placeholder Map: {'Crystal Spa': 'a', 'POT': 'b', 'Wako': 'c', 'Gwang Yang BBQ': 'd'}
True

218
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid The Boiling Crab, Sun Nong Dan, Wilshire/Normandie, and Korean Bbq, forever
True Ground LTL: & G ! the_boiling_crab & G ! sun_nong_dan & G ! wilshire_normandie G ! korean_bbq
Out Ground LTL: & G ! the_boiling_crab & G ! sun_nong_dan & G ! wilshire_normandie G ! gwang_yang_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! a & G ! c G ! d
True Lmks: ('The Boiling Crab', 'Sun Nong Dan', 'Wilshire/Normandie', 'Korean Bbq')
Out Lmks:['Sun Nong Dan', 'The Boiling Crab', 'Wilshire/Normandie', 'Korean Bbq']
Out Grounds: {'Sun Nong Dan', 'The Boiling Crab', 'Wilshire/Normandie', 'Gwang Yang BBQ'}
Placeholder Map: {'Sun Nong Dan': 'a', 'The Boiling Crab': 'b', 'Wilshire/Normandie': 'c', 'Gwang Yang BBQ': 'd'}
False

219
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: avoid California Design College, Wako, Mermaid Cafe, and Mali Taste of Thailand, forever
True Ground LTL: & G ! california_design_college & G ! wako & G ! mermaid_cafe G ! mali_taste_of_thailand
Out Ground LTL: & G ! california_design_college & G ! wako & G ! mermaid_cafe G ! mali_taste_of_thailand
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! a & G ! b G ! c
True Lmks: ('California Design College', 'Wako', 'Mermaid Cafe', 'Mali Taste of Thailand')
Out Lmks:['Mali Taste of Thailand', 'Mermaid Cafe', 'Wako', 'California Design College']
Out Grounds: {'Wako', 'Mermaid Cafe', 'Mali Taste of Thailand', 'California Design College'}
Placeholder Map: {'Wako': 'a', 'Mermaid Cafe': 'b', 'Mali Taste of Thailand': 'c', 'California Design College': 'd'}
True

220
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not make any single visit to Gwang Yang BBQ, Hair News, Home Cafe, or Neris Filipino Dining
True Ground LTL: & G ! gwang_yang_bbq & G ! hair_news & G ! home_cafe G ! neris_filipino_dining
Out Ground LTL: & G ! gwang_yang_bbq & G ! hair_news & G ! home_cafe G ! neris_filipino_dining
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! b & G ! a G ! d
True Lmks: ('Gwang Yang BBQ', 'Hair News', 'Home Cafe', 'Neris Filipino Dining')
Out Lmks:['Hair News', 'Neris Filipino Dining', 'Gwang Yang BBQ', 'Home Cafe']
Out Grounds: {'Home Cafe', 'Hair News', 'Gwang Yang BBQ', 'Neris Filipino Dining'}
Placeholder Map: {'Home Cafe': 'a', 'Hair News': 'b', 'Gwang Yang BBQ': 'c', 'Neris Filipino Dining': 'd'}
True

221
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: do not make any single visit to Central Plaza 1, Mermaid Cafe, Big 5 Sporting Goods, or Crystal Spa
True Ground LTL: & G ! central_plaza_1 & G ! mermaid_cafe & G ! big_5_sporting_goods G ! crystal_spa
Out Ground LTL: & G ! central_plaza_1 & G ! mermaid_cafe & G ! big_5_sporting_goods G ! crystal_spa
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! c G ! a
True Lmks: ('Central Plaza 1', 'Mermaid Cafe', 'Big 5 Sporting Goods', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'Big 5 Sporting Goods', 'Mermaid Cafe', 'Central Plaza 1']
Out Grounds: {'Crystal Spa', 'Mermaid Cafe', 'Big 5 Sporting Goods', 'Central Plaza 1'}
Placeholder Map: {'Crystal Spa': 'a', 'Mermaid Cafe': 'b', 'Big 5 Sporting Goods': 'c', 'Central Plaza 1': 'd'}
True

222
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Equitable Life Building, Korean Bbq, Details, and Wilshire-Kenmore Building, must never be allowed to be true
True Ground LTL: & G ! equitable_life_building & G ! korean_bbq & G ! details G ! wilshire_kenmore_building
Out Ground LTL: & G ! equitable_life_building & G ! gwang_yang_bbq & G ! details G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! c & G ! d & G ! b G ! a
True Lmks: ('Equitable Life Building', 'Korean Bbq', 'Details', 'Wilshire-Kenmore Building')
Out Lmks:['Details', 'Equitable Life Building', 'Korean Bbq', 'Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building', 'Details', 'Equitable Life Building', 'Gwang Yang BBQ'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Details': 'b', 'Equitable Life Building': 'c', 'Gwang Yang BBQ': 'd'}
False

223
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: Mermaid Cafe, Wako, The Line, and Carl's Jr., must never be allowed to be true
True Ground LTL: & G ! mermaid_cafe & G ! wako & G ! the_line G ! carls_jr
Out Ground LTL: & G ! mermaid_cafe & G ! wako & G ! the_line G ! carls_jr
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Mermaid Cafe', 'Wako', 'The Line', "Carl's Jr.")
Out Lmks:["Carl's Jr.", 'Mermaid Cafe', 'Wako', 'The Line']
Out Grounds: {"Carl's Jr.", 'Mermaid Cafe', 'Wako', 'The Line'}
Placeholder Map: {"Carl's Jr.": 'a', 'Mermaid Cafe': 'b', 'Wako': 'c', 'The Line': 'd'}
True

224
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go through any of Korean Bbq, Tarboosh middle East kitchen, The Gaylord Apartments, or Wako
True Ground LTL: & G ! korean_bbq & G ! tarboosh_middle_east_kitchen & G ! the_gaylord_apartments G ! wako
Out Ground LTL: & G ! gwang_yang_bbq & G ! tarboosh_middle_east_kitchen & G ! the_gaylord_apartments G ! wako
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! d & G ! b & G ! a G ! c
True Lmks: ('Korean Bbq', 'Tarboosh middle East kitchen', 'The Gaylord Apartments', 'Wako')
Out Lmks:['The Gaylord Apartments', 'Tarboosh middle East kitchen', 'Wako', 'Korean Bbq']
Out Grounds: {'The Gaylord Apartments', 'Tarboosh middle East kitchen', 'Wako', 'Gwang Yang BBQ'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Tarboosh middle East kitchen': 'b', 'Wako': 'c', 'Gwang Yang BBQ': 'd'}
False

225
global_avoidance ['a', 'b', 'c', 'd'] Input utterance: never go through any of Coffee Bean & Tea Leaf, POT, Robeks Juice, or Metro
True Ground LTL: & G ! coffee_bean_&_tea_leaf & G ! pot & G ! robeks_juice G ! metro
Out Ground LTL: & G ! coffee_bean_&_tea_leaf & G ! pot & G ! robeks_juice G ! metro
True Symbolic LTL: & G ! a & G ! b & G ! c G ! d
Out Symbolic LTL: & G ! b & G ! c & G ! d G ! a
True Lmks: ('Coffee Bean & Tea Leaf', 'POT', 'Robeks Juice', 'Metro')
Out Lmks:['Metro', 'Coffee Bean & Tea Leaf', 'POT', 'Robeks Juice']
Out Grounds: {'Metro', 'Coffee Bean & Tea Leaf', 'POT', 'Robeks Juice'}
Placeholder Map: {'Metro': 'a', 'Coffee Bean & Tea Leaf': 'b', 'POT': 'c', 'Robeks Juice': 'd'}
True

226
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never visit Foothill Transit, Etude Lounge, Korean BBQ, The Gaylord Apartments, or Equitable Life Building
True Ground LTL: & G ! foothill_transit & G ! etude_lounge & G ! korean_bbq & G ! the_gaylord_apartments G ! equitable_life_building
Out Ground LTL: & G ! foothill_transit & G ! etude_lounge & G ! gwang_yang_bbq & G ! the_gaylord_apartments G ! equitable_life_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! d & G ! c G ! a
True Lmks: ('Foothill Transit', 'Etude Lounge', 'Korean BBQ', 'The Gaylord Apartments', 'Equitable Life Building')
Out Lmks:['Equitable Life Building', 'Etude Lounge', 'Korean BBQ', 'The Gaylord Apartments', 'Foothill Transit']
Out Grounds: {'Equitable Life Building', 'Etude Lounge', 'The Gaylord Apartments', 'Gwang Yang BBQ', 'Foothill Transit'}
Placeholder Map: {'Equitable Life Building': 'a', 'Etude Lounge': 'b', 'The Gaylord Apartments': 'c', 'Gwang Yang BBQ': 'd', 'Foothill Transit': 'h'}
False

227
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never visit POT, Carl's Jr., Korean BBQ, The Gaylord Apartments, or Tarboosh middle East kitchen
True Ground LTL: & G ! pot & G ! carls_jr & G ! korean_bbq & G ! the_gaylord_apartments G ! tarboosh_middle_east_kitchen
Out Ground LTL: & G ! pot & G ! carls_jr & G ! gwang_yang_bbq & G ! the_gaylord_apartments G ! tarboosh_middle_east_kitchen
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! b & G ! d & G ! c G ! a
True Lmks: ('POT', "Carl's Jr.", 'Korean BBQ', 'The Gaylord Apartments', 'Tarboosh middle East kitchen')
Out Lmks:['Tarboosh middle East kitchen', "Carl's Jr.", 'Korean BBQ', 'The Gaylord Apartments', 'POT']
Out Grounds: {'Tarboosh middle East kitchen', "Carl's Jr.", 'The Gaylord Apartments', 'Gwang Yang BBQ', 'POT'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', "Carl's Jr.": 'b', 'The Gaylord Apartments': 'c', 'Gwang Yang BBQ': 'd', 'POT': 'h'}
False

228
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can never go to Bongchu, BBQ Premium Chicken, POT, Togo's, or Bayou Smokehouse
True Ground LTL: & G ! bongchu & G ! bbq_premium_chicken & G ! pot & G ! togos G ! bayou_smokehouse
Out Ground LTL: & G ! bbq_premium_chicken & G ! pot & G ! togos G ! bongchu
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! h
True Lmks: ('Bongchu', 'BBQ Premium Chicken', 'POT', "Togo's", 'Bayou Smokehouse')
Out Lmks:["Togo's", 'BBQ Premium Chicken', 'Bayou Smokehouse', 'POT', 'Bongchu']
Out Grounds: {"Togo's", 'BBQ Premium Chicken', 'Bayou Smokehouse', 'POT', 'Bongchu'}
Placeholder Map: {"Togo's": 'a', 'BBQ Premium Chicken': 'b', 'Bayou Smokehouse': 'c', 'POT': 'd', 'Bongchu': 'h'}
False

229
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can never go to Metro, Foothill Transit, Equitable Life Building, Crystal Spa, or Details
True Ground LTL: & G ! metro & G ! foothill_transit & G ! equitable_life_building & G ! crystal_spa G ! details
Out Ground LTL: & G ! metro & G ! foothill_transit & G ! equitable_life_building & G ! crystal_spa G ! details
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! a & G ! d G ! b
True Lmks: ('Metro', 'Foothill Transit', 'Equitable Life Building', 'Crystal Spa', 'Details')
Out Lmks:['Equitable Life Building', 'Details', 'Metro', 'Crystal Spa', 'Foothill Transit']
Out Grounds: {'Equitable Life Building', 'Details', 'Metro', 'Crystal Spa', 'Foothill Transit'}
Placeholder Map: {'Equitable Life Building': 'a', 'Details': 'b', 'Metro': 'c', 'Crystal Spa': 'd', 'Foothill Transit': 'h'}
True

230
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Neris Filipino Dining, Consulat General of the Republic of Indonesia, Etude Lounge, Seaweed, or The Boiling Crab, at any time
True Ground LTL: & G ! neris_filipino_dining & G ! consulat_general_of_the_republic_of_indonesia & G ! etude_lounge & G ! seaweed G ! the_boiling_crab
Out Ground LTL: & G ! consulat_general_of_the_republic_of_indonesia & G ! etude_lounge & G ! seaweed G ! the_boiling_crab
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! a G ! c
True Lmks: ('Neris Filipino Dining', 'Consulat General of the Republic of Indonesia', 'Etude Lounge', 'Seaweed', 'The Boiling Crab')
Out Lmks:['Seaweed', 'Consulat General of the Republic of Indonesia', 'The Boiling Crab', 'Etude Lounge', 'Neris Filipino Dining']
Out Grounds: {'Seaweed', 'Consulat General of the Republic of Indonesia', 'The Boiling Crab', 'Etude Lounge', 'Neris Filipino Dining'}
Placeholder Map: {'Seaweed': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'The Boiling Crab': 'c', 'Etude Lounge': 'd', 'Neris Filipino Dining': 'h'}
False

231
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Central Plaza 3, Mali Taste of Thailand, Koko Pizza, Bongchu, or Wilshire-Kenmore Building, at any time
True Ground LTL: & G ! central_plaza_3 & G ! mali_taste_of_thailand & G ! koko_pizza & G ! bongchu G ! wilshire_kenmore_building
Out Ground LTL: & G ! mali_taste_of_thailand & G ! koko_pizza & G ! bongchu G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! b & G ! h G ! c
True Lmks: ('Central Plaza 3', 'Mali Taste of Thailand', 'Koko Pizza', 'Bongchu', 'Wilshire-Kenmore Building')
Out Lmks:['Mali Taste of Thailand', 'Koko Pizza', 'Wilshire-Kenmore Building', 'Central Plaza 3', 'Bongchu']
Out Grounds: {'Mali Taste of Thailand', 'Koko Pizza', 'Wilshire-Kenmore Building', 'Central Plaza 3', 'Bongchu'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Koko Pizza': 'b', 'Wilshire-Kenmore Building': 'c', 'Central Plaza 3': 'd', 'Bongchu': 'h'}
False

232
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never visit The Line, Zan ResPub, Seaweed, Tarboosh middle East kitchen, or Metro
True Ground LTL: & G ! the_line & G ! zan_respub & G ! seaweed & G ! tarboosh_middle_east_kitchen G ! metro
Out Ground LTL: & G ! the_line & G ! zan_respub & G ! seaweed & G ! tarboosh_middle_east_kitchen G ! metro
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! a & G ! b G ! h
True Lmks: ('The Line', 'Zan ResPub', 'Seaweed', 'Tarboosh middle East kitchen', 'Metro')
Out Lmks:['Seaweed', 'Tarboosh middle East kitchen', 'Zan ResPub', 'The Line', 'Metro']
Out Grounds: {'Seaweed', 'Tarboosh middle East kitchen', 'Zan ResPub', 'The Line', 'Metro'}
Placeholder Map: {'Seaweed': 'a', 'Tarboosh middle East kitchen': 'b', 'Zan ResPub': 'c', 'The Line': 'd', 'Metro': 'h'}
True

233
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never visit Korean Bbq, Mali Taste of Thailand, Korean BBQ, Carl's Jr., or POT
True Ground LTL: & G ! korean_bbq & G ! mali_taste_of_thailand & G ! korean_bbq & G ! carls_jr G ! pot
Out Ground LTL: & G ! gwang_yang_bbq & G ! mali_taste_of_thailand & G ! gwang_yang_bbq & G ! carls_jr G ! pot
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! d & G ! a G ! b
True Lmks: ('Korean Bbq', 'Mali Taste of Thailand', 'Korean BBQ', "Carl's Jr.", 'POT')
Out Lmks:['Mali Taste of Thailand', "Carl's Jr.", 'Korean BBQ', 'POT', 'Korean Bbq']
Out Grounds: {"Carl's Jr.", 'POT', 'Mali Taste of Thailand', 'Gwang Yang BBQ'}
Placeholder Map: {"Carl's Jr.": 'a', 'POT': 'b', 'Mali Taste of Thailand': 'c', 'Gwang Yang BBQ': 'd'}
False

234
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always avoid going to Home Cafe, Coffee Bean & Tea Leaf, Seaweed, Big 5 Sporting Goods, and Sun Nong Dan
True Ground LTL: & G ! home_cafe & G ! coffee_bean_&_tea_leaf & G ! seaweed & G ! big_5_sporting_goods G ! sun_nong_dan
Out Ground LTL: & G ! home_cafe & G ! coffee_bean_&_tea_leaf & G ! seaweed & G ! big_5_sporting_goods G ! sun_nong_dan
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! a & G ! h G ! d
True Lmks: ('Home Cafe', 'Coffee Bean & Tea Leaf', 'Seaweed', 'Big 5 Sporting Goods', 'Sun Nong Dan')
Out Lmks:['Seaweed', 'Coffee Bean & Tea Leaf', 'Home Cafe', 'Sun Nong Dan', 'Big 5 Sporting Goods']
Out Grounds: {'Seaweed', 'Coffee Bean & Tea Leaf', 'Home Cafe', 'Sun Nong Dan', 'Big 5 Sporting Goods'}
Placeholder Map: {'Seaweed': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Home Cafe': 'c', 'Sun Nong Dan': 'd', 'Big 5 Sporting Goods': 'h'}
True

235
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always avoid going to Consulat General of the Republic of Indonesia, POT, Big 5 Sporting Goods, Details, and Metro
True Ground LTL: & G ! consulat_general_of_the_republic_of_indonesia & G ! pot & G ! big_5_sporting_goods & G ! details G ! metro
Out Ground LTL: & G ! consulat_general_of_the_republic_of_indonesia & G ! pot & G ! big_5_sporting_goods & G ! details G ! metro
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! d & G ! h & G ! b G ! c
True Lmks: ('Consulat General of the Republic of Indonesia', 'POT', 'Big 5 Sporting Goods', 'Details', 'Metro')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Details', 'Metro', 'POT', 'Big 5 Sporting Goods']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Details', 'Metro', 'POT', 'Big 5 Sporting Goods'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Details': 'b', 'Metro': 'c', 'POT': 'd', 'Big 5 Sporting Goods': 'h'}
True

236
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always stay away from Hair News, BBQ Premium Chicken, The Boiling Crab, Foothill Transit, and The Gaylord Apartments
True Ground LTL: & G ! hair_news & G ! bbq_premium_chicken & G ! the_boiling_crab & G ! foothill_transit G ! the_gaylord_apartments
Out Ground LTL: & G ! hair_news & G ! bbq_premium_chicken & G ! the_boiling_crab & G ! foothill_transit G ! the_gaylord_apartments
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a & G ! h G ! d
True Lmks: ('Hair News', 'BBQ Premium Chicken', 'The Boiling Crab', 'Foothill Transit', 'The Gaylord Apartments')
Out Lmks:['The Boiling Crab', 'Hair News', 'BBQ Premium Chicken', 'The Gaylord Apartments', 'Foothill Transit']
Out Grounds: {'The Boiling Crab', 'Hair News', 'BBQ Premium Chicken', 'The Gaylord Apartments', 'Foothill Transit'}
Placeholder Map: {'The Boiling Crab': 'a', 'Hair News': 'b', 'BBQ Premium Chicken': 'c', 'The Gaylord Apartments': 'd', 'Foothill Transit': 'h'}
True

237
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always stay away from Equitable Life Building, The Gaylord Apartments, Sun Nong Dan, Zan ResPub, and Hair News
True Ground LTL: & G ! equitable_life_building & G ! the_gaylord_apartments & G ! sun_nong_dan & G ! zan_respub G ! hair_news
Out Ground LTL: & G ! equitable_life_building & G ! the_gaylord_apartments & G ! sun_nong_dan & G ! zan_respub G ! hair_news
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! h & G ! d G ! a
True Lmks: ('Equitable Life Building', 'The Gaylord Apartments', 'Sun Nong Dan', 'Zan ResPub', 'Hair News')
Out Lmks:['Hair News', 'Equitable Life Building', 'The Gaylord Apartments', 'Zan ResPub', 'Sun Nong Dan']
Out Grounds: {'Hair News', 'Equitable Life Building', 'The Gaylord Apartments', 'Zan ResPub', 'Sun Nong Dan'}
Placeholder Map: {'Hair News': 'a', 'Equitable Life Building': 'b', 'The Gaylord Apartments': 'c', 'Zan ResPub': 'd', 'Sun Nong Dan': 'h'}
True

238
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you have to avoid Coffee Bean & Tea Leaf, Zan ResPub, Neris Filipino Dining, Big 5 Sporting Goods, and Bongchu, at all costs
True Ground LTL: & G ! coffee_bean_&_tea_leaf & G ! zan_respub & G ! neris_filipino_dining & G ! big_5_sporting_goods G ! bongchu
Out Ground LTL: & G ! coffee_bean_&_tea_leaf & G ! zan_respub & G ! neris_filipino_dining & G ! big_5_sporting_goods G ! bongchu
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! c & G ! a & G ! d G ! h
True Lmks: ('Coffee Bean & Tea Leaf', 'Zan ResPub', 'Neris Filipino Dining', 'Big 5 Sporting Goods', 'Bongchu')
Out Lmks:['Bongchu', 'Neris Filipino Dining', 'Coffee Bean & Tea Leaf', 'Zan ResPub', 'Big 5 Sporting Goods']
Out Grounds: {'Neris Filipino Dining', 'Coffee Bean & Tea Leaf', 'Zan ResPub', 'Big 5 Sporting Goods', 'Bongchu'}
Placeholder Map: {'Neris Filipino Dining': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Zan ResPub': 'c', 'Big 5 Sporting Goods': 'd', 'Bongchu': 'h'}
True

239
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you have to avoid California Design College, Bongchu, The Gaylord Apartments, Korean Bbq, and BBQ Premium Chicken, at all costs
True Ground LTL: & G ! california_design_college & G ! bongchu & G ! the_gaylord_apartments & G ! korean_bbq G ! bbq_premium_chicken
Out Ground LTL: & G ! california_design_college & G ! bongchu & G ! the_gaylord_apartments & G ! gwang_yang_bbq G ! bbq_premium_chicken
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! h & G ! b & G ! c G ! a
True Lmks: ('California Design College', 'Bongchu', 'The Gaylord Apartments', 'Korean Bbq', 'BBQ Premium Chicken')
Out Lmks:['BBQ Premium Chicken', 'The Gaylord Apartments', 'California Design College', 'Bongchu', 'Korean Bbq']
Out Grounds: {'BBQ Premium Chicken', 'The Gaylord Apartments', 'Gwang Yang BBQ', 'California Design College', 'Bongchu'}
Placeholder Map: {'BBQ Premium Chicken': 'a', 'The Gaylord Apartments': 'b', 'Gwang Yang BBQ': 'c', 'California Design College': 'd', 'Bongchu': 'h'}
False

240
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Robeks Juice, never go to The Line, never go to Sun Nong Dan, never reach Hair News, and never reach Big 5 Sporting Goods
True Ground LTL: & G ! robeks_juice & G ! the_line & G ! sun_nong_dan & G ! hair_news G ! big_5_sporting_goods
Out Ground LTL: & G ! robeks_juice & G ! the_line & G ! sun_nong_dan & G ! hair_news G ! big_5_sporting_goods
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! c & G ! d & G ! a G ! b
True Lmks: ('Robeks Juice', 'The Line', 'Sun Nong Dan', 'Hair News', 'Big 5 Sporting Goods')
Out Lmks:['Hair News', 'Robeks Juice', 'The Line', 'Sun Nong Dan', 'Big 5 Sporting Goods']
Out Grounds: {'Hair News', 'Big 5 Sporting Goods', 'The Line', 'Sun Nong Dan', 'Robeks Juice'}
Placeholder Map: {'Hair News': 'a', 'Big 5 Sporting Goods': 'b', 'The Line': 'c', 'Sun Nong Dan': 'd', 'Robeks Juice': 'h'}
True

241
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Seaweed, never go to Crystal Spa, never go to Details, never reach Ice Cream, and never reach Wilshire/Normandie
True Ground LTL: & G ! seaweed & G ! crystal_spa & G ! details & G ! ice_cream G ! wilshire_normandie
Out Ground LTL: & G ! seaweed & G ! crystal_spa & G ! details & G ! ice_cream G ! wilshire_normandie
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! b & G ! d G ! c
True Lmks: ('Seaweed', 'Crystal Spa', 'Details', 'Ice Cream', 'Wilshire/Normandie')
Out Lmks:['Seaweed', 'Details', 'Wilshire/Normandie', 'Ice Cream', 'Crystal Spa']
Out Grounds: {'Seaweed', 'Details', 'Wilshire/Normandie', 'Ice Cream', 'Crystal Spa'}
Placeholder Map: {'Seaweed': 'a', 'Details': 'b', 'Wilshire/Normandie': 'c', 'Ice Cream': 'd', 'Crystal Spa': 'h'}
True

242
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never reach the following locations Mali Taste of Thailand, Sun Nong Dan, Togo's, Consulat General of the Republic of Indonesia, and Carl's Jr.
True Ground LTL: & G ! mali_taste_of_thailand & G ! sun_nong_dan & G ! togos & G ! consulat_general_of_the_republic_of_indonesia G ! carls_jr
Out Ground LTL: & G ! mali_taste_of_thailand & G ! sun_nong_dan & G ! togos & G ! consulat_general_of_the_republic_of_indonesia G ! carls_jr
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! h & G ! c & G ! a G ! d
True Lmks: ('Mali Taste of Thailand', 'Sun Nong Dan', "Togo's", 'Consulat General of the Republic of Indonesia', "Carl's Jr.")
Out Lmks:['Consulat General of the Republic of Indonesia', 'Mali Taste of Thailand', "Togo's", "Carl's Jr.", 'Sun Nong Dan']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Mali Taste of Thailand', "Togo's", "Carl's Jr.", 'Sun Nong Dan'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Mali Taste of Thailand': 'b', "Togo's": 'c', "Carl's Jr.": 'd', 'Sun Nong Dan': 'h'}
True

243
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: make sure you never reach the following locations Consulat General of the Republic of Indonesia, Sun Nong Dan, Ice Cream, Koko Pizza, and Hair News
True Ground LTL: & G ! consulat_general_of_the_republic_of_indonesia & G ! sun_nong_dan & G ! ice_cream & G ! koko_pizza G ! hair_news
Out Ground LTL: & G ! consulat_general_of_the_republic_of_indonesia & G ! sun_nong_dan & G ! ice_cream & G ! koko_pizza G ! hair_news
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! d & G ! c & G ! h G ! b
True Lmks: ('Consulat General of the Republic of Indonesia', 'Sun Nong Dan', 'Ice Cream', 'Koko Pizza', 'Hair News')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Hair News', 'Ice Cream', 'Sun Nong Dan', 'Koko Pizza']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Hair News', 'Ice Cream', 'Sun Nong Dan', 'Koko Pizza'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Hair News': 'b', 'Ice Cream': 'c', 'Sun Nong Dan': 'd', 'Koko Pizza': 'h'}
True

244
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that Ice Cream, The Line, The Gaylord Apartments, Hair News, and Wako, are never visited
True Ground LTL: & G ! ice_cream & G ! the_line & G ! the_gaylord_apartments & G ! hair_news G ! wako
Out Ground LTL: & G ! ice_cream & G ! the_line & G ! the_gaylord_apartments & G ! hair_news G ! wako
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! b & G ! a G ! d
True Lmks: ('Ice Cream', 'The Line', 'The Gaylord Apartments', 'Hair News', 'Wako')
Out Lmks:['Hair News', 'The Gaylord Apartments', 'Ice Cream', 'Wako', 'The Line']
Out Grounds: {'Hair News', 'The Gaylord Apartments', 'Ice Cream', 'Wako', 'The Line'}
Placeholder Map: {'Hair News': 'a', 'The Gaylord Apartments': 'b', 'Ice Cream': 'c', 'Wako': 'd', 'The Line': 'h'}
True

245
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that California Design College, Korean Bbq, Happy Noodle, Wilshire-Kenmore Building, and Mali Taste of Thailand, are never visited
True Ground LTL: & G ! california_design_college & G ! korean_bbq & G ! happy_noodle & G ! wilshire_kenmore_building G ! mali_taste_of_thailand
Out Ground LTL: & G ! california_design_college & G ! gwang_yang_bbq & G ! happy_noodle & G ! wilshire_kenmore_building G ! mali_taste_of_thailand
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! b & G ! h G ! a
True Lmks: ('California Design College', 'Korean Bbq', 'Happy Noodle', 'Wilshire-Kenmore Building', 'Mali Taste of Thailand')
Out Lmks:['Mali Taste of Thailand', 'Happy Noodle', 'California Design College', 'Wilshire-Kenmore Building', 'Korean Bbq']
Out Grounds: {'Mali Taste of Thailand', 'Happy Noodle', 'Gwang Yang BBQ', 'California Design College', 'Wilshire-Kenmore Building'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Happy Noodle': 'b', 'Gwang Yang BBQ': 'c', 'California Design College': 'd', 'Wilshire-Kenmore Building': 'h'}
False

246
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Details, Seaweed, Central Plaza 3, Mermaid Cafe, and Neris Filipino Dining, should never be reached
True Ground LTL: & G ! details & G ! seaweed & G ! central_plaza_3 & G ! mermaid_cafe G ! neris_filipino_dining
Out Ground LTL: & G ! details & G ! seaweed & G ! central_plaza_3 & G ! mermaid_cafe G ! neris_filipino_dining
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! a & G ! h & G ! d G ! b
True Lmks: ('Details', 'Seaweed', 'Central Plaza 3', 'Mermaid Cafe', 'Neris Filipino Dining')
Out Lmks:['Seaweed', 'Neris Filipino Dining', 'Details', 'Mermaid Cafe', 'Central Plaza 3']
Out Grounds: {'Seaweed', 'Neris Filipino Dining', 'Details', 'Mermaid Cafe', 'Central Plaza 3'}
Placeholder Map: {'Seaweed': 'a', 'Neris Filipino Dining': 'b', 'Details': 'c', 'Mermaid Cafe': 'd', 'Central Plaza 3': 'h'}
True

247
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Wilshire/Normandie, Coffee Bean & Tea Leaf, Etude Lounge, The Line, and Korean BBQ, should never be reached
True Ground LTL: & G ! wilshire_normandie & G ! coffee_bean_&_tea_leaf & G ! etude_lounge & G ! the_line G ! korean_bbq
Out Ground LTL: & G ! wilshire_normandie & G ! coffee_bean_&_tea_leaf & G ! etude_lounge & G ! the_line G ! gwang_yang_bbq
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! a & G ! h G ! d
True Lmks: ('Wilshire/Normandie', 'Coffee Bean & Tea Leaf', 'Etude Lounge', 'The Line', 'Korean BBQ')
Out Lmks:['Etude Lounge', 'Coffee Bean & Tea Leaf', 'Korean BBQ', 'Wilshire/Normandie', 'The Line']
Out Grounds: {'Etude Lounge', 'Coffee Bean & Tea Leaf', 'Wilshire/Normandie', 'Gwang Yang BBQ', 'The Line'}
Placeholder Map: {'Etude Lounge': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Wilshire/Normandie': 'c', 'Gwang Yang BBQ': 'd', 'The Line': 'h'}
False

248
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Foothill Transit, Korean BBQ, Mermaid Cafe, Zan ResPub, or POT
True Ground LTL: & G ! foothill_transit & G ! korean_bbq & G ! mermaid_cafe & G ! zan_respub G ! pot
Out Ground LTL: & G ! foothill_transit & G ! gwang_yang_bbq & G ! mermaid_cafe & G ! zan_respub G ! pot
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! a & G ! b G ! h
True Lmks: ('Foothill Transit', 'Korean BBQ', 'Mermaid Cafe', 'Zan ResPub', 'POT')
Out Lmks:['Korean BBQ', 'Mermaid Cafe', 'Zan ResPub', 'Foothill Transit', 'POT']
Out Grounds: {'Mermaid Cafe', 'Zan ResPub', 'Gwang Yang BBQ', 'Foothill Transit', 'POT'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Zan ResPub': 'b', 'Gwang Yang BBQ': 'c', 'Foothill Transit': 'd', 'POT': 'h'}
False

249
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: never go to Seaweed, Metro, Robeks Juice, The Line, or Happy Noodle
True Ground LTL: & G ! seaweed & G ! metro & G ! robeks_juice & G ! the_line G ! happy_noodle
Out Ground LTL: & G ! seaweed & G ! metro & G ! robeks_juice & G ! the_line G ! happy_noodle
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! d & G ! h & G ! c G ! b
True Lmks: ('Seaweed', 'Metro', 'Robeks Juice', 'The Line', 'Happy Noodle')
Out Lmks:['Seaweed', 'Happy Noodle', 'The Line', 'Metro', 'Robeks Juice']
Out Grounds: {'Seaweed', 'Happy Noodle', 'The Line', 'Metro', 'Robeks Juice'}
Placeholder Map: {'Seaweed': 'a', 'Happy Noodle': 'b', 'The Line': 'c', 'Metro': 'd', 'Robeks Juice': 'h'}
True

250
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not go to Central Plaza 3, Etude Lounge, Ice Cream, Big 5 Sporting Goods, or Wilshire/Normandie
True Ground LTL: & G ! central_plaza_3 & G ! etude_lounge & G ! ice_cream & G ! big_5_sporting_goods G ! wilshire_normandie
Out Ground LTL: & G ! central_plaza_3 & G ! etude_lounge & G ! ice_cream & G ! big_5_sporting_goods G ! wilshire_normandie
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! a & G ! c & G ! h G ! b
True Lmks: ('Central Plaza 3', 'Etude Lounge', 'Ice Cream', 'Big 5 Sporting Goods', 'Wilshire/Normandie')
Out Lmks:['Etude Lounge', 'Wilshire/Normandie', 'Ice Cream', 'Central Plaza 3', 'Big 5 Sporting Goods']
Out Grounds: {'Etude Lounge', 'Wilshire/Normandie', 'Ice Cream', 'Central Plaza 3', 'Big 5 Sporting Goods'}
Placeholder Map: {'Etude Lounge': 'a', 'Wilshire/Normandie': 'b', 'Ice Cream': 'c', 'Central Plaza 3': 'd', 'Big 5 Sporting Goods': 'h'}
True

251
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not go to Koko Pizza, Bayou Smokehouse, Details, Central Plaza 3, or Consulat General of the Republic of Indonesia
True Ground LTL: & G ! koko_pizza & G ! bayou_smokehouse & G ! details & G ! central_plaza_3 G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: & G ! bayou_smokehouse & G ! details & G ! central_plaza_3 G ! consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! d G ! a
True Lmks: ('Koko Pizza', 'Bayou Smokehouse', 'Details', 'Central Plaza 3', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Details', 'Bayou Smokehouse', 'Central Plaza 3', 'Koko Pizza']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Details', 'Bayou Smokehouse', 'Central Plaza 3', 'Koko Pizza'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Details': 'b', 'Bayou Smokehouse': 'c', 'Central Plaza 3': 'd', 'Koko Pizza': 'h'}
False

252
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can go anywhere but Sun Nong Dan, The Line, Togo's, Bongchu, and Koko Pizza
True Ground LTL: & G ! sun_nong_dan & G ! the_line & G ! togos & G ! bongchu G ! koko_pizza
Out Ground LTL: & G ! sun_nong_dan & G ! the_line & G ! togos & G ! bongchu G ! koko_pizza
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! b & G ! h G ! a
True Lmks: ('Sun Nong Dan', 'The Line', "Togo's", 'Bongchu', 'Koko Pizza')
Out Lmks:['Koko Pizza', "Togo's", 'The Line', 'Sun Nong Dan', 'Bongchu']
Out Grounds: {'Koko Pizza', "Togo's", 'The Line', 'Sun Nong Dan', 'Bongchu'}
Placeholder Map: {'Koko Pizza': 'a', "Togo's": 'b', 'The Line': 'c', 'Sun Nong Dan': 'd', 'Bongchu': 'h'}
True

253
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can go anywhere but Seaweed, Etude Lounge, Central Plaza 3, Wilshire-Kenmore Building, and Metro
True Ground LTL: & G ! seaweed & G ! etude_lounge & G ! central_plaza_3 & G ! wilshire_kenmore_building G ! metro
Out Ground LTL: & G ! seaweed & G ! etude_lounge & G ! central_plaza_3 & G ! wilshire_kenmore_building G ! metro
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! b & G ! d & G ! c G ! h
True Lmks: ('Seaweed', 'Etude Lounge', 'Central Plaza 3', 'Wilshire-Kenmore Building', 'Metro')
Out Lmks:['Seaweed', 'Wilshire-Kenmore Building', 'Etude Lounge', 'Metro', 'Central Plaza 3']
Out Grounds: {'Seaweed', 'Etude Lounge', 'Wilshire-Kenmore Building', 'Central Plaza 3', 'Metro'}
Placeholder Map: {'Seaweed': 'a', 'Etude Lounge': 'b', 'Wilshire-Kenmore Building': 'c', 'Central Plaza 3': 'd', 'Metro': 'h'}
True

254
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: The Boiling Crab, Details, Ice Cream, Wilshire-Kenmore Building, and Bongchu, can not be visited at any time
True Ground LTL: & G ! the_boiling_crab & G ! details & G ! ice_cream & G ! wilshire_kenmore_building G ! bongchu
Out Ground LTL: & G ! the_boiling_crab & G ! details & G ! ice_cream & G ! wilshire_kenmore_building G ! bongchu
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
True Lmks: ('The Boiling Crab', 'Details', 'Ice Cream', 'Wilshire-Kenmore Building', 'Bongchu')
Out Lmks:['The Boiling Crab', 'Details', 'Ice Cream', 'Wilshire-Kenmore Building', 'Bongchu']
Out Grounds: {'The Boiling Crab', 'Details', 'Ice Cream', 'Wilshire-Kenmore Building', 'Bongchu'}
Placeholder Map: {'The Boiling Crab': 'a', 'Details': 'b', 'Ice Cream': 'c', 'Wilshire-Kenmore Building': 'd', 'Bongchu': 'h'}
True

255
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Big 5 Sporting Goods, Togo's, Central Plaza 3, Home Cafe, and BBQ Premium Chicken, can not be visited at any time
True Ground LTL: & G ! big_5_sporting_goods & G ! togos & G ! central_plaza_3 & G ! home_cafe G ! bbq_premium_chicken
Out Ground LTL: & G ! big_5_sporting_goods & G ! togos & G ! central_plaza_3 & G ! home_cafe G ! bbq_premium_chicken
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! a & G ! d & G ! c G ! b
True Lmks: ('Big 5 Sporting Goods', "Togo's", 'Central Plaza 3', 'Home Cafe', 'BBQ Premium Chicken')
Out Lmks:["Togo's", 'BBQ Premium Chicken', 'Home Cafe', 'Central Plaza 3', 'Big 5 Sporting Goods']
Out Grounds: {"Togo's", 'BBQ Premium Chicken', 'Home Cafe', 'Central Plaza 3', 'Big 5 Sporting Goods'}
Placeholder Map: {"Togo's": 'a', 'BBQ Premium Chicken': 'b', 'Home Cafe': 'c', 'Central Plaza 3': 'd', 'Big 5 Sporting Goods': 'h'}
True

256
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always keep away from Happy Noodle, Wako, Details, The Gaylord Apartments, and Coffee Bean & Tea Leaf
True Ground LTL: & G ! happy_noodle & G ! wako & G ! details & G ! the_gaylord_apartments G ! coffee_bean_&_tea_leaf
Out Ground LTL: & G ! happy_noodle & G ! wako & G ! details & G ! the_gaylord_apartments G ! coffee_bean_&_tea_leaf
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! c & G ! d G ! b
True Lmks: ('Happy Noodle', 'Wako', 'Details', 'The Gaylord Apartments', 'Coffee Bean & Tea Leaf')
Out Lmks:['Happy Noodle', 'Coffee Bean & Tea Leaf', 'Details', 'The Gaylord Apartments', 'Wako']
Out Grounds: {'Happy Noodle', 'Coffee Bean & Tea Leaf', 'Details', 'The Gaylord Apartments', 'Wako'}
Placeholder Map: {'Happy Noodle': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Details': 'c', 'The Gaylord Apartments': 'd', 'Wako': 'h'}
True

257
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: always keep away from Mali Taste of Thailand, Big 5 Sporting Goods, The Line, Coffee Bean & Tea Leaf, and The Gaylord Apartments
True Ground LTL: & G ! mali_taste_of_thailand & G ! big_5_sporting_goods & G ! the_line & G ! coffee_bean_&_tea_leaf G ! the_gaylord_apartments
Out Ground LTL: & G ! mali_taste_of_thailand & G ! big_5_sporting_goods & G ! the_line & G ! coffee_bean_&_tea_leaf G ! the_gaylord_apartments
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! d & G ! b G ! c
True Lmks: ('Mali Taste of Thailand', 'Big 5 Sporting Goods', 'The Line', 'Coffee Bean & Tea Leaf', 'The Gaylord Apartments')
Out Lmks:['Mali Taste of Thailand', 'Coffee Bean & Tea Leaf', 'The Gaylord Apartments', 'The Line', 'Big 5 Sporting Goods']
Out Grounds: {'Mali Taste of Thailand', 'Coffee Bean & Tea Leaf', 'The Gaylord Apartments', 'The Line', 'Big 5 Sporting Goods'}
Placeholder Map: {'Mali Taste of Thailand': 'a', 'Coffee Bean & Tea Leaf': 'b', 'The Gaylord Apartments': 'c', 'The Line': 'd', 'Big 5 Sporting Goods': 'h'}
True

258
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you must avoid Crystal Spa, Wako, Metro, Robeks Juice, and Equitable Life Building, at all costs
True Ground LTL: & G ! crystal_spa & G ! wako & G ! metro & G ! robeks_juice G ! equitable_life_building
Out Ground LTL: & G ! crystal_spa & G ! wako & G ! metro & G ! robeks_juice G ! equitable_life_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! b & G ! c & G ! h G ! a
True Lmks: ('Crystal Spa', 'Wako', 'Metro', 'Robeks Juice', 'Equitable Life Building')
Out Lmks:['Equitable Life Building', 'Wako', 'Metro', 'Crystal Spa', 'Robeks Juice']
Out Grounds: {'Equitable Life Building', 'Wako', 'Metro', 'Crystal Spa', 'Robeks Juice'}
Placeholder Map: {'Equitable Life Building': 'a', 'Wako': 'b', 'Metro': 'c', 'Crystal Spa': 'd', 'Robeks Juice': 'h'}
True

259
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you must avoid The Boiling Crab, Carl's Jr., Happy Noodle, Togo's, and Wilshire-Kenmore Building, at all costs
True Ground LTL: & G ! the_boiling_crab & G ! carls_jr & G ! happy_noodle & G ! togos G ! wilshire_kenmore_building
Out Ground LTL: & G ! the_boiling_crab & G ! carls_jr & G ! happy_noodle & G ! togos G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! c & G ! d & G ! b G ! h
True Lmks: ('The Boiling Crab', "Carl's Jr.", 'Happy Noodle', "Togo's", 'Wilshire-Kenmore Building')
Out Lmks:['The Boiling Crab', "Togo's", "Carl's Jr.", 'Happy Noodle', 'Wilshire-Kenmore Building']
Out Grounds: {'The Boiling Crab', "Togo's", "Carl's Jr.", 'Happy Noodle', 'Wilshire-Kenmore Building'}
Placeholder Map: {'The Boiling Crab': 'a', "Togo's": 'b', "Carl's Jr.": 'c', 'Happy Noodle': 'd', 'Wilshire-Kenmore Building': 'h'}
True

260
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Carl's Jr., Hair News, Wilshire-Kenmore Building, Tarboosh middle East kitchen, or Consulat General of the Republic of Indonesia
True Ground LTL: & G ! carls_jr & G ! hair_news & G ! wilshire_kenmore_building & G ! tarboosh_middle_east_kitchen G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: & G ! hair_news & G ! wilshire_kenmore_building & G ! tarboosh_middle_east_kitchen G ! consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! h & G ! a G ! b
True Lmks: ("Carl's Jr.", 'Hair News', 'Wilshire-Kenmore Building', 'Tarboosh middle East kitchen', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Tarboosh middle East kitchen', 'Consulat General of the Republic of Indonesia', 'Hair News', "Carl's Jr.", 'Wilshire-Kenmore Building']
Out Grounds: {'Tarboosh middle East kitchen', 'Consulat General of the Republic of Indonesia', 'Hair News', "Carl's Jr.", 'Wilshire-Kenmore Building'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'Consulat General of the Republic of Indonesia': 'b', 'Hair News': 'c', "Carl's Jr.": 'd', 'Wilshire-Kenmore Building': 'h'}
False

261
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: you can not go to Details, POT, Foothill Transit, Korean Bbq, or Etude Lounge
True Ground LTL: & G ! details & G ! pot & G ! foothill_transit & G ! korean_bbq G ! etude_lounge
Out Ground LTL: & G ! pot & G ! foothill_transit & G ! gwang_yang_bbq G ! etude_lounge
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! d & G ! c G ! a
True Lmks: ('Details', 'POT', 'Foothill Transit', 'Korean Bbq', 'Etude Lounge')
Out Lmks:['Etude Lounge', 'Details', 'Foothill Transit', 'POT', 'Korean Bbq']
Out Grounds: {'Etude Lounge', 'Details', 'Gwang Yang BBQ', 'Foothill Transit', 'POT'}
Placeholder Map: {'Etude Lounge': 'a', 'Details': 'b', 'Gwang Yang BBQ': 'c', 'Foothill Transit': 'd', 'POT': 'h'}
False

262
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: avoid Mermaid Cafe, POT, Crystal Spa, Ice Cream, and Metro, forever
True Ground LTL: & G ! mermaid_cafe & G ! pot & G ! crystal_spa & G ! ice_cream G ! metro
Out Ground LTL: & G F mermaid_cafe & G F pot & G F crystal_spa & G F ice_cream G F metro
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G F a & G F h & G F d & G F b G F c
True Lmks: ('Mermaid Cafe', 'POT', 'Crystal Spa', 'Ice Cream', 'Metro')
Out Lmks:['Mermaid Cafe', 'Ice Cream', 'Metro', 'Crystal Spa', 'POT']
Out Grounds: {'Mermaid Cafe', 'Ice Cream', 'Metro', 'Crystal Spa', 'POT'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Ice Cream': 'b', 'Metro': 'c', 'Crystal Spa': 'd', 'POT': 'h'}
False

263
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: avoid Tarboosh middle East kitchen, Ice Cream, Mermaid Cafe, Hair News, and The Boiling Crab, forever
True Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! ice_cream & G ! mermaid_cafe & G ! hair_news G ! the_boiling_crab
Out Ground LTL: & G ! tarboosh_middle_east_kitchen & G ! ice_cream & G ! mermaid_cafe & G ! hair_news G ! the_boiling_crab
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! d & G ! c G ! b
True Lmks: ('Tarboosh middle East kitchen', 'Ice Cream', 'Mermaid Cafe', 'Hair News', 'The Boiling Crab')
Out Lmks:['Tarboosh middle East kitchen', 'The Boiling Crab', 'Hair News', 'Mermaid Cafe', 'Ice Cream']
Out Grounds: {'Tarboosh middle East kitchen', 'The Boiling Crab', 'Hair News', 'Mermaid Cafe', 'Ice Cream'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'The Boiling Crab': 'b', 'Hair News': 'c', 'Mermaid Cafe': 'd', 'Ice Cream': 'h'}
True

264
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not make any single visit to Etude Lounge, Central Plaza 3, Mermaid Cafe, Home Cafe, or Carl's Jr.
True Ground LTL: & G ! etude_lounge & G ! central_plaza_3 & G ! mermaid_cafe & G ! home_cafe G ! carls_jr
Out Ground LTL: & G ! etude_lounge & G ! central_plaza_3 & G ! mermaid_cafe & G ! home_cafe G ! carls_jr
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! a & G ! h & G ! c & G ! d G ! b
True Lmks: ('Etude Lounge', 'Central Plaza 3', 'Mermaid Cafe', 'Home Cafe', "Carl's Jr.")
Out Lmks:['Etude Lounge', "Carl's Jr.", 'Mermaid Cafe', 'Home Cafe', 'Central Plaza 3']
Out Grounds: {'Etude Lounge', "Carl's Jr.", 'Mermaid Cafe', 'Home Cafe', 'Central Plaza 3'}
Placeholder Map: {'Etude Lounge': 'a', "Carl's Jr.": 'b', 'Mermaid Cafe': 'c', 'Home Cafe': 'd', 'Central Plaza 3': 'h'}
True

265
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: do not make any single visit to Bayou Smokehouse, Coffee Bean & Tea Leaf, Bongchu, Metro, or Hair News
True Ground LTL: & G ! bayou_smokehouse & G ! coffee_bean_&_tea_leaf & G ! bongchu & G ! metro G ! hair_news
Out Ground LTL: & G ! bayou_smokehouse & G ! coffee_bean_&_tea_leaf & G ! bongchu & G ! metro G ! hair_news
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! c & G ! b & G ! h & G ! d G ! a
True Lmks: ('Bayou Smokehouse', 'Coffee Bean & Tea Leaf', 'Bongchu', 'Metro', 'Hair News')
Out Lmks:['Hair News', 'Coffee Bean & Tea Leaf', 'Bayou Smokehouse', 'Metro', 'Bongchu']
Out Grounds: {'Hair News', 'Coffee Bean & Tea Leaf', 'Bayou Smokehouse', 'Metro', 'Bongchu'}
Placeholder Map: {'Hair News': 'a', 'Coffee Bean & Tea Leaf': 'b', 'Bayou Smokehouse': 'c', 'Metro': 'd', 'Bongchu': 'h'}
True

266
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that none among Neris Filipino Dining, Hair News, Korean BBQ, Tarboosh middle East kitchen, and Seaweed, are ever visited
True Ground LTL: & G ! neris_filipino_dining & G ! hair_news & G ! korean_bbq & G ! tarboosh_middle_east_kitchen G ! seaweed
Out Ground LTL: & G ! neris_filipino_dining & G ! hair_news & G ! gwang_yang_bbq & G ! tarboosh_middle_east_kitchen G ! seaweed
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! d & G ! c & G ! h & G ! b G ! a
True Lmks: ('Neris Filipino Dining', 'Hair News', 'Korean BBQ', 'Tarboosh middle East kitchen', 'Seaweed')
Out Lmks:['Seaweed', 'Tarboosh middle East kitchen', 'Hair News', 'Neris Filipino Dining', 'Korean BBQ']
Out Grounds: {'Seaweed', 'Tarboosh middle East kitchen', 'Hair News', 'Neris Filipino Dining', 'Gwang Yang BBQ'}
Placeholder Map: {'Seaweed': 'a', 'Tarboosh middle East kitchen': 'b', 'Hair News': 'c', 'Neris Filipino Dining': 'd', 'Gwang Yang BBQ': 'h'}
False

267
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: ensure that none among Neris Filipino Dining, Central Plaza 3, Big 5 Sporting Goods, Consulat General of the Republic of Indonesia, and Details, are ever visited
True Ground LTL: & G ! neris_filipino_dining & G ! central_plaza_3 & G ! big_5_sporting_goods & G ! consulat_general_of_the_republic_of_indonesia G ! details
Out Ground LTL: & G ! neris_filipino_dining & G ! central_plaza_3 & G ! big_5_sporting_goods & G ! consulat_general_of_the_republic_of_indonesia G ! details
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! d & G ! h & G ! a G ! c
True Lmks: ('Neris Filipino Dining', 'Central Plaza 3', 'Big 5 Sporting Goods', 'Consulat General of the Republic of Indonesia', 'Details')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Neris Filipino Dining', 'Details', 'Central Plaza 3', 'Big 5 Sporting Goods']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Neris Filipino Dining', 'Details', 'Central Plaza 3', 'Big 5 Sporting Goods'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Neris Filipino Dining': 'b', 'Details': 'c', 'Central Plaza 3': 'd', 'Big 5 Sporting Goods': 'h'}
True

268
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Hair News, Seaweed, Happy Noodle, Korean BBQ, and Carl's Jr., must never be allowed to hold true
True Ground LTL: & G ! hair_news & G ! seaweed & G ! happy_noodle & G ! korean_bbq G ! carls_jr
Out Ground LTL: & G ! hair_news & G ! seaweed & G ! happy_noodle & G ! gwang_yang_bbq G ! carls_jr
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! b & G ! a & G ! c & G ! h G ! d
True Lmks: ('Hair News', 'Seaweed', 'Happy Noodle', 'Korean BBQ', "Carl's Jr.")
Out Lmks:['Seaweed', 'Hair News', "Carl's Jr.", 'Happy Noodle', 'Korean BBQ']
Out Grounds: {'Seaweed', 'Hair News', 'Happy Noodle', "Carl's Jr.", 'Gwang Yang BBQ'}
Placeholder Map: {'Seaweed': 'a', 'Hair News': 'b', 'Happy Noodle': 'c', "Carl's Jr.": 'd', 'Gwang Yang BBQ': 'h'}
False

269
global_avoidance ['a', 'b', 'c', 'd', 'h'] Input utterance: Foothill Transit, The Gaylord Apartments, Central Plaza 3, California Design College, and Wilshire-Kenmore Building, must never be allowed to hold true
True Ground LTL: & G ! foothill_transit & G ! the_gaylord_apartments & G ! central_plaza_3 & G ! california_design_college G ! wilshire_kenmore_building
Out Ground LTL: & G ! foothill_transit & G ! the_gaylord_apartments & G ! central_plaza_3 & G ! california_design_college G ! wilshire_kenmore_building
True Symbolic LTL: & G ! a & G ! b & G ! c & G ! d G ! h
Out Symbolic LTL: & G ! h & G ! a & G ! d & G ! b G ! c
True Lmks: ('Foothill Transit', 'The Gaylord Apartments', 'Central Plaza 3', 'California Design College', 'Wilshire-Kenmore Building')
Out Lmks:['The Gaylord Apartments', 'California Design College', 'Wilshire-Kenmore Building', 'Central Plaza 3', 'Foothill Transit']
Out Grounds: {'The Gaylord Apartments', 'California Design College', 'Wilshire-Kenmore Building', 'Central Plaza 3', 'Foothill Transit'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'California Design College': 'b', 'Wilshire-Kenmore Building': 'c', 'Central Plaza 3': 'd', 'Foothill Transit': 'h'}
True

270
past_avoidance ['a', 'b'] Input utterance: do not go to Bayou Smokehouse, until you see Happy Noodle
True Ground LTL: U ! bayou_smokehouse happy_noodle
Out Ground LTL: U bayou_smokehouse happy_noodle
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Bayou Smokehouse', 'Happy Noodle')
Out Lmks:['Happy Noodle', 'Bayou Smokehouse']
Out Grounds: {'Happy Noodle', 'Bayou Smokehouse'}
Placeholder Map: {'Happy Noodle': 'a', 'Bayou Smokehouse': 'b'}
False

271
past_avoidance ['a', 'b'] Input utterance: do not go to Wako, until you see Korean Bbq
True Ground LTL: U ! wako korean_bbq
Out Ground LTL: U wako gwang_yang_bbq
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Wako', 'Korean Bbq')
Out Lmks:['Wako', 'Korean Bbq']
Out Grounds: {'Wako', 'Gwang Yang BBQ'}
Placeholder Map: {'Wako': 'a', 'Gwang Yang BBQ': 'b'}
False

272
past_avoidance ['a', 'b'] Input utterance: avoid visiting Gwang Yang BBQ, till you observe Metro
True Ground LTL: U ! gwang_yang_bbq metro
Out Ground LTL: U gwang_yang_bbq metro
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Gwang Yang BBQ', 'Metro')
Out Lmks:['Metro', 'Gwang Yang BBQ']
Out Grounds: {'Metro', 'Gwang Yang BBQ'}
Placeholder Map: {'Metro': 'a', 'Gwang Yang BBQ': 'b'}
False

273
past_avoidance ['a', 'b'] Input utterance: avoid visiting Koko Pizza, till you observe Details
True Ground LTL: U ! koko_pizza details
Out Ground LTL: U koko_pizza details
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Koko Pizza', 'Details')
Out Lmks:['Details', 'Koko Pizza']
Out Grounds: {'Details', 'Koko Pizza'}
Placeholder Map: {'Details': 'a', 'Koko Pizza': 'b'}
False

274
past_avoidance ['a', 'b'] Input utterance: do not go to Central Plaza 1, until Zan ResPub, has occured
True Ground LTL: U ! central_plaza_1 zan_respub
Out Ground LTL: & U ! central_plaza_1 zan_respub F central_plaza_1
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Central Plaza 1', 'Zan ResPub')
Out Lmks:['Zan ResPub', 'Central Plaza 1']
Out Grounds: {'Zan ResPub', 'Central Plaza 1'}
Placeholder Map: {'Zan ResPub': 'a', 'Central Plaza 1': 'b'}
False

275
past_avoidance ['a', 'b'] Input utterance: do not go to The Gaylord Apartments, until Central Plaza 1, has occured
True Ground LTL: U ! the_gaylord_apartments central_plaza_1
Out Ground LTL: & U ! the_gaylord_apartments central_plaza_1 F the_gaylord_apartments
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('The Gaylord Apartments', 'Central Plaza 1')
Out Lmks:['The Gaylord Apartments', 'Central Plaza 1']
Out Grounds: {'The Gaylord Apartments', 'Central Plaza 1'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Central Plaza 1': 'b'}
False

276
past_avoidance ['a', 'b'] Input utterance: once you observe POT, only then are you allowed to go to Wilshire-Kenmore Building
True Ground LTL: U ! wilshire_kenmore_building pot
Out Ground LTL: & U ! wilshire_kenmore_building pot F wilshire_kenmore_building
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Wilshire-Kenmore Building', 'POT')
Out Lmks:['Wilshire-Kenmore Building', 'POT']
Out Grounds: {'Wilshire-Kenmore Building', 'POT'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'POT': 'b'}
False

277
past_avoidance ['a', 'b'] Input utterance: once you observe Details, only then are you allowed to go to Metro
True Ground LTL: U ! metro details
Out Ground LTL: U metro details
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Metro', 'Details')
Out Lmks:['Details', 'Metro']
Out Grounds: {'Details', 'Metro'}
Placeholder Map: {'Details': 'a', 'Metro': 'b'}
False

278
past_avoidance ['a', 'b'] Input utterance: you can visit Gwang Yang BBQ, only after seeing Central Plaza 1
True Ground LTL: U ! gwang_yang_bbq central_plaza_1
Out Ground LTL: & U ! gwang_yang_bbq central_plaza_1 F gwang_yang_bbq
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Gwang Yang BBQ', 'Central Plaza 1')
Out Lmks:['Central Plaza 1', 'Gwang Yang BBQ']
Out Grounds: {'Central Plaza 1', 'Gwang Yang BBQ'}
Placeholder Map: {'Central Plaza 1': 'a', 'Gwang Yang BBQ': 'b'}
False

279
past_avoidance ['a', 'b'] Input utterance: you can visit Robeks Juice, only after seeing Mermaid Cafe
True Ground LTL: U ! robeks_juice mermaid_cafe
Out Ground LTL: & U ! robeks_juice mermaid_cafe F robeks_juice
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Robeks Juice', 'Mermaid Cafe')
Out Lmks:['Mermaid Cafe', 'Robeks Juice']
Out Grounds: {'Mermaid Cafe', 'Robeks Juice'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Robeks Juice': 'b'}
False

280
past_avoidance ['a', 'b'] Input utterance: do not go to Wilshire/Normandie, until you go to Metro
True Ground LTL: U ! wilshire_normandie metro
Out Ground LTL: & U ! wilshire_normandie metro F wilshire_normandie
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Wilshire/Normandie', 'Metro')
Out Lmks:['Metro', 'Wilshire/Normandie']
Out Grounds: {'Metro', 'Wilshire/Normandie'}
Placeholder Map: {'Metro': 'a', 'Wilshire/Normandie': 'b'}
False

281
past_avoidance ['a', 'b'] Input utterance: do not go to The Gaylord Apartments, until you go to Etude Lounge
True Ground LTL: U ! the_gaylord_apartments etude_lounge
Out Ground LTL: & U ! the_gaylord_apartments etude_lounge F the_gaylord_apartments
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('The Gaylord Apartments', 'Etude Lounge')
Out Lmks:['The Gaylord Apartments', 'Etude Lounge']
Out Grounds: {'The Gaylord Apartments', 'Etude Lounge'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Etude Lounge': 'b'}
False

282
past_avoidance ['a', 'b'] Input utterance: avoid California Design College, until you reach Happy Noodle
True Ground LTL: U ! california_design_college happy_noodle
Out Ground LTL: U california_design_college happy_noodle
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('California Design College', 'Happy Noodle')
Out Lmks:['Happy Noodle', 'California Design College']
Out Grounds: {'Happy Noodle', 'California Design College'}
Placeholder Map: {'Happy Noodle': 'a', 'California Design College': 'b'}
False

283
past_avoidance ['a', 'b'] Input utterance: avoid Home Cafe, until you reach BBQ Premium Chicken
True Ground LTL: U ! home_cafe bbq_premium_chicken
Out Ground LTL: U home_cafe bbq_premium_chicken
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Home Cafe', 'BBQ Premium Chicken')
Out Lmks:['BBQ Premium Chicken', 'Home Cafe']
Out Grounds: {'BBQ Premium Chicken', 'Home Cafe'}
Placeholder Map: {'BBQ Premium Chicken': 'a', 'Home Cafe': 'b'}
False

284
past_avoidance ['a', 'b'] Input utterance: stay away from Bongchu, until you move to Etude Lounge
True Ground LTL: U ! bongchu etude_lounge
Out Ground LTL: U bongchu etude_lounge
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Bongchu', 'Etude Lounge')
Out Lmks:['Bongchu', 'Etude Lounge']
Out Grounds: {'Bongchu', 'Etude Lounge'}
Placeholder Map: {'Bongchu': 'a', 'Etude Lounge': 'b'}
False

285
past_avoidance ['a', 'b'] Input utterance: stay away from Happy Noodle, until you move to Wilshire-Kenmore Building
True Ground LTL: U ! happy_noodle wilshire_kenmore_building
Out Ground LTL: U happy_noodle wilshire_kenmore_building
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Happy Noodle', 'Wilshire-Kenmore Building')
Out Lmks:['Happy Noodle', 'Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building', 'Happy Noodle'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Happy Noodle': 'b'}
False

286
past_avoidance ['a', 'b'] Input utterance: do not move to Togo's, until you arrive at Equitable Life Building
True Ground LTL: U ! togos equitable_life_building
Out Ground LTL: & U ! togos equitable_life_building F togos
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("Togo's", 'Equitable Life Building')
Out Lmks:['Equitable Life Building', "Togo's"]
Out Grounds: {'Equitable Life Building', "Togo's"}
Placeholder Map: {'Equitable Life Building': 'a', "Togo's": 'b'}
False

287
past_avoidance ['a', 'b'] Input utterance: do not move to The Line, until you arrive at Tarboosh middle East kitchen
True Ground LTL: U ! the_line tarboosh_middle_east_kitchen
Out Ground LTL: & U ! the_line tarboosh_middle_east_kitchen F the_line
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('The Line', 'Tarboosh middle East kitchen')
Out Lmks:['Tarboosh middle East kitchen', 'The Line']
Out Grounds: {'Tarboosh middle East kitchen', 'The Line'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a', 'The Line': 'b'}
False

288
past_avoidance ['a', 'b'] Input utterance: do not go to Neris Filipino Dining, until you have gone to The Gaylord Apartments
True Ground LTL: U ! neris_filipino_dining the_gaylord_apartments
Out Ground LTL: & U ! neris_filipino_dining the_gaylord_apartments F neris_filipino_dining
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Neris Filipino Dining', 'The Gaylord Apartments')
Out Lmks:['The Gaylord Apartments', 'Neris Filipino Dining']
Out Grounds: {'The Gaylord Apartments', 'Neris Filipino Dining'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Neris Filipino Dining': 'b'}
False

289
past_avoidance ['a', 'b'] Input utterance: do not go to Korean Bbq, until you have gone to Details
True Ground LTL: U ! korean_bbq details
Out Ground LTL: & U ! gwang_yang_bbq details F gwang_yang_bbq
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Korean Bbq', 'Details')
Out Lmks:['Details', 'Korean Bbq']
Out Grounds: {'Details', 'Gwang Yang BBQ'}
Placeholder Map: {'Details': 'a', 'Gwang Yang BBQ': 'b'}
False

290
past_avoidance ['a', 'b'] Input utterance: avoid Gwang Yang BBQ, at all costs until you reach California Design College, first
True Ground LTL: U ! gwang_yang_bbq california_design_college
Out Ground LTL: U gwang_yang_bbq california_design_college
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Gwang Yang BBQ', 'California Design College')
Out Lmks:['Gwang Yang BBQ', 'California Design College']
Out Grounds: {'Gwang Yang BBQ', 'California Design College'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'California Design College': 'b'}
False

291
past_avoidance ['a', 'b'] Input utterance: avoid Crystal Spa, at all costs until you reach Koko Pizza, first
True Ground LTL: U ! crystal_spa koko_pizza
Out Ground LTL: U crystal_spa koko_pizza
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Crystal Spa', 'Koko Pizza')
Out Lmks:['Crystal Spa', 'Koko Pizza']
Out Grounds: {'Crystal Spa', 'Koko Pizza'}
Placeholder Map: {'Crystal Spa': 'a', 'Koko Pizza': 'b'}
False

292
past_avoidance ['a', 'b'] Input utterance: until you have gone to The Line, you can not go to Equitable Life Building
True Ground LTL: U ! equitable_life_building the_line
Out Ground LTL: U the_line equitable_life_building
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Equitable Life Building', 'The Line')
Out Lmks:['Equitable Life Building', 'The Line']
Out Grounds: {'Equitable Life Building', 'The Line'}
Placeholder Map: {'Equitable Life Building': 'a', 'The Line': 'b'}
False

293
past_avoidance ['a', 'b'] Input utterance: until you have gone to POT, you can not go to BBQ Premium Chicken
True Ground LTL: U ! bbq_premium_chicken pot
Out Ground LTL: U pot bbq_premium_chicken
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('BBQ Premium Chicken', 'POT')
Out Lmks:['POT', 'BBQ Premium Chicken']
Out Grounds: {'POT', 'BBQ Premium Chicken'}
Placeholder Map: {'POT': 'a', 'BBQ Premium Chicken': 'b'}
False

294
past_avoidance ['a', 'b'] Input utterance: you can not go to Robeks Juice, until you go to The Gaylord Apartments
True Ground LTL: U ! robeks_juice the_gaylord_apartments
Out Ground LTL: & U ! robeks_juice the_gaylord_apartments F robeks_juice
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('Robeks Juice', 'The Gaylord Apartments')
Out Lmks:['The Gaylord Apartments', 'Robeks Juice']
Out Grounds: {'The Gaylord Apartments', 'Robeks Juice'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Robeks Juice': 'b'}
False

295
past_avoidance ['a', 'b'] Input utterance: you can not go to Sun Nong Dan, until you go to Ice Cream
True Ground LTL: U ! sun_nong_dan ice_cream
Out Ground LTL: & U ! sun_nong_dan ice_cream F sun_nong_dan
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Sun Nong Dan', 'Ice Cream')
Out Lmks:['Sun Nong Dan', 'Ice Cream']
Out Grounds: {'Sun Nong Dan', 'Ice Cream'}
Placeholder Map: {'Sun Nong Dan': 'a', 'Ice Cream': 'b'}
False

296
past_avoidance ['a', 'b'] Input utterance: never go to Consulat General of the Republic of Indonesia, until you see Neris Filipino Dining
True Ground LTL: U ! consulat_general_of_the_republic_of_indonesia neris_filipino_dining
Out Ground LTL: U consulat_general_of_the_republic_of_indonesia neris_filipino_dining
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Consulat General of the Republic of Indonesia', 'Neris Filipino Dining')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Neris Filipino Dining']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Neris Filipino Dining'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Neris Filipino Dining': 'b'}
False

297
past_avoidance ['a', 'b'] Input utterance: never go to Zan ResPub, until you see POT
True Ground LTL: U ! zan_respub pot
Out Ground LTL: U zan_respub pot
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Zan ResPub', 'POT')
Out Lmks:['POT', 'Zan ResPub']
Out Grounds: {'POT', 'Zan ResPub'}
Placeholder Map: {'POT': 'a', 'Zan ResPub': 'b'}
False

298
past_avoidance ['a', 'b'] Input utterance: you can not go to Mali Taste of Thailand, before Ice Cream, happens
True Ground LTL: U ! mali_taste_of_thailand ice_cream
Out Ground LTL: U ice_cream mali_taste_of_thailand
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Mali Taste of Thailand', 'Ice Cream')
Out Lmks:['Ice Cream', 'Mali Taste of Thailand']
Out Grounds: {'Ice Cream', 'Mali Taste of Thailand'}
Placeholder Map: {'Ice Cream': 'a', 'Mali Taste of Thailand': 'b'}
False

299
past_avoidance ['a', 'b'] Input utterance: you can not go to Korean Bbq, before Bongchu, happens
True Ground LTL: U ! korean_bbq bongchu
Out Ground LTL: U bongchu gwang_yang_bbq
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Korean Bbq', 'Bongchu')
Out Lmks:['Bongchu', 'Korean Bbq']
Out Grounds: {'Bongchu', 'Gwang Yang BBQ'}
Placeholder Map: {'Bongchu': 'a', 'Gwang Yang BBQ': 'b'}
False

300
past_avoidance ['a', 'b'] Input utterance: you can only go to Carl's Jr., after Wilshire-Kenmore Building, is seen
True Ground LTL: U ! carls_jr wilshire_kenmore_building
Out Ground LTL: G i wilshire_kenmore_building X carls_jr
True Symbolic LTL: U ! a b
Out Symbolic LTL: G i a X b
True Lmks: ("Carl's Jr.", 'Wilshire-Kenmore Building')
Out Lmks:["Carl's Jr.", 'Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building', "Carl's Jr."}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', "Carl's Jr.": 'b'}
False

301
past_avoidance ['a', 'b'] Input utterance: you can only go to Bayou Smokehouse, after Consulat General of the Republic of Indonesia, is seen
True Ground LTL: U ! bayou_smokehouse consulat_general_of_the_republic_of_indonesia
Out Ground LTL: G i consulat_general_of_the_republic_of_indonesia X bayou_smokehouse
True Symbolic LTL: U ! a b
Out Symbolic LTL: G i a X b
True Lmks: ('Bayou Smokehouse', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Bayou Smokehouse']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Bayou Smokehouse': 'b'}
False

302
past_avoidance ['a', 'b'] Input utterance: Central Plaza 1, must be observed before visiting The Line
True Ground LTL: U ! the_line central_plaza_1
Out Ground LTL: & U ! the_line central_plaza_1 F the_line
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('The Line', 'Central Plaza 1')
Out Lmks:['Central Plaza 1', 'The Line']
Out Grounds: {'Central Plaza 1', 'The Line'}
Placeholder Map: {'Central Plaza 1': 'a', 'The Line': 'b'}
False

303
past_avoidance ['a', 'b'] Input utterance: Hair News, must be observed before visiting Seaweed
True Ground LTL: U ! seaweed hair_news
Out Ground LTL: & U ! seaweed hair_news F seaweed
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Seaweed', 'Hair News')
Out Lmks:['Seaweed', 'Hair News']
Out Grounds: {'Seaweed', 'Hair News'}
Placeholder Map: {'Seaweed': 'a', 'Hair News': 'b'}
False

304
past_avoidance ['a', 'b'] Input utterance: you can visit Togo's, but only after you see Wilshire-Kenmore Building
True Ground LTL: U ! togos wilshire_kenmore_building
Out Ground LTL: & U ! togos wilshire_kenmore_building F togos
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ("Togo's", 'Wilshire-Kenmore Building')
Out Lmks:['Wilshire-Kenmore Building', "Togo's"]
Out Grounds: {'Wilshire-Kenmore Building', "Togo's"}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', "Togo's": 'b'}
False

305
past_avoidance ['a', 'b'] Input utterance: you can visit Consulat General of the Republic of Indonesia, but only after you see Korean Bbq
True Ground LTL: U ! consulat_general_of_the_republic_of_indonesia korean_bbq
Out Ground LTL: & U ! consulat_general_of_the_republic_of_indonesia gwang_yang_bbq F consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Consulat General of the Republic of Indonesia', 'Korean Bbq')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Korean Bbq']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Gwang Yang BBQ'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Gwang Yang BBQ': 'b'}
False

306
past_avoidance ['a', 'b'] Input utterance: Wako, has to be observed prior to any visit to The Gaylord Apartments
True Ground LTL: U ! the_gaylord_apartments wako
Out Ground LTL: & U ! the_gaylord_apartments wako F the_gaylord_apartments
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('The Gaylord Apartments', 'Wako')
Out Lmks:['The Gaylord Apartments', 'Wako']
Out Grounds: {'The Gaylord Apartments', 'Wako'}
Placeholder Map: {'The Gaylord Apartments': 'a', 'Wako': 'b'}
False

307
past_avoidance ['a', 'b'] Input utterance: Bayou Smokehouse, has to be observed prior to any visit to Consulat General of the Republic of Indonesia
True Ground LTL: U ! consulat_general_of_the_republic_of_indonesia bayou_smokehouse
Out Ground LTL: & U ! consulat_general_of_the_republic_of_indonesia bayou_smokehouse F consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! a b F a
True Lmks: ('Consulat General of the Republic of Indonesia', 'Bayou Smokehouse')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Bayou Smokehouse']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Bayou Smokehouse': 'b'}
False

308
past_avoidance ['a', 'b'] Input utterance: make sure you see Wilshire-Kenmore Building, before going to California Design College
True Ground LTL: U ! california_design_college wilshire_kenmore_building
Out Ground LTL: & U ! california_design_college wilshire_kenmore_building F california_design_college
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('California Design College', 'Wilshire-Kenmore Building')
Out Lmks:['Wilshire-Kenmore Building', 'California Design College']
Out Grounds: {'Wilshire-Kenmore Building', 'California Design College'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'California Design College': 'b'}
False

309
past_avoidance ['a', 'b'] Input utterance: make sure you see Seaweed, before going to The Line
True Ground LTL: U ! the_line seaweed
Out Ground LTL: & U ! the_line seaweed F the_line
True Symbolic LTL: U ! a b
Out Symbolic LTL: & U ! b a F b
True Lmks: ('The Line', 'Seaweed')
Out Lmks:['Seaweed', 'The Line']
Out Grounds: {'Seaweed', 'The Line'}
Placeholder Map: {'Seaweed': 'a', 'The Line': 'b'}
False

310
past_avoidance ['a', 'b'] Input utterance: you can not make any visit to Wilshire-Kenmore Building, when Wako, remains unseen
True Ground LTL: U ! wilshire_kenmore_building wako
Out Ground LTL: U wilshire_kenmore_building wako
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Wilshire-Kenmore Building', 'Wako')
Out Lmks:['Wilshire-Kenmore Building', 'Wako']
Out Grounds: {'Wilshire-Kenmore Building', 'Wako'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Wako': 'b'}
False

311
past_avoidance ['a', 'b'] Input utterance: you can not make any visit to Big 5 Sporting Goods, when POT, remains unseen
True Ground LTL: U ! big_5_sporting_goods pot
Out Ground LTL: U pot big_5_sporting_goods
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Big 5 Sporting Goods', 'POT')
Out Lmks:['POT', 'Big 5 Sporting Goods']
Out Grounds: {'POT', 'Big 5 Sporting Goods'}
Placeholder Map: {'POT': 'a', 'Big 5 Sporting Goods': 'b'}
False

312
past_avoidance ['a', 'b'] Input utterance: do not visit Crystal Spa, till you observe Gwang Yang BBQ
True Ground LTL: U ! crystal_spa gwang_yang_bbq
Out Ground LTL: U crystal_spa gwang_yang_bbq
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Crystal Spa', 'Gwang Yang BBQ')
Out Lmks:['Crystal Spa', 'Gwang Yang BBQ']
Out Grounds: {'Crystal Spa', 'Gwang Yang BBQ'}
Placeholder Map: {'Crystal Spa': 'a', 'Gwang Yang BBQ': 'b'}
False

313
past_avoidance ['a', 'b'] Input utterance: do not visit Equitable Life Building, till you observe Neris Filipino Dining
True Ground LTL: U ! equitable_life_building neris_filipino_dining
Out Ground LTL: U equitable_life_building neris_filipino_dining
True Symbolic LTL: U ! a b
Out Symbolic LTL: U a b
True Lmks: ('Equitable Life Building', 'Neris Filipino Dining')
Out Lmks:['Equitable Life Building', 'Neris Filipino Dining']
Out Grounds: {'Equitable Life Building', 'Neris Filipino Dining'}
Placeholder Map: {'Equitable Life Building': 'a', 'Neris Filipino Dining': 'b'}
False

314
past_avoidance ['a', 'b'] Input utterance: seeing Details, unlocks Korean BBQ
True Ground LTL: U ! korean_bbq details
Out Ground LTL: U gwang_yang_bbq details
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('Korean BBQ', 'Details')
Out Lmks:['Details', 'Korean BBQ']
Out Grounds: {'Details', 'Gwang Yang BBQ'}
Placeholder Map: {'Details': 'a', 'Gwang Yang BBQ': 'b'}
False

315
past_avoidance ['a', 'b'] Input utterance: seeing Central Plaza 3, unlocks California Design College
True Ground LTL: U ! california_design_college central_plaza_3
Out Ground LTL: U california_design_college central_plaza_3
True Symbolic LTL: U ! a b
Out Symbolic LTL: U b a
True Lmks: ('California Design College', 'Central Plaza 3')
Out Lmks:['Central Plaza 3', 'California Design College']
Out Grounds: {'Central Plaza 3', 'California Design College'}
Placeholder Map: {'Central Plaza 3': 'a', 'California Design College': 'b'}
False

316
lower_restricted_avoidance ['h'] Input utterance: visit Zan ResPub, at least five times
True Ground LTL: F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F zan_respub
Out Ground LTL: F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F & zan_respub U zan_respub & ! zan_respub U ! zan_respub F zan_respub
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Zan ResPub',)
Out Lmks:['Zan ResPub']
Out Grounds: {'Zan ResPub'}
Placeholder Map: {'Zan ResPub': 'a'}
True

317
lower_restricted_avoidance ['h'] Input utterance: visit The Line, at least five times
True Ground LTL: F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F the_line
Out Ground LTL: F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F the_line
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('The Line',)
Out Lmks:['The Line']
Out Grounds: {'The Line'}
Placeholder Map: {'The Line': 'a'}
True

318
lower_restricted_avoidance ['h'] Input utterance: go to Sun Nong Dan, at least five times
True Ground LTL: F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F sun_nong_dan
Out Ground LTL: F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F sun_nong_dan
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Sun Nong Dan',)
Out Lmks:['Sun Nong Dan']
Out Grounds: {'Sun Nong Dan'}
Placeholder Map: {'Sun Nong Dan': 'a'}
True

319
lower_restricted_avoidance ['h'] Input utterance: go to Korean Bbq, at least five times
True Ground LTL: F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F korean_bbq
Out Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Korean Bbq',)
Out Lmks:['Korean Bbq']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

320
lower_restricted_avoidance ['h'] Input utterance: make your way to Mali Taste of Thailand, at least five times
True Ground LTL: F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F mali_taste_of_thailand
Out Ground LTL: F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F & mali_taste_of_thailand U mali_taste_of_thailand & ! mali_taste_of_thailand U ! mali_taste_of_thailand F mali_taste_of_thailand
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Mali Taste of Thailand',)
Out Lmks:['Mali Taste of Thailand']
Out Grounds: {'Mali Taste of Thailand'}
Placeholder Map: {'Mali Taste of Thailand': 'a'}
True

321
lower_restricted_avoidance ['h'] Input utterance: make your way to The Line, at least five times
True Ground LTL: F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F the_line
Out Ground LTL: F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F the_line
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('The Line',)
Out Lmks:['The Line']
Out Grounds: {'The Line'}
Placeholder Map: {'The Line': 'a'}
True

322
lower_restricted_avoidance ['h'] Input utterance: you have to visit Korean Bbq, at least five times
True Ground LTL: F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F korean_bbq
Out Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Korean Bbq',)
Out Lmks:['Korean Bbq']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

323
lower_restricted_avoidance ['h'] Input utterance: you have to visit Bayou Smokehouse, at least five times
True Ground LTL: F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F bayou_smokehouse
Out Ground LTL: F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F & bayou_smokehouse U bayou_smokehouse & ! bayou_smokehouse U ! bayou_smokehouse F bayou_smokehouse
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Bayou Smokehouse',)
Out Lmks:['Bayou Smokehouse']
Out Grounds: {'Bayou Smokehouse'}
Placeholder Map: {'Bayou Smokehouse': 'a'}
True

324
lower_restricted_avoidance ['h'] Input utterance: visit Bongchu, at least five times or more
True Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
Out Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Bongchu',)
Out Lmks:['Bongchu']
Out Grounds: {'Bongchu'}
Placeholder Map: {'Bongchu': 'a'}
True

325
lower_restricted_avoidance ['h'] Input utterance: visit Central Plaza 3, at least five times or more
True Ground LTL: F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F central_plaza_3
Out Ground LTL: F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F & central_plaza_3 U central_plaza_3 & ! central_plaza_3 U ! central_plaza_3 F central_plaza_3
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Central Plaza 3',)
Out Lmks:['Central Plaza 3']
Out Grounds: {'Central Plaza 3'}
Placeholder Map: {'Central Plaza 3': 'a'}
True

326
lower_restricted_avoidance ['h'] Input utterance: you can not visit Big 5 Sporting Goods, less than five times
True Ground LTL: F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F big_5_sporting_goods
Out Ground LTL: F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F & big_5_sporting_goods U big_5_sporting_goods & ! big_5_sporting_goods U ! big_5_sporting_goods F big_5_sporting_goods
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Big 5 Sporting Goods',)
Out Lmks:['Big 5 Sporting Goods']
Out Grounds: {'Big 5 Sporting Goods'}
Placeholder Map: {'Big 5 Sporting Goods': 'a'}
True

327
lower_restricted_avoidance ['h'] Input utterance: you can not visit Equitable Life Building, less than five times
True Ground LTL: F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F equitable_life_building
Out Ground LTL: F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F & equitable_life_building U equitable_life_building & ! equitable_life_building U ! equitable_life_building F equitable_life_building
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Equitable Life Building',)
Out Lmks:['Equitable Life Building']
Out Grounds: {'Equitable Life Building'}
Placeholder Map: {'Equitable Life Building': 'a'}
True

328
lower_restricted_avoidance ['h'] Input utterance: never go to Hair News, less than five times
True Ground LTL: F & hair_news U hair_news & ! hair_news U ! hair_news F & hair_news U hair_news & ! hair_news U ! hair_news F & hair_news U hair_news & ! hair_news U ! hair_news F & hair_news U hair_news & ! hair_news U ! hair_news F hair_news
Out Ground LTL: F & hair_news U hair_news & ! hair_news U ! hair_news F & hair_news U hair_news & ! hair_news U ! hair_news F & hair_news U hair_news & ! hair_news U ! hair_news F & hair_news U hair_news & ! hair_news U ! hair_news F hair_news
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Hair News',)
Out Lmks:['Hair News']
Out Grounds: {'Hair News'}
Placeholder Map: {'Hair News': 'a'}
True

329
lower_restricted_avoidance ['h'] Input utterance: never go to Wako, less than five times
True Ground LTL: F & wako U wako & ! wako U ! wako F & wako U wako & ! wako U ! wako F & wako U wako & ! wako U ! wako F & wako U wako & ! wako U ! wako F wako
Out Ground LTL: F & wako U wako & ! wako U ! wako F & wako U wako & ! wako U ! wako F & wako U wako & ! wako U ! wako F & wako U wako & ! wako U ! wako F wako
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Wako',)
Out Lmks:['Wako']
Out Grounds: {'Wako'}
Placeholder Map: {'Wako': 'a'}
True

330
lower_restricted_avoidance ['h'] Input utterance: you have to visit Carl's Jr., five or more than five times
True Ground LTL: F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F carls_jr
Out Ground LTL: F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F & carls_jr U carls_jr & ! carls_jr U ! carls_jr F carls_jr
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Carl's Jr.",)
Out Lmks:["Carl's Jr."]
Out Grounds: {"Carl's Jr."}
Placeholder Map: {"Carl's Jr.": 'a'}
True

331
lower_restricted_avoidance ['h'] Input utterance: you have to visit The Line, five or more than five times
True Ground LTL: F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F the_line
Out Ground LTL: F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F & the_line U the_line & ! the_line U ! the_line F the_line
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('The Line',)
Out Lmks:['The Line']
Out Grounds: {'The Line'}
Placeholder Map: {'The Line': 'a'}
True

332
lower_restricted_avoidance ['h'] Input utterance: your task is to go to Consulat General of the Republic of Indonesia, five or more times
True Ground LTL: F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F consulat_general_of_the_republic_of_indonesia
Out Ground LTL: F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F & consulat_general_of_the_republic_of_indonesia U consulat_general_of_the_republic_of_indonesia & ! consulat_general_of_the_republic_of_indonesia U ! consulat_general_of_the_republic_of_indonesia F consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Consulat General of the Republic of Indonesia',)
Out Lmks:['Consulat General of the Republic of Indonesia']
Out Grounds: {'Consulat General of the Republic of Indonesia'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a'}
True

333
lower_restricted_avoidance ['h'] Input utterance: your task is to go to Crystal Spa, five or more times
True Ground LTL: F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F crystal_spa
Out Ground LTL: F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F & crystal_spa U crystal_spa & ! crystal_spa U ! crystal_spa F crystal_spa
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Crystal Spa',)
Out Lmks:['Crystal Spa']
Out Grounds: {'Crystal Spa'}
Placeholder Map: {'Crystal Spa': 'a'}
True

334
lower_restricted_avoidance ['h'] Input utterance: do not visit Tarboosh middle East kitchen, less than five times
True Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
Out Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Tarboosh middle East kitchen',)
Out Lmks:['Tarboosh middle East kitchen']
Out Grounds: {'Tarboosh middle East kitchen'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a'}
True

335
lower_restricted_avoidance ['h'] Input utterance: do not visit Foothill Transit, less than five times
True Ground LTL: F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F foothill_transit
Out Ground LTL: F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F foothill_transit
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Foothill Transit',)
Out Lmks:['Foothill Transit']
Out Grounds: {'Foothill Transit'}
Placeholder Map: {'Foothill Transit': 'a'}
True

336
lower_restricted_avoidance ['h'] Input utterance: make sure you visit Neris Filipino Dining, five or more times
True Ground LTL: F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F neris_filipino_dining
Out Ground LTL: F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F neris_filipino_dining
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Neris Filipino Dining',)
Out Lmks:['Neris Filipino Dining']
Out Grounds: {'Neris Filipino Dining'}
Placeholder Map: {'Neris Filipino Dining': 'a'}
True

337
lower_restricted_avoidance ['h'] Input utterance: make sure you visit Home Cafe, five or more times
True Ground LTL: F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F home_cafe
Out Ground LTL: F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F & home_cafe U home_cafe & ! home_cafe U ! home_cafe F home_cafe
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Home Cafe',)
Out Lmks:['Home Cafe']
Out Grounds: {'Home Cafe'}
Placeholder Map: {'Home Cafe': 'a'}
True

338
lower_restricted_avoidance ['h'] Input utterance: you have to reach Wilshire-Kenmore Building, at least five times
True Ground LTL: F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F wilshire_kenmore_building
Out Ground LTL: F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F & wilshire_kenmore_building U wilshire_kenmore_building & ! wilshire_kenmore_building U ! wilshire_kenmore_building F wilshire_kenmore_building
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Wilshire-Kenmore Building',)
Out Lmks:['Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a'}
True

339
lower_restricted_avoidance ['h'] Input utterance: you have to reach Korean BBQ, at least five times
True Ground LTL: F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F korean_bbq
Out Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Korean BBQ',)
Out Lmks:['Korean BBQ']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

340
lower_restricted_avoidance ['h'] Input utterance: visit Tarboosh middle East kitchen, equal or more than five times
True Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
Out Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Tarboosh middle East kitchen',)
Out Lmks:['Tarboosh middle East kitchen']
Out Grounds: {'Tarboosh middle East kitchen'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a'}
True

341
lower_restricted_avoidance ['h'] Input utterance: visit Bongchu, equal or more than five times
True Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
Out Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Bongchu',)
Out Lmks:['Bongchu']
Out Grounds: {'Bongchu'}
Placeholder Map: {'Bongchu': 'a'}
True

342
lower_restricted_avoidance ['h'] Input utterance: you have to go to Korean BBQ, five or more than five times
True Ground LTL: F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F korean_bbq
Out Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Korean BBQ',)
Out Lmks:['Korean BBQ']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

343
lower_restricted_avoidance ['h'] Input utterance: you have to go to Bongchu, five or more than five times
True Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
Out Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Bongchu',)
Out Lmks:['Bongchu']
Out Grounds: {'Bongchu'}
Placeholder Map: {'Bongchu': 'a'}
True

344
lower_restricted_avoidance ['h'] Input utterance: Korean Bbq, has to be visited at least five times
True Ground LTL: F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F & korean_bbq U korean_bbq & ! korean_bbq U ! korean_bbq F korean_bbq
Out Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Korean Bbq',)
Out Lmks:['Korean Bbq']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

345
lower_restricted_avoidance ['h'] Input utterance: Foothill Transit, has to be visited at least five times
True Ground LTL: F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F foothill_transit
Out Ground LTL: F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F & foothill_transit U foothill_transit & ! foothill_transit U ! foothill_transit F foothill_transit
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Foothill Transit',)
Out Lmks:['Foothill Transit']
Out Grounds: {'Foothill Transit'}
Placeholder Map: {'Foothill Transit': 'a'}
True

346
lower_restricted_avoidance ['h'] Input utterance: you must visit and then leave Gwang Yang BBQ, at least five times
True Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
Out Ground LTL: F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F & gwang_yang_bbq U gwang_yang_bbq & ! gwang_yang_bbq U ! gwang_yang_bbq F gwang_yang_bbq
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Gwang Yang BBQ',)
Out Lmks:['Gwang Yang BBQ']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
True

347
lower_restricted_avoidance ['h'] Input utterance: you must visit and then leave Sun Nong Dan, at least five times
True Ground LTL: F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F sun_nong_dan
Out Ground LTL: F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F sun_nong_dan
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Sun Nong Dan',)
Out Lmks:['Sun Nong Dan']
Out Grounds: {'Sun Nong Dan'}
Placeholder Map: {'Sun Nong Dan': 'a'}
True

348
lower_restricted_avoidance ['h'] Input utterance: go to Robeks Juice, then leave Robeks Juice, at least five times
True Ground LTL: F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F robeks_juice
Out Ground LTL: F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F & robeks_juice U robeks_juice & ! robeks_juice U ! robeks_juice F robeks_juice
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Robeks Juice',)
Out Lmks:['Robeks Juice']
Out Grounds: {'Robeks Juice'}
Placeholder Map: {'Robeks Juice': 'a'}
True

349
lower_restricted_avoidance ['h'] Input utterance: go to Tarboosh middle East kitchen, then leave Tarboosh middle East kitchen, at least five times
True Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
Out Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Tarboosh middle East kitchen',)
Out Lmks:['Tarboosh middle East kitchen']
Out Grounds: {'Tarboosh middle East kitchen'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a'}
True

350
lower_restricted_avoidance ['h'] Input utterance: you must pass through Seaweed, on at least five separate occasions
True Ground LTL: F & seaweed U seaweed & ! seaweed U ! seaweed F & seaweed U seaweed & ! seaweed U ! seaweed F & seaweed U seaweed & ! seaweed U ! seaweed F & seaweed U seaweed & ! seaweed U ! seaweed F seaweed
Out Ground LTL: F & seaweed U seaweed & ! seaweed U ! seaweed F & seaweed U seaweed & ! seaweed U ! seaweed F & seaweed U seaweed & ! seaweed U ! seaweed F & seaweed U seaweed & ! seaweed U ! seaweed F seaweed
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Seaweed',)
Out Lmks:['Seaweed']
Out Grounds: {'Seaweed'}
Placeholder Map: {'Seaweed': 'a'}
True

351
lower_restricted_avoidance ['h'] Input utterance: you must pass through Neris Filipino Dining, on at least five separate occasions
True Ground LTL: F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F neris_filipino_dining
Out Ground LTL: F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F & neris_filipino_dining U neris_filipino_dining & ! neris_filipino_dining U ! neris_filipino_dining F neris_filipino_dining
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Neris Filipino Dining',)
Out Lmks:['Neris Filipino Dining']
Out Grounds: {'Neris Filipino Dining'}
Placeholder Map: {'Neris Filipino Dining': 'a'}
True

352
lower_restricted_avoidance ['h'] Input utterance: the minimum number of times you must visit Ice Cream, is five
True Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
Out Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ice Cream',)
Out Lmks:['Ice Cream']
Out Grounds: {'Ice Cream'}
Placeholder Map: {'Ice Cream': 'a'}
True

353
lower_restricted_avoidance ['h'] Input utterance: the minimum number of times you must visit Sun Nong Dan, is five
True Ground LTL: F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F sun_nong_dan
Out Ground LTL: F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F & sun_nong_dan U sun_nong_dan & ! sun_nong_dan U ! sun_nong_dan F sun_nong_dan
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Sun Nong Dan',)
Out Lmks:['Sun Nong Dan']
Out Grounds: {'Sun Nong Dan'}
Placeholder Map: {'Sun Nong Dan': 'a'}
True

354
lower_restricted_avoidance ['h'] Input utterance: reach Togo's, then leave Togo's, and repeat this at least four more times
True Ground LTL: F & togos U togos & ! togos U ! togos F & togos U togos & ! togos U ! togos F & togos U togos & ! togos U ! togos F & togos U togos & ! togos U ! togos F togos
Out Ground LTL: F & togos U togos & ! togos U ! togos F & togos U togos & ! togos U ! togos F & togos U togos & ! togos U ! togos F togos
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ("Togo's",)
Out Lmks:["Togo's"]
Out Grounds: {"Togo's"}
Placeholder Map: {"Togo's": 'a'}
False

355
lower_restricted_avoidance ['h'] Input utterance: reach Ice Cream, then leave Ice Cream, and repeat this at least four more times
True Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
Out Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ice Cream',)
Out Lmks:['Ice Cream']
Out Grounds: {'Ice Cream'}
Placeholder Map: {'Ice Cream': 'a'}
False

356
lower_restricted_avoidance ['h'] Input utterance: you can not complete the task without visiting Bongchu, on five separate occasions
True Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
Out Ground LTL: F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F & bongchu U bongchu & ! bongchu U ! bongchu F bongchu
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Bongchu',)
Out Lmks:['Bongchu']
Out Grounds: {'Bongchu'}
Placeholder Map: {'Bongchu': 'a'}
True

357
lower_restricted_avoidance ['h'] Input utterance: you can not complete the task without visiting Ice Cream, on five separate occasions
True Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
Out Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ice Cream',)
Out Lmks:['Ice Cream']
Out Grounds: {'Ice Cream'}
Placeholder Map: {'Ice Cream': 'a'}
True

358
lower_restricted_avoidance ['h'] Input utterance: do not visit Wilshire/Normandie, any fewer than five separate times
True Ground LTL: F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F wilshire_normandie
Out Ground LTL: F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F & wilshire_normandie U wilshire_normandie & ! wilshire_normandie U ! wilshire_normandie F wilshire_normandie
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Wilshire/Normandie',)
Out Lmks:['Wilshire/Normandie']
Out Grounds: {'Wilshire/Normandie'}
Placeholder Map: {'Wilshire/Normandie': 'a'}
True

359
lower_restricted_avoidance ['h'] Input utterance: do not visit Tarboosh middle East kitchen, any fewer than five separate times
True Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
Out Ground LTL: F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen U tarboosh_middle_east_kitchen & ! tarboosh_middle_east_kitchen U ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Tarboosh middle East kitchen',)
Out Lmks:['Tarboosh middle East kitchen']
Out Grounds: {'Tarboosh middle East kitchen'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a'}
True

360
lower_restricted_avoidance ['h'] Input utterance: ensure that you have at least five separate times where you reach Coffee Bean & Tea Leaf
True Ground LTL: F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F coffee_bean_&_tea_leaf
Out Ground LTL: F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf U coffee_bean_&_tea_leaf & ! coffee_bean_&_tea_leaf U ! coffee_bean_&_tea_leaf F coffee_bean_&_tea_leaf
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Coffee Bean & Tea Leaf',)
Out Lmks:['Coffee Bean & Tea Leaf']
Out Grounds: {'Coffee Bean & Tea Leaf'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a'}
True

361
lower_restricted_avoidance ['h'] Input utterance: ensure that you have at least five separate times where you reach Ice Cream
True Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
Out Ground LTL: F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F & ice_cream U ice_cream & ! ice_cream U ! ice_cream F ice_cream
True Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
Out Symbolic LTL: F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F & a U a & ! a U ! a F a
True Lmks: ('Ice Cream',)
Out Lmks:['Ice Cream']
Out Grounds: {'Ice Cream'}
Placeholder Map: {'Ice Cream': 'a'}
True

362
exact_restricted_avoidance ['c'] Input utterance: visit Home Cafe, exactly three times
True Ground LTL: M & home_cafe F & ! home_cafe F & home_cafe F & ! home_cafe F home_cafe | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G ! home_cafe
Out Ground LTL: M & home_cafe F & ! home_cafe F & home_cafe F & ! home_cafe F home_cafe | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G ! home_cafe
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Home Cafe',)
Out Lmks:['Home Cafe']
Out Grounds: {'Home Cafe'}
Placeholder Map: {'Home Cafe': 'a'}
True

363
exact_restricted_avoidance ['c'] Input utterance: visit Wilshire-Kenmore Building, exactly three times
True Ground LTL: M & wilshire_kenmore_building F & ! wilshire_kenmore_building F & wilshire_kenmore_building F & ! wilshire_kenmore_building F wilshire_kenmore_building | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G ! wilshire_kenmore_building
Out Ground LTL: M & wilshire_kenmore_building F & ! wilshire_kenmore_building F & wilshire_kenmore_building F & ! wilshire_kenmore_building F wilshire_kenmore_building | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G ! wilshire_kenmore_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Wilshire-Kenmore Building',)
Out Lmks:['Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a'}
True

364
exact_restricted_avoidance ['c'] Input utterance: go to Hair News, exactly three times
True Ground LTL: M & hair_news F & ! hair_news F & hair_news F & ! hair_news F hair_news | ! hair_news G | hair_news G | ! hair_news G | hair_news G | ! hair_news G | hair_news G ! hair_news
Out Ground LTL: M & hair_news F & ! hair_news F & hair_news F & ! hair_news F hair_news | ! hair_news G | hair_news G | ! hair_news G | hair_news G | ! hair_news G | hair_news G ! hair_news
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Hair News',)
Out Lmks:['Hair News']
Out Grounds: {'Hair News'}
Placeholder Map: {'Hair News': 'a'}
True

365
exact_restricted_avoidance ['c'] Input utterance: go to POT, exactly three times
True Ground LTL: M & pot F & ! pot F & pot F & ! pot F pot | ! pot G | pot G | ! pot G | pot G | ! pot G | pot G ! pot
Out Ground LTL: M & pot F & ! pot F & pot F & ! pot F pot | ! pot G | pot G | ! pot G | pot G | ! pot G | pot G ! pot
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('POT',)
Out Lmks:['POT']
Out Grounds: {'POT'}
Placeholder Map: {'POT': 'a'}
True

366
exact_restricted_avoidance ['c'] Input utterance: make your way to Big 5 Sporting Goods, exactly three times
True Ground LTL: M & big_5_sporting_goods F & ! big_5_sporting_goods F & big_5_sporting_goods F & ! big_5_sporting_goods F big_5_sporting_goods | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G ! big_5_sporting_goods
Out Ground LTL: M & big_5_sporting_goods F & ! big_5_sporting_goods F & big_5_sporting_goods F & ! big_5_sporting_goods F big_5_sporting_goods | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G ! big_5_sporting_goods
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Big 5 Sporting Goods',)
Out Lmks:['Big 5 Sporting Goods']
Out Grounds: {'Big 5 Sporting Goods'}
Placeholder Map: {'Big 5 Sporting Goods': 'a'}
True

367
exact_restricted_avoidance ['c'] Input utterance: make your way to BBQ Premium Chicken, exactly three times
True Ground LTL: M & bbq_premium_chicken F & ! bbq_premium_chicken F & bbq_premium_chicken F & ! bbq_premium_chicken F bbq_premium_chicken | ! bbq_premium_chicken G | bbq_premium_chicken G | ! bbq_premium_chicken G | bbq_premium_chicken G | ! bbq_premium_chicken G | bbq_premium_chicken G ! bbq_premium_chicken
Out Ground LTL: M & bbq_premium_chicken F & ! bbq_premium_chicken F & bbq_premium_chicken F & ! bbq_premium_chicken F bbq_premium_chicken | ! bbq_premium_chicken G | bbq_premium_chicken G | ! bbq_premium_chicken G | bbq_premium_chicken G | ! bbq_premium_chicken G | bbq_premium_chicken G ! bbq_premium_chicken
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('BBQ Premium Chicken',)
Out Lmks:['BBQ Premium Chicken']
Out Grounds: {'BBQ Premium Chicken'}
Placeholder Map: {'BBQ Premium Chicken': 'a'}
True

368
exact_restricted_avoidance ['c'] Input utterance: you have to visit Foothill Transit, exactly three times
True Ground LTL: M & foothill_transit F & ! foothill_transit F & foothill_transit F & ! foothill_transit F foothill_transit | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G ! foothill_transit
Out Ground LTL: M & foothill_transit F & ! foothill_transit F & foothill_transit F & ! foothill_transit F foothill_transit | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G ! foothill_transit
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Foothill Transit',)
Out Lmks:['Foothill Transit']
Out Grounds: {'Foothill Transit'}
Placeholder Map: {'Foothill Transit': 'a'}
True

369
exact_restricted_avoidance ['c'] Input utterance: you have to visit The Line, exactly three times
True Ground LTL: M & the_line F & ! the_line F & the_line F & ! the_line F the_line | ! the_line G | the_line G | ! the_line G | the_line G | ! the_line G | the_line G ! the_line
Out Ground LTL: M & the_line F & ! the_line F & the_line F & ! the_line F the_line | ! the_line G | the_line G | ! the_line G | the_line G | ! the_line G | the_line G ! the_line
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('The Line',)
Out Lmks:['The Line']
Out Grounds: {'The Line'}
Placeholder Map: {'The Line': 'a'}
True

370
exact_restricted_avoidance ['c'] Input utterance: you must reach Zan ResPub, exactly three times
True Ground LTL: M & zan_respub F & ! zan_respub F & zan_respub F & ! zan_respub F zan_respub | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G ! zan_respub
Out Ground LTL: M & zan_respub F & ! zan_respub F & zan_respub F & ! zan_respub F zan_respub | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G ! zan_respub
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Zan ResPub',)
Out Lmks:['Zan ResPub']
Out Grounds: {'Zan ResPub'}
Placeholder Map: {'Zan ResPub': 'a'}
True

371
exact_restricted_avoidance ['c'] Input utterance: you must reach Wilshire-Kenmore Building, exactly three times
True Ground LTL: M & wilshire_kenmore_building F & ! wilshire_kenmore_building F & wilshire_kenmore_building F & ! wilshire_kenmore_building F wilshire_kenmore_building | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G ! wilshire_kenmore_building
Out Ground LTL: M & wilshire_kenmore_building F & ! wilshire_kenmore_building F & wilshire_kenmore_building F & ! wilshire_kenmore_building F wilshire_kenmore_building | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G ! wilshire_kenmore_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Wilshire-Kenmore Building',)
Out Lmks:['Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a'}
True

372
exact_restricted_avoidance ['c'] Input utterance: navigate to Metro, exactly three times
True Ground LTL: M & metro F & ! metro F & metro F & ! metro F metro | ! metro G | metro G | ! metro G | metro G | ! metro G | metro G ! metro
Out Ground LTL: M & metro F & ! metro F & metro F & ! metro F metro | ! metro G | metro G | ! metro G | metro G | ! metro G | metro G ! metro
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Metro',)
Out Lmks:['Metro']
Out Grounds: {'Metro'}
Placeholder Map: {'Metro': 'a'}
True

373
exact_restricted_avoidance ['c'] Input utterance: navigate to POT, exactly three times
True Ground LTL: M & pot F & ! pot F & pot F & ! pot F pot | ! pot G | pot G | ! pot G | pot G | ! pot G | pot G ! pot
Out Ground LTL: M & pot F & ! pot F & pot F & ! pot F pot | ! pot G | pot G | ! pot G | pot G | ! pot G | pot G ! pot
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('POT',)
Out Lmks:['POT']
Out Grounds: {'POT'}
Placeholder Map: {'POT': 'a'}
True

374
exact_restricted_avoidance ['c'] Input utterance: visit Togo's, exactly three times no more no less
True Ground LTL: M & togos F & ! togos F & togos F & ! togos F togos | ! togos G | togos G | ! togos G | togos G | ! togos G | togos G ! togos
Out Ground LTL: M & togos F & ! togos F & togos F & ! togos F togos | ! togos G | togos G | ! togos G | togos G | ! togos G | togos G ! togos
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Togo's",)
Out Lmks:["Togo's"]
Out Grounds: {"Togo's"}
Placeholder Map: {"Togo's": 'a'}
True

375
exact_restricted_avoidance ['c'] Input utterance: visit Neris Filipino Dining, exactly three times no more no less
True Ground LTL: M & neris_filipino_dining F & ! neris_filipino_dining F & neris_filipino_dining F & ! neris_filipino_dining F neris_filipino_dining | ! neris_filipino_dining G | neris_filipino_dining G | ! neris_filipino_dining G | neris_filipino_dining G | ! neris_filipino_dining G | neris_filipino_dining G ! neris_filipino_dining
Out Ground LTL: M & neris_filipino_dining F & ! neris_filipino_dining F & neris_filipino_dining F & ! neris_filipino_dining F neris_filipino_dining | ! neris_filipino_dining G | neris_filipino_dining G | ! neris_filipino_dining G | neris_filipino_dining G | ! neris_filipino_dining G | neris_filipino_dining G ! neris_filipino_dining
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Neris Filipino Dining',)
Out Lmks:['Neris Filipino Dining']
Out Grounds: {'Neris Filipino Dining'}
Placeholder Map: {'Neris Filipino Dining': 'a'}
True

376
exact_restricted_avoidance ['c'] Input utterance: you have to go to Coffee Bean & Tea Leaf, and you can not go there more or less than three times
True Ground LTL: M & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F coffee_bean_&_tea_leaf | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G ! coffee_bean_&_tea_leaf
Out Ground LTL: M & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F coffee_bean_&_tea_leaf | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G ! coffee_bean_&_tea_leaf
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Coffee Bean & Tea Leaf',)
Out Lmks:['Coffee Bean & Tea Leaf']
Out Grounds: {'Coffee Bean & Tea Leaf'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a'}
True

377
exact_restricted_avoidance ['c'] Input utterance: you have to go to Foothill Transit, and you can not go there more or less than three times
True Ground LTL: M & foothill_transit F & ! foothill_transit F & foothill_transit F & ! foothill_transit F foothill_transit | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G ! foothill_transit
Out Ground LTL: M & foothill_transit F & ! foothill_transit F & foothill_transit F & ! foothill_transit F foothill_transit | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G | ! foothill_transit G | foothill_transit G ! foothill_transit
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Foothill Transit',)
Out Lmks:['Foothill Transit']
Out Grounds: {'Foothill Transit'}
Placeholder Map: {'Foothill Transit': 'a'}
True

378
exact_restricted_avoidance ['c'] Input utterance: go to Korean Bbq, more or less than three times is prohibited
True Ground LTL: M & korean_bbq F & ! korean_bbq F & korean_bbq F & ! korean_bbq F korean_bbq | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G ! korean_bbq
Out Ground LTL: M & gwang_yang_bbq F & ! gwang_yang_bbq F & gwang_yang_bbq F & ! gwang_yang_bbq F gwang_yang_bbq | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G ! gwang_yang_bbq
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Korean Bbq',)
Out Lmks:['Korean Bbq']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

379
exact_restricted_avoidance ['c'] Input utterance: go to Koko Pizza, more or less than three times is prohibited
True Ground LTL: M & koko_pizza F & ! koko_pizza F & koko_pizza F & ! koko_pizza F koko_pizza | ! koko_pizza G | koko_pizza G | ! koko_pizza G | koko_pizza G | ! koko_pizza G | koko_pizza G ! koko_pizza
Out Ground LTL: M & koko_pizza F & ! koko_pizza F & koko_pizza F & ! koko_pizza F koko_pizza | ! koko_pizza G | koko_pizza G | ! koko_pizza G | koko_pizza G | ! koko_pizza G | koko_pizza G ! koko_pizza
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Koko Pizza',)
Out Lmks:['Koko Pizza']
Out Grounds: {'Koko Pizza'}
Placeholder Map: {'Koko Pizza': 'a'}
True

380
exact_restricted_avoidance ['c'] Input utterance: go to Korean BBQ, three times and do not visit it anymore
True Ground LTL: M & korean_bbq F & ! korean_bbq F & korean_bbq F & ! korean_bbq F korean_bbq | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G ! korean_bbq
Out Ground LTL: M & gwang_yang_bbq F & ! gwang_yang_bbq F & gwang_yang_bbq F & ! gwang_yang_bbq F gwang_yang_bbq | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G ! gwang_yang_bbq
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Korean BBQ',)
Out Lmks:['Korean BBQ']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

381
exact_restricted_avoidance ['c'] Input utterance: go to Metro, three times and do not visit it anymore
True Ground LTL: M & metro F & ! metro F & metro F & ! metro F metro | ! metro G | metro G | ! metro G | metro G | ! metro G | metro G ! metro
Out Ground LTL: M & metro F & ! metro F & metro F & ! metro F metro | ! metro G | metro G | ! metro G | metro G | ! metro G | metro G ! metro
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Metro',)
Out Lmks:['Metro']
Out Grounds: {'Metro'}
Placeholder Map: {'Metro': 'a'}
True

382
exact_restricted_avoidance ['c'] Input utterance: you must visit Home Cafe, exactly three times
True Ground LTL: M & home_cafe F & ! home_cafe F & home_cafe F & ! home_cafe F home_cafe | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G ! home_cafe
Out Ground LTL: M & home_cafe F & ! home_cafe F & home_cafe F & ! home_cafe F home_cafe | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G | ! home_cafe G | home_cafe G ! home_cafe
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Home Cafe',)
Out Lmks:['Home Cafe']
Out Grounds: {'Home Cafe'}
Placeholder Map: {'Home Cafe': 'a'}
True

383
exact_restricted_avoidance ['c'] Input utterance: you must visit Equitable Life Building, exactly three times
True Ground LTL: M & equitable_life_building F & ! equitable_life_building F & equitable_life_building F & ! equitable_life_building F equitable_life_building | ! equitable_life_building G | equitable_life_building G | ! equitable_life_building G | equitable_life_building G | ! equitable_life_building G | equitable_life_building G ! equitable_life_building
Out Ground LTL: M & equitable_life_building F & ! equitable_life_building F & equitable_life_building F & ! equitable_life_building F equitable_life_building | ! equitable_life_building G | equitable_life_building G | ! equitable_life_building G | equitable_life_building G | ! equitable_life_building G | equitable_life_building G ! equitable_life_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Equitable Life Building',)
Out Lmks:['Equitable Life Building']
Out Grounds: {'Equitable Life Building'}
Placeholder Map: {'Equitable Life Building': 'a'}
True

384
exact_restricted_avoidance ['c'] Input utterance: visit The Line, three times and never revisit it again
True Ground LTL: M & the_line F & ! the_line F & the_line F & ! the_line F the_line | ! the_line G | the_line G | ! the_line G | the_line G | ! the_line G | the_line G ! the_line
Out Ground LTL: M & the_line F & ! the_line F & the_line F & ! the_line F the_line | ! the_line G | the_line G | ! the_line G | the_line G | ! the_line G | the_line G ! the_line
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('The Line',)
Out Lmks:['The Line']
Out Grounds: {'The Line'}
Placeholder Map: {'The Line': 'a'}
True

385
exact_restricted_avoidance ['c'] Input utterance: visit Coffee Bean & Tea Leaf, three times and never revisit it again
True Ground LTL: M & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F coffee_bean_&_tea_leaf | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G ! coffee_bean_&_tea_leaf
Out Ground LTL: M & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F & coffee_bean_&_tea_leaf F & ! coffee_bean_&_tea_leaf F coffee_bean_&_tea_leaf | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G | ! coffee_bean_&_tea_leaf G | coffee_bean_&_tea_leaf G ! coffee_bean_&_tea_leaf
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Coffee Bean & Tea Leaf',)
Out Lmks:['Coffee Bean & Tea Leaf']
Out Grounds: {'Coffee Bean & Tea Leaf'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a'}
True

386
exact_restricted_avoidance ['c'] Input utterance: you must go to Big 5 Sporting Goods, exactly three times
True Ground LTL: M & big_5_sporting_goods F & ! big_5_sporting_goods F & big_5_sporting_goods F & ! big_5_sporting_goods F big_5_sporting_goods | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G ! big_5_sporting_goods
Out Ground LTL: M & big_5_sporting_goods F & ! big_5_sporting_goods F & big_5_sporting_goods F & ! big_5_sporting_goods F big_5_sporting_goods | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G | ! big_5_sporting_goods G | big_5_sporting_goods G ! big_5_sporting_goods
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Big 5 Sporting Goods',)
Out Lmks:['Big 5 Sporting Goods']
Out Grounds: {'Big 5 Sporting Goods'}
Placeholder Map: {'Big 5 Sporting Goods': 'a'}
True

387
exact_restricted_avoidance ['c'] Input utterance: you must go to Tarboosh middle East kitchen, exactly three times
True Ground LTL: M & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G ! tarboosh_middle_east_kitchen
Out Ground LTL: M & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G ! tarboosh_middle_east_kitchen
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Tarboosh middle East kitchen',)
Out Lmks:['Tarboosh middle East kitchen']
Out Grounds: {'Tarboosh middle East kitchen'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a'}
True

388
exact_restricted_avoidance ['c'] Input utterance: visit Wilshire-Kenmore Building, three times and then stop visiting it anymore
True Ground LTL: M & wilshire_kenmore_building F & ! wilshire_kenmore_building F & wilshire_kenmore_building F & ! wilshire_kenmore_building F wilshire_kenmore_building | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G ! wilshire_kenmore_building
Out Ground LTL: M & wilshire_kenmore_building F & ! wilshire_kenmore_building F & wilshire_kenmore_building F & ! wilshire_kenmore_building F wilshire_kenmore_building | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G | ! wilshire_kenmore_building G | wilshire_kenmore_building G ! wilshire_kenmore_building
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Wilshire-Kenmore Building',)
Out Lmks:['Wilshire-Kenmore Building']
Out Grounds: {'Wilshire-Kenmore Building'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a'}
True

389
exact_restricted_avoidance ['c'] Input utterance: visit Metro, three times and then stop visiting it anymore
True Ground LTL: M & metro F & ! metro F & metro F & ! metro F metro | ! metro G | metro G | ! metro G | metro G | ! metro G | metro G ! metro
Out Ground LTL: M & metro F & ! metro F & metro F & ! metro F metro | ! metro G | metro G | ! metro G | metro G | ! metro G | metro G ! metro
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Metro',)
Out Lmks:['Metro']
Out Grounds: {'Metro'}
Placeholder Map: {'Metro': 'a'}
True

390
exact_restricted_avoidance ['c'] Input utterance: you are required to visit Seaweed, on exactly three separate instances
True Ground LTL: M & seaweed F & ! seaweed F & seaweed F & ! seaweed F seaweed | ! seaweed G | seaweed G | ! seaweed G | seaweed G | ! seaweed G | seaweed G ! seaweed
Out Ground LTL: M & seaweed F & ! seaweed F & seaweed F seaweed | ! seaweed G | seaweed G | ! seaweed G | seaweed G | ! seaweed G | seaweed G ! seaweed
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Seaweed',)
Out Lmks:['Seaweed']
Out Grounds: {'Seaweed'}
Placeholder Map: {'Seaweed': 'a'}
False

391
exact_restricted_avoidance ['c'] Input utterance: you are required to visit Central Plaza 1, on exactly three separate instances
True Ground LTL: M & central_plaza_1 F & ! central_plaza_1 F & central_plaza_1 F & ! central_plaza_1 F central_plaza_1 | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G ! central_plaza_1
Out Ground LTL: M & central_plaza_1 F & ! central_plaza_1 F & central_plaza_1 F central_plaza_1 | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G ! central_plaza_1
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Central Plaza 1',)
Out Lmks:['Central Plaza 1']
Out Grounds: {'Central Plaza 1'}
Placeholder Map: {'Central Plaza 1': 'a'}
False

392
exact_restricted_avoidance ['c'] Input utterance: the required number of separate visits to Happy Noodle, is exactly three
True Ground LTL: M & happy_noodle F & ! happy_noodle F & happy_noodle F & ! happy_noodle F happy_noodle | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G ! happy_noodle
Out Ground LTL: M & happy_noodle F & ! happy_noodle F & happy_noodle F & ! happy_noodle F happy_noodle | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G ! happy_noodle
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Happy Noodle',)
Out Lmks:['Happy Noodle']
Out Grounds: {'Happy Noodle'}
Placeholder Map: {'Happy Noodle': 'a'}
True

393
exact_restricted_avoidance ['c'] Input utterance: the required number of separate visits to Carl's Jr., is exactly three
True Ground LTL: M & carls_jr F & ! carls_jr F & carls_jr F & ! carls_jr F carls_jr | ! carls_jr G | carls_jr G | ! carls_jr G | carls_jr G | ! carls_jr G | carls_jr G ! carls_jr
Out Ground LTL: M & carls_jr F & ! carls_jr F & carls_jr F & ! carls_jr F carls_jr | ! carls_jr G | carls_jr G | ! carls_jr G | carls_jr G | ! carls_jr G | carls_jr G ! carls_jr
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ("Carl's Jr.",)
Out Lmks:["Carl's Jr."]
Out Grounds: {"Carl's Jr."}
Placeholder Map: {"Carl's Jr.": 'a'}
True

394
exact_restricted_avoidance ['c'] Input utterance: visit Mermaid Cafe, exactly three separate times
True Ground LTL: M & mermaid_cafe F & ! mermaid_cafe F & mermaid_cafe F & ! mermaid_cafe F mermaid_cafe | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G ! mermaid_cafe
Out Ground LTL: M & mermaid_cafe F & ! mermaid_cafe F & mermaid_cafe F & ! mermaid_cafe F mermaid_cafe | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G ! mermaid_cafe
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Mermaid Cafe',)
Out Lmks:['Mermaid Cafe']
Out Grounds: {'Mermaid Cafe'}
Placeholder Map: {'Mermaid Cafe': 'a'}
True

395
exact_restricted_avoidance ['c'] Input utterance: visit Zan ResPub, exactly three separate times
True Ground LTL: M & zan_respub F & ! zan_respub F & zan_respub F & ! zan_respub F zan_respub | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G ! zan_respub
Out Ground LTL: M & zan_respub F & ! zan_respub F & zan_respub F & ! zan_respub F zan_respub | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G ! zan_respub
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Zan ResPub',)
Out Lmks:['Zan ResPub']
Out Grounds: {'Zan ResPub'}
Placeholder Map: {'Zan ResPub': 'a'}
True

396
exact_restricted_avoidance ['c'] Input utterance: pass through Zan ResPub, exactly three times
True Ground LTL: M & zan_respub F & ! zan_respub F & zan_respub F & ! zan_respub F zan_respub | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G ! zan_respub
Out Ground LTL: M & zan_respub F & ! zan_respub F & zan_respub F & ! zan_respub F zan_respub | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G | ! zan_respub G | zan_respub G ! zan_respub
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Zan ResPub',)
Out Lmks:['Zan ResPub']
Out Grounds: {'Zan ResPub'}
Placeholder Map: {'Zan ResPub': 'a'}
True

397
exact_restricted_avoidance ['c'] Input utterance: pass through Korean Bbq, exactly three times
True Ground LTL: M & korean_bbq F & ! korean_bbq F & korean_bbq F & ! korean_bbq F korean_bbq | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G ! korean_bbq
Out Ground LTL: M & gwang_yang_bbq F & ! gwang_yang_bbq F & gwang_yang_bbq F & ! gwang_yang_bbq F gwang_yang_bbq | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G ! gwang_yang_bbq
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Korean Bbq',)
Out Lmks:['Korean Bbq']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

398
exact_restricted_avoidance ['c'] Input utterance: go to Tarboosh middle East kitchen, then leave Tarboosh middle East kitchen, and then repeat this exactly two more times
True Ground LTL: M & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G ! tarboosh_middle_east_kitchen
Out Ground LTL: M & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F & tarboosh_middle_east_kitchen F & ! tarboosh_middle_east_kitchen F tarboosh_middle_east_kitchen | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G | ! tarboosh_middle_east_kitchen G | tarboosh_middle_east_kitchen G ! tarboosh_middle_east_kitchen
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Tarboosh middle East kitchen',)
Out Lmks:['Tarboosh middle East kitchen']
Out Grounds: {'Tarboosh middle East kitchen'}
Placeholder Map: {'Tarboosh middle East kitchen': 'a'}
False

399
exact_restricted_avoidance ['c'] Input utterance: go to Korean BBQ, then leave Korean BBQ, and then repeat this exactly two more times
True Ground LTL: M & korean_bbq F & ! korean_bbq F & korean_bbq F & ! korean_bbq F korean_bbq | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G | ! korean_bbq G | korean_bbq G ! korean_bbq
Out Ground LTL: M & gwang_yang_bbq F & ! gwang_yang_bbq F & gwang_yang_bbq F & ! gwang_yang_bbq F & gwang_yang_bbq F & ! gwang_yang_bbq F gwang_yang_bbq | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G | ! gwang_yang_bbq G | gwang_yang_bbq G ! gwang_yang_bbq
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Korean BBQ',)
Out Lmks:['Korean BBQ']
Out Grounds: {'Gwang Yang BBQ'}
Placeholder Map: {'Gwang Yang BBQ': 'a'}
False

400
exact_restricted_avoidance ['c'] Input utterance: make sure that you have exactly three separate visits to Bayou Smokehouse
True Ground LTL: M & bayou_smokehouse F & ! bayou_smokehouse F & bayou_smokehouse F & ! bayou_smokehouse F bayou_smokehouse | ! bayou_smokehouse G | bayou_smokehouse G | ! bayou_smokehouse G | bayou_smokehouse G | ! bayou_smokehouse G | bayou_smokehouse G ! bayou_smokehouse
Out Ground LTL: M & bayou_smokehouse F & ! bayou_smokehouse F & bayou_smokehouse F & ! bayou_smokehouse F bayou_smokehouse | ! bayou_smokehouse G | bayou_smokehouse G | ! bayou_smokehouse G | bayou_smokehouse G | ! bayou_smokehouse G | bayou_smokehouse G ! bayou_smokehouse
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Bayou Smokehouse',)
Out Lmks:['Bayou Smokehouse']
Out Grounds: {'Bayou Smokehouse'}
Placeholder Map: {'Bayou Smokehouse': 'a'}
True

401
exact_restricted_avoidance ['c'] Input utterance: make sure that you have exactly three separate visits to Happy Noodle
True Ground LTL: M & happy_noodle F & ! happy_noodle F & happy_noodle F & ! happy_noodle F happy_noodle | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G ! happy_noodle
Out Ground LTL: M & happy_noodle F & ! happy_noodle F & happy_noodle F & ! happy_noodle F happy_noodle | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G | ! happy_noodle G | happy_noodle G ! happy_noodle
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
True Lmks: ('Happy Noodle',)
Out Lmks:['Happy Noodle']
Out Grounds: {'Happy Noodle'}
Placeholder Map: {'Happy Noodle': 'a'}
True

402
exact_restricted_avoidance ['c'] Input utterance: do not exceed or fall short on three separate visits to Central Plaza 1
True Ground LTL: M & central_plaza_1 F & ! central_plaza_1 F & central_plaza_1 F & ! central_plaza_1 F central_plaza_1 | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G | ! central_plaza_1 G | central_plaza_1 G ! central_plaza_1
Out Ground LTL: & & U ! central_plaza_1 U central_plaza_1 & U ! central_plaza_1 U central_plaza_1 & U ! central_plaza_1 U central_plaza_1 F central_plaza_1
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: & & U ! a U a & U ! a U a & U ! a U a F a
True Lmks: ('Central Plaza 1',)
Out Lmks:['Central Plaza 1']
Out Grounds: {'Central Plaza 1'}
Placeholder Map: {'Central Plaza 1': 'a'}
Syntax Error

403
exact_restricted_avoidance ['c'] Input utterance: do not exceed or fall short on three separate visits to Mermaid Cafe
True Ground LTL: M & mermaid_cafe F & ! mermaid_cafe F & mermaid_cafe F & ! mermaid_cafe F mermaid_cafe | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G | ! mermaid_cafe G | mermaid_cafe G ! mermaid_cafe
Out Ground LTL: & & U ! mermaid_cafe U mermaid_cafe & U ! mermaid_cafe U mermaid_cafe & U ! mermaid_cafe U mermaid_cafe F mermaid_cafe
True Symbolic LTL: M & a F & ! a F & a F & ! a F a | ! a G | a G | ! a G | a G | ! a G | a G ! a
Out Symbolic LTL: & & U ! a U a & U ! a U a & U ! a U a F a
True Lmks: ('Mermaid Cafe',)
Out Lmks:['Mermaid Cafe']
Out Grounds: {'Mermaid Cafe'}
Placeholder Map: {'Mermaid Cafe': 'a'}
Syntax Error

404
future_avoidance ['a', 'b'] Input utterance: do not go to BBQ Premium Chicken, once you have visited Sun Nong Dan
True Ground LTL: G i sun_nong_dan X G ! bbq_premium_chicken
Out Ground LTL: ! F & sun_nong_dan U bbq_premium_chicken
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a U b
True Lmks: ('Sun Nong Dan', 'BBQ Premium Chicken')
Out Lmks:['Sun Nong Dan', 'BBQ Premium Chicken']
Out Grounds: {'Sun Nong Dan', 'BBQ Premium Chicken'}
Placeholder Map: {'Sun Nong Dan': 'a', 'BBQ Premium Chicken': 'b'}
Syntax Error

405
future_avoidance ['a', 'b'] Input utterance: do not go to Bayou Smokehouse, once you have visited Happy Noodle
True Ground LTL: G i happy_noodle X G ! bayou_smokehouse
Out Ground LTL: ! F & happy_noodle U bayou_smokehouse
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a U b
True Lmks: ('Happy Noodle', 'Bayou Smokehouse')
Out Lmks:['Happy Noodle', 'Bayou Smokehouse']
Out Grounds: {'Happy Noodle', 'Bayou Smokehouse'}
Placeholder Map: {'Happy Noodle': 'a', 'Bayou Smokehouse': 'b'}
Syntax Error

406
future_avoidance ['a', 'b'] Input utterance: never go to Central Plaza 3, once you go to Mali Taste of Thailand
True Ground LTL: G i mali_taste_of_thailand X G ! central_plaza_3
Out Ground LTL: G i mali_taste_of_thailand X central_plaza_3
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Mali Taste of Thailand', 'Central Plaza 3')
Out Lmks:['Central Plaza 3', 'Mali Taste of Thailand']
Out Grounds: {'Central Plaza 3', 'Mali Taste of Thailand'}
Placeholder Map: {'Central Plaza 3': 'a', 'Mali Taste of Thailand': 'b'}
False

407
future_avoidance ['a', 'b'] Input utterance: never go to POT, once you go to Seaweed
True Ground LTL: G i seaweed X G ! pot
Out Ground LTL: G i seaweed X pot
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Seaweed', 'POT')
Out Lmks:['Seaweed', 'POT']
Out Grounds: {'Seaweed', 'POT'}
Placeholder Map: {'Seaweed': 'a', 'POT': 'b'}
False

408
future_avoidance ['a', 'b'] Input utterance: after you visit Bayou Smokehouse, you can not visit Consulat General of the Republic of Indonesia, afterward
True Ground LTL: G i bayou_smokehouse X G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: G e bayou_smokehouse X consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('Bayou Smokehouse', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Bayou Smokehouse']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Bayou Smokehouse'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Bayou Smokehouse': 'b'}
False

409
future_avoidance ['a', 'b'] Input utterance: after you visit Koko Pizza, you can not visit Foothill Transit, afterward
True Ground LTL: G i koko_pizza X G ! foothill_transit
Out Ground LTL: G e koko_pizza X foothill_transit
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('Koko Pizza', 'Foothill Transit')
Out Lmks:['Foothill Transit', 'Koko Pizza']
Out Grounds: {'Foothill Transit', 'Koko Pizza'}
Placeholder Map: {'Foothill Transit': 'a', 'Koko Pizza': 'b'}
False

410
future_avoidance ['a', 'b'] Input utterance: once POT, is visited you can not go to Etude Lounge, any more
True Ground LTL: G i pot X G ! etude_lounge
Out Ground LTL: G e pot X etude_lounge
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('POT', 'Etude Lounge')
Out Lmks:['POT', 'Etude Lounge']
Out Grounds: {'POT', 'Etude Lounge'}
Placeholder Map: {'POT': 'a', 'Etude Lounge': 'b'}
False

411
future_avoidance ['a', 'b'] Input utterance: once Robeks Juice, is visited you can not go to Koko Pizza, any more
True Ground LTL: G i robeks_juice X G ! koko_pizza
Out Ground LTL: G e robeks_juice X koko_pizza
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Robeks Juice', 'Koko Pizza')
Out Lmks:['Robeks Juice', 'Koko Pizza']
Out Grounds: {'Robeks Juice', 'Koko Pizza'}
Placeholder Map: {'Robeks Juice': 'a', 'Koko Pizza': 'b'}
False

412
future_avoidance ['a', 'b'] Input utterance: you can visit Bongchu, before POT, is visited but you can never visit Bongchu, afterward
True Ground LTL: G i pot X G ! bongchu
Out Ground LTL: G e pot X bongchu
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('POT', 'Bongchu')
Out Lmks:['POT', 'Bongchu']
Out Grounds: {'POT', 'Bongchu'}
Placeholder Map: {'POT': 'a', 'Bongchu': 'b'}
False

413
future_avoidance ['a', 'b'] Input utterance: you can visit Togo's, before Big 5 Sporting Goods, is visited but you can never visit Togo's, afterward
True Ground LTL: G i big_5_sporting_goods X G ! togos
Out Ground LTL: G e togos X big_5_sporting_goods
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e a X b
True Lmks: ('Big 5 Sporting Goods', "Togo's")
Out Lmks:['Big 5 Sporting Goods', "Togo's"]
Out Grounds: {"Togo's", 'Big 5 Sporting Goods'}
Placeholder Map: {"Togo's": 'a', 'Big 5 Sporting Goods': 'b'}
False

414
future_avoidance ['a', 'b'] Input utterance: after you go to Mermaid Cafe, you have to avoid Metro
True Ground LTL: G i mermaid_cafe X G ! metro
Out Ground LTL: G i mermaid_cafe X metro
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Mermaid Cafe', 'Metro')
Out Lmks:['Metro', 'Mermaid Cafe']
Out Grounds: {'Metro', 'Mermaid Cafe'}
Placeholder Map: {'Metro': 'a', 'Mermaid Cafe': 'b'}
False

415
future_avoidance ['a', 'b'] Input utterance: after you go to Metro, you have to avoid Home Cafe
True Ground LTL: G i metro X G ! home_cafe
Out Ground LTL: G i metro X home_cafe
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Metro', 'Home Cafe')
Out Lmks:['Metro', 'Home Cafe']
Out Grounds: {'Metro', 'Home Cafe'}
Placeholder Map: {'Metro': 'a', 'Home Cafe': 'b'}
False

416
future_avoidance ['a', 'b'] Input utterance: you must avoid Etude Lounge, only after you go to Etude Lounge
True Ground LTL: G i central_plaza_1 X G ! etude_lounge
Out Ground LTL: & U ! etude_lounge G etude_lounge
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a G a
True Lmks: ('Central Plaza 1', 'Etude Lounge')
Out Lmks:['Etude Lounge']
Out Grounds: {'Etude Lounge'}
Placeholder Map: {'Etude Lounge': 'a'}
RER or Grounding Error

417
future_avoidance ['a', 'b'] Input utterance: you must avoid Sun Nong Dan, only after you go to Sun Nong Dan
True Ground LTL: G i consulat_general_of_the_republic_of_indonesia X G ! sun_nong_dan
Out Ground LTL: & U ! sun_nong_dan G sun_nong_dan
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: & U ! a G a
True Lmks: ('Consulat General of the Republic of Indonesia', 'Sun Nong Dan')
Out Lmks:['Sun Nong Dan']
Out Grounds: {'Sun Nong Dan'}
Placeholder Map: {'Sun Nong Dan': 'a'}
RER or Grounding Error

418
future_avoidance ['a', 'b'] Input utterance: once you have gone to POT, you must stay away from Wilshire/Normandie
True Ground LTL: G i pot X G ! wilshire_normandie
Out Ground LTL: G e pot X wilshire_normandie
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('POT', 'Wilshire/Normandie')
Out Lmks:['Wilshire/Normandie', 'POT']
Out Grounds: {'Wilshire/Normandie', 'POT'}
Placeholder Map: {'Wilshire/Normandie': 'a', 'POT': 'b'}
False

419
future_avoidance ['a', 'b'] Input utterance: once you have gone to Korean Bbq, you must stay away from Equitable Life Building
True Ground LTL: G i korean_bbq X G ! equitable_life_building
Out Ground LTL: G e gwang_yang_bbq X equitable_life_building
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G e b X a
True Lmks: ('Korean Bbq', 'Equitable Life Building')
Out Lmks:['Equitable Life Building', 'Korean Bbq']
Out Grounds: {'Equitable Life Building', 'Gwang Yang BBQ'}
Placeholder Map: {'Equitable Life Building': 'a', 'Gwang Yang BBQ': 'b'}
False

420
future_avoidance ['a', 'b'] Input utterance: you must stay away from Foothill Transit, once you have gone to Koko Pizza
True Ground LTL: G i koko_pizza X G ! foothill_transit
Out Ground LTL: G i koko_pizza X foothill_transit
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Koko Pizza', 'Foothill Transit')
Out Lmks:['Foothill Transit', 'Koko Pizza']
Out Grounds: {'Foothill Transit', 'Koko Pizza'}
Placeholder Map: {'Foothill Transit': 'a', 'Koko Pizza': 'b'}
False

421
future_avoidance ['a', 'b'] Input utterance: you must stay away from Consulat General of the Republic of Indonesia, once you have gone to Big 5 Sporting Goods
True Ground LTL: G i big_5_sporting_goods X G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: G i big_5_sporting_goods X consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Big 5 Sporting Goods', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Consulat General of the Republic of Indonesia', 'Big 5 Sporting Goods']
Out Grounds: {'Consulat General of the Republic of Indonesia', 'Big 5 Sporting Goods'}
Placeholder Map: {'Consulat General of the Republic of Indonesia': 'a', 'Big 5 Sporting Goods': 'b'}
False

422
future_avoidance ['a', 'b'] Input utterance: you can not move to Foothill Transit, after you reach Crystal Spa
True Ground LTL: G i crystal_spa X G ! foothill_transit
Out Ground LTL: G i crystal_spa X foothill_transit
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Crystal Spa', 'Foothill Transit')
Out Lmks:['Crystal Spa', 'Foothill Transit']
Out Grounds: {'Crystal Spa', 'Foothill Transit'}
Placeholder Map: {'Crystal Spa': 'a', 'Foothill Transit': 'b'}
False

423
future_avoidance ['a', 'b'] Input utterance: you can not move to Metro, after you reach Foothill Transit
True Ground LTL: G i foothill_transit X G ! metro
Out Ground LTL: G i foothill_transit X metro
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Foothill Transit', 'Metro')
Out Lmks:['Metro', 'Foothill Transit']
Out Grounds: {'Metro', 'Foothill Transit'}
Placeholder Map: {'Metro': 'a', 'Foothill Transit': 'b'}
False

424
future_avoidance ['a', 'b'] Input utterance: after you reach Mermaid Cafe, you can not move to Consulat General of the Republic of Indonesia
True Ground LTL: G i mermaid_cafe X G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: G i mermaid_cafe X consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Mermaid Cafe', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Mermaid Cafe', 'Consulat General of the Republic of Indonesia']
Out Grounds: {'Mermaid Cafe', 'Consulat General of the Republic of Indonesia'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Consulat General of the Republic of Indonesia': 'b'}
False

425
future_avoidance ['a', 'b'] Input utterance: after you reach Foothill Transit, you can not move to Ice Cream
True Ground LTL: G i foothill_transit X G ! ice_cream
Out Ground LTL: G i foothill_transit X ice_cream
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Foothill Transit', 'Ice Cream')
Out Lmks:['Foothill Transit', 'Ice Cream']
Out Grounds: {'Foothill Transit', 'Ice Cream'}
Placeholder Map: {'Foothill Transit': 'a', 'Ice Cream': 'b'}
False

426
future_avoidance ['a', 'b'] Input utterance: once you go to Carl's Jr., you have to avoid The Line, at all costs
True Ground LTL: G i carls_jr X G ! the_line
Out Ground LTL: G i carls_jr X the_line
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Carl's Jr.", 'The Line')
Out Lmks:["Carl's Jr.", 'The Line']
Out Grounds: {"Carl's Jr.", 'The Line'}
Placeholder Map: {"Carl's Jr.": 'a', 'The Line': 'b'}
False

427
future_avoidance ['a', 'b'] Input utterance: once you go to Bongchu, you have to avoid California Design College, at all costs
True Ground LTL: G i bongchu X G ! california_design_college
Out Ground LTL: G i bongchu X california_design_college
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Bongchu', 'California Design College')
Out Lmks:['Bongchu', 'California Design College']
Out Grounds: {'Bongchu', 'California Design College'}
Placeholder Map: {'Bongchu': 'a', 'California Design College': 'b'}
False

428
future_avoidance ['a', 'b'] Input utterance: you have to avoid Crystal Spa, once you go to The Boiling Crab
True Ground LTL: G i the_boiling_crab X G ! crystal_spa
Out Ground LTL: G i the_boiling_crab X crystal_spa
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('The Boiling Crab', 'Crystal Spa')
Out Lmks:['Crystal Spa', 'The Boiling Crab']
Out Grounds: {'Crystal Spa', 'The Boiling Crab'}
Placeholder Map: {'Crystal Spa': 'a', 'The Boiling Crab': 'b'}
False

429
future_avoidance ['a', 'b'] Input utterance: you have to avoid Metro, once you go to Sun Nong Dan
True Ground LTL: G i sun_nong_dan X G ! metro
Out Ground LTL: G i sun_nong_dan X metro
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Sun Nong Dan', 'Metro')
Out Lmks:['Metro', 'Sun Nong Dan']
Out Grounds: {'Metro', 'Sun Nong Dan'}
Placeholder Map: {'Metro': 'a', 'Sun Nong Dan': 'b'}
False

430
future_avoidance ['a', 'b'] Input utterance: do not visit POT, after Foothill Transit, is visited
True Ground LTL: G i foothill_transit X G ! pot
Out Ground LTL: ! F & foothill_transit F pot
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a F b
True Lmks: ('Foothill Transit', 'POT')
Out Lmks:['Foothill Transit', 'POT']
Out Grounds: {'Foothill Transit', 'POT'}
Placeholder Map: {'Foothill Transit': 'a', 'POT': 'b'}
False

431
future_avoidance ['a', 'b'] Input utterance: do not visit Consulat General of the Republic of Indonesia, after Crystal Spa, is visited
True Ground LTL: G i crystal_spa X G ! consulat_general_of_the_republic_of_indonesia
Out Ground LTL: ! F & crystal_spa F consulat_general_of_the_republic_of_indonesia
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: ! F & a F b
True Lmks: ('Crystal Spa', 'Consulat General of the Republic of Indonesia')
Out Lmks:['Crystal Spa', 'Consulat General of the Republic of Indonesia']
Out Grounds: {'Crystal Spa', 'Consulat General of the Republic of Indonesia'}
Placeholder Map: {'Crystal Spa': 'a', 'Consulat General of the Republic of Indonesia': 'b'}
False

432
future_avoidance ['a', 'b'] Input utterance: you can go to Bongchu, but you must not go to California Design College, after that
True Ground LTL: G i bongchu X G ! california_design_college
Out Ground LTL: G i bongchu X california_design_college
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Bongchu', 'California Design College')
Out Lmks:['Bongchu', 'California Design College']
Out Grounds: {'Bongchu', 'California Design College'}
Placeholder Map: {'Bongchu': 'a', 'California Design College': 'b'}
False

433
future_avoidance ['a', 'b'] Input utterance: you can go to Details, but you must not go to Bongchu, after that
True Ground LTL: G i details X G ! bongchu
Out Ground LTL: G i details X bongchu
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Details', 'Bongchu')
Out Lmks:['Details', 'Bongchu']
Out Grounds: {'Details', 'Bongchu'}
Placeholder Map: {'Details': 'a', 'Bongchu': 'b'}
False

434
future_avoidance ['a', 'b'] Input utterance: any visit to Togo's, is not allowed after you visit Bayou Smokehouse
True Ground LTL: G i bayou_smokehouse X G ! togos
Out Ground LTL: G i bayou_smokehouse X togos
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Bayou Smokehouse', "Togo's")
Out Lmks:["Togo's", 'Bayou Smokehouse']
Out Grounds: {"Togo's", 'Bayou Smokehouse'}
Placeholder Map: {"Togo's": 'a', 'Bayou Smokehouse': 'b'}
False

435
future_avoidance ['a', 'b'] Input utterance: any visit to Korean BBQ, is not allowed after you visit The Line
True Ground LTL: G i the_line X G ! korean_bbq
Out Ground LTL: G i the_line X gwang_yang_bbq
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('The Line', 'Korean BBQ')
Out Lmks:['Korean BBQ', 'The Line']
Out Grounds: {'Gwang Yang BBQ', 'The Line'}
Placeholder Map: {'Gwang Yang BBQ': 'a', 'The Line': 'b'}
False

436
future_avoidance ['a', 'b'] Input utterance: once The Line, is reached after that you can never visit Foothill Transit
True Ground LTL: G i the_line X G ! foothill_transit
Out Ground LTL: G ! foothill_transit G the_line
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a G b
True Lmks: ('The Line', 'Foothill Transit')
Out Lmks:['Foothill Transit', 'The Line']
Out Grounds: {'Foothill Transit', 'The Line'}
Placeholder Map: {'Foothill Transit': 'a', 'The Line': 'b'}
Syntax Error

437
future_avoidance ['a', 'b'] Input utterance: once Zan ResPub, is reached after that you can never visit Neris Filipino Dining
True Ground LTL: G i zan_respub X G ! neris_filipino_dining
Out Ground LTL: G ! neris_filipino_dining G zan_respub
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! b G a
True Lmks: ('Zan ResPub', 'Neris Filipino Dining')
Out Lmks:['Zan ResPub', 'Neris Filipino Dining']
Out Grounds: {'Zan ResPub', 'Neris Filipino Dining'}
Placeholder Map: {'Zan ResPub': 'a', 'Neris Filipino Dining': 'b'}
Syntax Error

438
future_avoidance ['a', 'b'] Input utterance: Etude Lounge, can never be visited once Mermaid Cafe, occurs
True Ground LTL: G i mermaid_cafe X G ! etude_lounge
Out Ground LTL: G ! mermaid_cafe G ! etude_lounge
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a G ! b
True Lmks: ('Mermaid Cafe', 'Etude Lounge')
Out Lmks:['Mermaid Cafe', 'Etude Lounge']
Out Grounds: {'Mermaid Cafe', 'Etude Lounge'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Etude Lounge': 'b'}
Syntax Error

439
future_avoidance ['a', 'b'] Input utterance: The Line, can never be visited once Details, occurs
True Ground LTL: G i details X G ! the_line
Out Ground LTL: G ! details G ! the_line
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a G ! b
True Lmks: ('Details', 'The Line')
Out Lmks:['Details', 'The Line']
Out Grounds: {'Details', 'The Line'}
Placeholder Map: {'Details': 'a', 'The Line': 'b'}
Syntax Error

440
future_avoidance ['a', 'b'] Input utterance: if you go to BBQ Premium Chicken, you can never go to Foothill Transit, after that
True Ground LTL: G i bbq_premium_chicken X G ! foothill_transit
Out Ground LTL: G i bbq_premium_chicken X foothill_transit
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('BBQ Premium Chicken', 'Foothill Transit')
Out Lmks:['Foothill Transit', 'BBQ Premium Chicken']
Out Grounds: {'Foothill Transit', 'BBQ Premium Chicken'}
Placeholder Map: {'Foothill Transit': 'a', 'BBQ Premium Chicken': 'b'}
False

441
future_avoidance ['a', 'b'] Input utterance: if you go to Hair News, you can never go to Mermaid Cafe, after that
True Ground LTL: G i hair_news X G ! mermaid_cafe
Out Ground LTL: G i hair_news X mermaid_cafe
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i b X a
True Lmks: ('Hair News', 'Mermaid Cafe')
Out Lmks:['Hair News', 'Mermaid Cafe']
Out Grounds: {'Mermaid Cafe', 'Hair News'}
Placeholder Map: {'Mermaid Cafe': 'a', 'Hair News': 'b'}
False

442
future_avoidance ['a', 'b'] Input utterance: if Wilshire/Normandie, happens that prevents Wako, from happening afterwards
True Ground LTL: G i wilshire_normandie X G ! wako
Out Ground LTL: G i wilshire_normandie X wako
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Wilshire/Normandie', 'Wako')
Out Lmks:['Wilshire/Normandie', 'Wako']
Out Grounds: {'Wilshire/Normandie', 'Wako'}
Placeholder Map: {'Wilshire/Normandie': 'a', 'Wako': 'b'}
False

443
future_avoidance ['a', 'b'] Input utterance: if Togo's, happens that prevents California Design College, from happening afterwards
True Ground LTL: G i togos X G ! california_design_college
Out Ground LTL: G i togos X california_design_college
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ("Togo's", 'California Design College')
Out Lmks:["Togo's", 'California Design College']
Out Grounds: {"Togo's", 'California Design College'}
Placeholder Map: {"Togo's": 'a', 'California Design College': 'b'}
False

444
future_avoidance ['a', 'b'] Input utterance: if you visit Details, you are not allowed to reach Crystal Spa, afterwards
True Ground LTL: G i details X G ! crystal_spa
Out Ground LTL: G i details X crystal_spa
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Details', 'Crystal Spa')
Out Lmks:['Details', 'Crystal Spa']
Out Grounds: {'Details', 'Crystal Spa'}
Placeholder Map: {'Details': 'a', 'Crystal Spa': 'b'}
False

445
future_avoidance ['a', 'b'] Input utterance: if you visit Wilshire-Kenmore Building, you are not allowed to reach Hair News, afterwards
True Ground LTL: G i wilshire_kenmore_building X G ! hair_news
Out Ground LTL: G i wilshire_kenmore_building X hair_news
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Wilshire-Kenmore Building', 'Hair News')
Out Lmks:['Wilshire-Kenmore Building', 'Hair News']
Out Grounds: {'Wilshire-Kenmore Building', 'Hair News'}
Placeholder Map: {'Wilshire-Kenmore Building': 'a', 'Hair News': 'b'}
False

446
future_avoidance ['a', 'b'] Input utterance: whenever you observe Coffee Bean & Tea Leaf, this locks California Design College, from becoming true from the next instance
True Ground LTL: G i coffee_bean_&_tea_leaf X G ! california_design_college
Out Ground LTL: G i coffee_bean_&_tea_leaf X california_design_college
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Coffee Bean & Tea Leaf', 'California Design College')
Out Lmks:['Coffee Bean & Tea Leaf', 'California Design College']
Out Grounds: {'Coffee Bean & Tea Leaf', 'California Design College'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'California Design College': 'b'}
False

447
future_avoidance ['a', 'b'] Input utterance: whenever you observe Coffee Bean & Tea Leaf, this locks Central Plaza 1, from becoming true from the next instance
True Ground LTL: G i coffee_bean_&_tea_leaf X G ! central_plaza_1
Out Ground LTL: G i coffee_bean_&_tea_leaf X central_plaza_1
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Coffee Bean & Tea Leaf', 'Central Plaza 1')
Out Lmks:['Coffee Bean & Tea Leaf', 'Central Plaza 1']
Out Grounds: {'Coffee Bean & Tea Leaf', 'Central Plaza 1'}
Placeholder Map: {'Coffee Bean & Tea Leaf': 'a', 'Central Plaza 1': 'b'}
False

448
future_avoidance ['a', 'b'] Input utterance: seeing Coffee Bean & Tea Leaf, locks Happy Noodle, from being true for all time instances starting from the next one
True Ground LTL: G i coffee_bean_&_tea_leaf X G ! happy_noodle
Out Ground LTL: G ! happy_noodle
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G ! a
True Lmks: ('Coffee Bean & Tea Leaf', 'Happy Noodle')
Out Lmks:['Happy Noodle', 'Coffee Bean & Tea Leaf']
Out Grounds: {'Happy Noodle', 'Coffee Bean & Tea Leaf'}
Placeholder Map: {'Happy Noodle': 'a', 'Coffee Bean & Tea Leaf': 'b'}
False

449
future_avoidance ['a', 'b'] Input utterance: seeing Details, locks Coffee Bean & Tea Leaf, from being true for all time instances starting from the next one
True Ground LTL: G i details X G ! coffee_bean_&_tea_leaf
Out Ground LTL: G i details X coffee_bean_&_tea_leaf
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Details', 'Coffee Bean & Tea Leaf')
Out Lmks:['Details', 'locks Coffee Bean & Tea Leaf']
Out Grounds: {'Details', 'Coffee Bean & Tea Leaf'}
Placeholder Map: {'Details': 'a', 'Coffee Bean & Tea Leaf': 'b'}
False

450
future_avoidance ['a', 'b'] Input utterance: after you get to Happy Noodle, you must avoid Carl's Jr.
True Ground LTL: G i happy_noodle X G ! carls_jr
Out Ground LTL: G i happy_noodle X carls_jr
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Happy Noodle', "Carl's Jr.")
Out Lmks:['Happy Noodle', "Carl's Jr."]
Out Grounds: {'Happy Noodle', "Carl's Jr."}
Placeholder Map: {'Happy Noodle': 'a', "Carl's Jr.": 'b'}
False

451
future_avoidance ['a', 'b'] Input utterance: after you get to Central Plaza 3, you must avoid Mali Taste of Thailand
True Ground LTL: G i central_plaza_3 X G ! mali_taste_of_thailand
Out Ground LTL: G i central_plaza_3 X mali_taste_of_thailand
True Symbolic LTL: G i a X G ! b
Out Symbolic LTL: G i a X b
True Lmks: ('Central Plaza 3', 'Mali Taste of Thailand')
Out Lmks:['Central Plaza 3', 'Mali Taste of Thailand']
Out Grounds: {'Central Plaza 3', 'Mali Taste of Thailand'}
Placeholder Map: {'Central Plaza 3': 'a', 'Mali Taste of Thailand': 'b'}
False

Language to LTL translation accuracy: 0.5331858407079646


